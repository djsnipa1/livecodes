{
  "version": 3,
  "sources": ["../../src/sdk/react.tsx", "../../src/sdk/index.ts"],
  "sourcesContent": ["// @ts-ignore\n// eslint-disable-next-line import/no-unresolved\nimport React, { useEffect, useRef } from 'react';\nimport type { EmbedOptions, Playground } from './models';\nimport { createPlayground } from '.';\n\nexport interface Props extends EmbedOptions {\n  className?: string;\n  style?: Record<string, string>;\n  height?: string;\n  sdkReady?: (sdk: Playground) => void;\n}\n\nexport default function LiveCodes(props: Props) {\n  const { className, style, height, sdkReady, ...options } = props;\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  let playground: Playground | undefined;\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    createPlayground(containerRef.current, options).then((sdk) => {\n      playground = sdk;\n      if (typeof sdkReady === 'function') {\n        sdkReady(sdk);\n      }\n    });\n\n    return () => {\n      playground?.destroy();\n    };\n  }, []);\n\n  return <div ref={containerRef} className={className} style={style} data-height={height}></div>;\n}\n", "import type {\r\n  API,\r\n  Code,\r\n  Config,\r\n  ChangeHandler,\r\n  EmbedOptions,\r\n  Playground,\r\n  UrlQueryParams,\r\n  CustomEvents,\r\n} from './models';\r\n\r\nexport type { Code, Config, EmbedOptions, Playground };\r\nexport const createPlayground = async (\r\n  container: string | HTMLElement,\r\n  options: EmbedOptions = {},\r\n): Promise<Playground> => {\r\n  const {\r\n    appUrl = 'https://livecodes.io/',\r\n    params = {},\r\n    config = {},\r\n    import: importFrom,\r\n    lite = false,\r\n    loading = 'lazy',\r\n    template,\r\n    view = 'split',\r\n  } = options;\r\n\r\n  let containerElement: HTMLElement | null;\r\n  if (typeof container === 'string') {\r\n    containerElement = document.querySelector(container);\r\n  } else {\r\n    containerElement = container;\r\n  }\r\n  if (!container) {\r\n    throw new Error('Container element is required.');\r\n  }\r\n  if (!containerElement) {\r\n    throw new Error(`Cannot find element: \"${container}\"`);\r\n  }\r\n\r\n  let url: URL;\r\n  try {\r\n    url = new URL(appUrl);\r\n  } catch {\r\n    throw new Error(`\"${appUrl}\" is not a valid URL.`);\r\n  }\r\n\r\n  const origin = url.origin;\r\n\r\n  if (typeof params === 'object') {\r\n    (Object.keys(params) as Array<keyof UrlQueryParams>).forEach((param) => {\r\n      url.searchParams.set(param, String(params[param]));\r\n    });\r\n  }\r\n\r\n  if (typeof config === 'string') {\r\n    try {\r\n      new URL(config);\r\n      url.searchParams.set('config', config);\r\n    } catch {\r\n      throw new Error(`\"config\" is not a valid URL or configuration object.`);\r\n    }\r\n  } else if (typeof config === 'object') {\r\n    if (Object.keys(config).length > 0) {\r\n      url.searchParams.set('config', 'sdk');\r\n    }\r\n  } else {\r\n    throw new Error(`\"config\" is not a valid URL or configuration object.`);\r\n  }\r\n\r\n  if (template) {\r\n    url.searchParams.set('template', template);\r\n  }\r\n\r\n  if (importFrom) {\r\n    url.searchParams.set('x', importFrom);\r\n  }\r\n\r\n  url.searchParams.set(lite ? 'lite' : 'embed', 'true');\r\n  url.searchParams.set('loading', loading);\r\n  url.searchParams.set('view', view);\r\n\r\n  let destroyed = false;\r\n  const alreadyDestroyedMessage = 'Cannot call API methods after calling `destroy()`.';\r\n\r\n  const createIframe = () =>\r\n    new Promise<HTMLIFrameElement>((resolve) => {\r\n      if (!containerElement) return;\r\n\r\n      const height = containerElement.dataset.height || containerElement.style.height;\r\n      if (height) {\r\n        const cssHeight = isNaN(Number(height)) ? height : height + 'px';\r\n        containerElement.style.height = cssHeight;\r\n      }\r\n      if (containerElement.dataset.defaultStyles !== 'false') {\r\n        containerElement.style.backgroundColor ||= '#fff';\r\n        containerElement.style.border ||= '1px solid black';\r\n        containerElement.style.borderRadius ||= '5px';\r\n        containerElement.style.boxSizing ||= 'border-box';\r\n        containerElement.style.padding ||= '0';\r\n        containerElement.style.width ||= '100%';\r\n        containerElement.style.height ||= containerElement.style.height || '300px';\r\n        containerElement.style.minHeight = '200px';\r\n        containerElement.style.overflow ||= 'hidden';\r\n        containerElement.style.resize ||= 'vertical';\r\n      }\r\n\r\n      const frame = document.createElement('iframe');\r\n      frame.setAttribute(\r\n        'allow',\r\n        'accelerometer; camera; encrypted-media; display-capture; geolocation; gyroscope; microphone; midi; clipboard-read; clipboard-write; web-share',\r\n      );\r\n      frame.setAttribute('allowtransparency', 'true');\r\n      frame.setAttribute('allowpaymentrequest', 'true');\r\n      frame.setAttribute('allowfullscreen', 'true');\r\n      frame.setAttribute(\r\n        'sandbox',\r\n        'allow-same-origin allow-downloads allow-forms allow-modals allow-orientation-lock allow-pointer-lock allow-popups allow-presentation allow-scripts',\r\n      );\r\n      const iframeLoading = loading === 'eager' ? 'eager' : 'lazy';\r\n      frame.setAttribute('loading', iframeLoading);\r\n      frame.classList.add('livecodes');\r\n      frame.style.height = '100%';\r\n      frame.style.minHeight = '200px';\r\n      frame.style.width = '100%';\r\n      frame.style.margin = '0';\r\n      frame.style.border = '0';\r\n      frame.style.borderRadius = containerElement.style.borderRadius;\r\n      addEventListener(\r\n        'message',\r\n        function configHandler(e: MessageEventInit<{ type: CustomEvents['getConfig'] }>) {\r\n          if (\r\n            e.source !== frame.contentWindow ||\r\n            e.origin !== origin ||\r\n            e.data?.type !== 'livecodes-get-config'\r\n          ) {\r\n            return;\r\n          }\r\n          removeEventListener('message', configHandler);\r\n          frame.contentWindow?.postMessage({ type: 'livecodes-config', payload: config }, origin);\r\n        },\r\n      );\r\n      frame.onload = () => {\r\n        resolve(frame);\r\n      };\r\n      frame.src = url.href;\r\n      containerElement.innerHTML = '';\r\n      containerElement.appendChild(frame);\r\n    });\r\n\r\n  const iframe = await createIframe();\r\n\r\n  const livecodesReady: Promise<void> & { settled?: boolean } = new Promise((resolve) => {\r\n    addEventListener(\r\n      'message',\r\n      function readyHandler(e: MessageEventInit<{ type: CustomEvents['ready'] }>) {\r\n        if (\r\n          e.source !== iframe.contentWindow ||\r\n          e.origin !== origin ||\r\n          e.data?.type !== 'livecodes-ready'\r\n        ) {\r\n          return;\r\n        }\r\n        removeEventListener('message', readyHandler);\r\n        resolve();\r\n        livecodesReady.settled = true;\r\n      },\r\n    );\r\n  });\r\n\r\n  const loadLivecodes = () =>\r\n    destroyed\r\n      ? Promise.reject(alreadyDestroyedMessage)\r\n      : new Promise<void>(async (resolve) => {\r\n          if (livecodesReady.settled) resolve();\r\n          const message: { type: CustomEvents['load'] } = { type: 'livecodes-load' };\r\n          iframe.contentWindow?.postMessage(message, origin);\r\n          await livecodesReady;\r\n          resolve();\r\n        });\r\n\r\n  const callAPI = <T>(method: keyof API, args?: any[]) =>\r\n    new Promise<T>(async (resolve, reject) => {\r\n      if (destroyed) {\r\n        return reject(alreadyDestroyedMessage);\r\n      }\r\n      await loadLivecodes();\r\n      addEventListener(\r\n        'message',\r\n        function handler(\r\n          e: MessageEventInit<{\r\n            type: CustomEvents['apiResponse'];\r\n            method: keyof API;\r\n            payload?: any;\r\n          }>,\r\n        ) {\r\n          if (\r\n            e.source !== iframe.contentWindow ||\r\n            e.origin !== origin ||\r\n            e.data?.type !== 'livecodes-api-response'\r\n          ) {\r\n            return;\r\n          }\r\n\r\n          if (e.data.method === method) {\r\n            removeEventListener('message', handler);\r\n            const payload = e.data.payload;\r\n            if (payload?.error) {\r\n              reject(payload.error);\r\n            } else {\r\n              resolve(payload);\r\n            }\r\n          }\r\n        },\r\n      );\r\n      iframe.contentWindow?.postMessage({ method, args }, origin);\r\n    });\r\n\r\n  let watchers: ChangeHandler[] = [];\r\n  const onChange = (fn: ChangeHandler) => {\r\n    if (destroyed) {\r\n      throw new Error(alreadyDestroyedMessage);\r\n    }\r\n    watchers.push(fn);\r\n    return {\r\n      remove: () => {\r\n        watchers = watchers.filter((w) => w !== fn);\r\n      },\r\n    };\r\n  };\r\n\r\n  addEventListener(\r\n    'message',\r\n    async (\r\n      e: MessageEventInit<{\r\n        type: CustomEvents['change'];\r\n      }>,\r\n    ) => {\r\n      if (\r\n        e.source !== iframe.contentWindow ||\r\n        e.origin !== origin ||\r\n        e.data?.type !== 'livecodes-change'\r\n      ) {\r\n        return;\r\n      }\r\n      const code = await callAPI<Code>('getCode');\r\n      const config = await callAPI<Config>('getConfig');\r\n\r\n      watchers.forEach((fn) => {\r\n        fn({ code, config });\r\n      });\r\n    },\r\n  );\r\n\r\n  const destroy = () => {\r\n    watchers.length = 0;\r\n    if (containerElement) {\r\n      containerElement.innerHTML = '';\r\n    }\r\n    destroyed = true;\r\n  };\r\n\r\n  if (loading === 'lazy' && 'IntersectionObserver' in window) {\r\n    const observer = new IntersectionObserver(\r\n      (entries, observer) => {\r\n        entries.forEach(async (entry) => {\r\n          if (entry.isIntersecting) {\r\n            await loadLivecodes();\r\n            observer.unobserve(containerElement!);\r\n          }\r\n        });\r\n      },\r\n      { rootMargin: '150px' },\r\n    );\r\n    observer.observe(containerElement);\r\n  }\r\n\r\n  return {\r\n    load: () => loadLivecodes(),\r\n    run: () => callAPI('run'),\r\n    format: (allEditors) => callAPI('format', [allEditors]),\r\n    getShareUrl: (shortUrl) => callAPI('getShareUrl', [shortUrl]),\r\n    getConfig: (contentOnly) => callAPI('getConfig', [contentOnly]),\r\n    setConfig: (config) => callAPI('setConfig', [config]),\r\n    getCode: () => callAPI('getCode'),\r\n    show: (pane, options) => callAPI('show', [pane, options]),\r\n    runTests: () => callAPI('runTests'),\r\n    onChange: (fn) => onChange(fn),\r\n    exec: (command, ...args) => callAPI('exec', [command, ...args]),\r\n    destroy: () => {\r\n      if (!livecodesReady.settled) {\r\n        if (destroyed) {\r\n          return Promise.reject(alreadyDestroyedMessage);\r\n        }\r\n        destroy();\r\n        return Promise.resolve();\r\n      }\r\n      return callAPI('destroy').then(destroy);\r\n    },\r\n  };\r\n};\r\n\r\nif (\r\n  globalThis.document && // to escape SSG in docusaurus\r\n  document.currentScript &&\r\n  'prefill' in document.currentScript?.dataset\r\n) {\r\n  window.addEventListener('load', () => {\r\n    document.querySelectorAll<HTMLElement>('.livecodes').forEach((codeblock) => {\r\n      let options: EmbedOptions | undefined;\r\n      const optionsStr = codeblock.dataset.options;\r\n      if (optionsStr) {\r\n        try {\r\n          options = JSON.parse(optionsStr);\r\n        } catch {\r\n          //\r\n        }\r\n      }\r\n      let config: Config | undefined;\r\n      const configStr = codeblock.dataset.config || codeblock.dataset.prefill;\r\n      if (configStr) {\r\n        try {\r\n          config = JSON.parse(configStr);\r\n        } catch {\r\n          //\r\n        }\r\n      }\r\n      createPlayground(codeblock, {\r\n        import: 'dom/' + encodeURIComponent(codeblock.outerHTML),\r\n        ...options,\r\n        ...(config ? { config } : {}),\r\n      });\r\n    });\r\n  });\r\n}\r\n"],
  "mappings": "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",
  "names": ["React", "useEffect", "useRef", "createPlayground", "container", "options", "appUrl", "params", "config", "importFrom", "lite", "loading", "template", "view", "containerElement", "url", "origin", "param", "destroyed", "alreadyDestroyedMessage", "iframe", "resolve", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "height", "cssHeight", "frame", "iframeLoading", "configHandler", "e", "livecodesReady", "readyHandler", "loadLivecodes", "message", "callAPI", "method", "args", "reject", "handler", "payload", "watchers", "onChange", "fn", "w", "code", "destroy", "entries", "observer", "entry", "allEditors", "shortUrl", "contentOnly", "pane", "command", "codeblock", "optionsStr", "configStr", "LiveCodes", "props", "className", "style", "height", "sdkReady", "options", "containerRef", "useRef", "playground", "useEffect", "createPlayground", "sdk", "React"]
}
