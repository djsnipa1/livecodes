{
  "version": 3,
  "sources": ["../../src/livecodes/html/index.ts", "../../src/livecodes/services/modules.ts", "../../src/livecodes/vendors.ts", "../../src/livecodes/services/github.ts", "../../src/livecodes/UI/selectors.ts", "../../src/livecodes/UI/sync-ui.ts"],
  "sourcesContent": ["// @ts-ignore\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport resultTemplateRaw from './sandbox/v6/result.html';\r\n// @ts-ignore\r\nimport appHTMLRaw from './app.html';\r\n// @ts-ignore\r\nimport settingsMenuHTMLRaw from './settings-menu.html';\r\n// @ts-ignore\r\nimport languageInfoRaw from './language-info.html';\r\n// @ts-ignore\r\nimport customSettingsScreenRaw from './custom-settings.html';\r\n// @ts-ignore\r\nimport testEditorScreenRaw from './test-editor.html';\r\n// @ts-ignore\r\nimport importScreenRaw from './import.html';\r\n// @ts-ignore\r\nimport deployScreenRaw from './deploy.html';\r\n// @ts-ignore\r\nimport syncScreenRaw from './sync.html';\r\n// @ts-ignore\r\nimport backupScreenRaw from './backup.html';\r\n// @ts-ignore\r\nimport broadcastScreenRaw from './broadcast.html';\r\n// @ts-ignore\r\nimport welcomeScreenRaw from './welcome.html';\r\n// @ts-ignore\r\nimport aboutScreenRaw from './about.html';\r\n// @ts-ignore\r\nimport infoScreenRaw from './project-info.html';\r\n// @ts-ignore\r\nimport resourcesScreenRaw from './external-resources.html';\r\n// @ts-ignore\r\nimport loginScreenRaw from './login.html';\r\n// @ts-ignore\r\nimport savePromptScreenRaw from './save-prompt.html';\r\n// @ts-ignore\r\nimport recoverPromptScreenRaw from './recover-prompt.html';\r\n// @ts-ignore\r\nimport templatesScreenRaw from './templates.html';\r\n// @ts-ignore\r\nimport openScreenRaw from './open.html';\r\n// @ts-ignore\r\nimport assetsScreenRaw from './assets.html';\r\n// @ts-ignore\r\nimport addAssetScreenRaw from './add-asset.html';\r\n// @ts-ignore\r\nimport snippetsScreenRaw from './snippets.html';\r\n// @ts-ignore\r\nimport addSnippetScreenRaw from './add-snippet.html';\r\n// @ts-ignore\r\nimport shareScreenRaw from './share.html';\r\n// @ts-ignore\r\nimport embedScreenRaw from './embed.html';\r\n// @ts-ignore\r\nimport editorSettingsScreenRaw from './editor-settings.html';\r\n// @ts-ignore\r\nimport resultPopupHTMLRaw from './result-popup.html';\r\n\r\nconst replaceValues = (str: string) =>\r\n  str\r\n    .replace(/{{APP_VERSION}}/g, process.env.VERSION || '')\r\n    .replace(/{{SDK_VERSION}}/g, process.env.SDK_VERSION || '')\r\n    .replace(/{{COMMIT_SHA}}/g, process.env.GIT_COMMIT || '')\r\n    .replace(/{{REPO_URL}}/g, process.env.REPO_URL || '')\r\n    .replace(/{{DOCS_BASE_URL}}/g, process.env.DOCS_BASE_URL || '');\r\n\r\nconst resultTemplate = replaceValues(resultTemplateRaw);\r\nconst appHTML = replaceValues(appHTMLRaw);\r\nconst settingsMenuHTML = replaceValues(settingsMenuHTMLRaw);\r\nconst languageInfo = replaceValues(languageInfoRaw);\r\nconst customSettingsScreen = replaceValues(customSettingsScreenRaw);\r\nconst testEditorScreen = replaceValues(testEditorScreenRaw);\r\nconst importScreen = replaceValues(importScreenRaw);\r\nconst deployScreen = replaceValues(deployScreenRaw);\r\nconst syncScreen = replaceValues(syncScreenRaw);\r\nconst backupScreen = replaceValues(backupScreenRaw);\r\nconst broadcastScreen = replaceValues(broadcastScreenRaw);\r\nconst welcomeScreen = replaceValues(welcomeScreenRaw);\r\nconst aboutScreen = replaceValues(aboutScreenRaw);\r\nconst infoScreen = replaceValues(infoScreenRaw);\r\nconst resourcesScreen = replaceValues(resourcesScreenRaw);\r\nconst loginScreen = replaceValues(loginScreenRaw);\r\nconst savePromptScreen = replaceValues(savePromptScreenRaw);\r\nconst recoverPromptScreen = replaceValues(recoverPromptScreenRaw);\r\nconst templatesScreen = replaceValues(templatesScreenRaw);\r\nconst openScreen = replaceValues(openScreenRaw);\r\nconst assetsScreen = replaceValues(assetsScreenRaw);\r\nconst addAssetScreen = replaceValues(addAssetScreenRaw);\r\nconst snippetsScreen = replaceValues(snippetsScreenRaw);\r\nconst addSnippetScreen = replaceValues(addSnippetScreenRaw);\r\nconst shareScreen = replaceValues(shareScreenRaw);\r\nconst embedScreen = replaceValues(embedScreenRaw);\r\nconst editorSettingsScreen = replaceValues(editorSettingsScreenRaw);\r\nconst resultPopupHTML = replaceValues(resultPopupHTMLRaw);\r\n\r\nexport {\r\n  resultTemplate,\r\n  appHTML,\r\n  settingsMenuHTML,\r\n  languageInfo,\r\n  customSettingsScreen,\r\n  testEditorScreen,\r\n  importScreen,\r\n  deployScreen,\r\n  syncScreen,\r\n  backupScreen,\r\n  broadcastScreen,\r\n  welcomeScreen,\r\n  aboutScreen,\r\n  infoScreen,\r\n  resourcesScreen,\r\n  loginScreen,\r\n  savePromptScreen,\r\n  recoverPromptScreen,\r\n  templatesScreen,\r\n  openScreen,\r\n  assetsScreen,\r\n  addAssetScreen,\r\n  snippetsScreen,\r\n  addSnippetScreen,\r\n  shareScreen,\r\n  embedScreen,\r\n  editorSettingsScreen,\r\n  resultPopupHTML,\r\n};\r\n", "import type { CDN } from '../models';\r\n\r\ndeclare const globalThis: { appCDN: CDN };\r\n\r\nconst moduleCDNs: CDN[] = ['jspm', 'skypack'];\r\nconst npmCDNs: CDN[] = ['unpkg', 'jsdelivr'];\r\nconst ghCDNs: CDN[] = ['jsdelivr.gh', 'statically'];\r\n\r\nexport const modulesService = {\r\n  getModuleUrl: (\r\n    moduleName: string,\r\n    { isModule = true, defaultCDN = 'jspm' }: { isModule?: boolean; defaultCDN?: CDN } = {},\r\n  ) => {\r\n    moduleName = moduleName.replace(/#nobundle/g, '');\r\n\r\n    const moduleUrl = getCdnUrl(moduleName, isModule, defaultCDN);\r\n    if (moduleUrl) {\r\n      return moduleUrl;\r\n    }\r\n\r\n    return isModule\r\n      ? 'https://jspm.dev/' + moduleName\r\n      : 'https://cdn.jsdelivr.net/npm/' + moduleName;\r\n  },\r\n\r\n  getUrl: (path: string, cdn?: CDN) =>\r\n    path.startsWith('http') ? path : getCdnUrl(path, false, cdn || getAppCDN()) || path,\r\n\r\n  cdnLists: { npm: npmCDNs, module: moduleCDNs, gh: ghCDNs },\r\n\r\n  checkCDNs: async (testModule: string, preferredCDN?: CDN) => {\r\n    const cdns: CDN[] = [preferredCDN, ...modulesService.cdnLists.npm].filter(Boolean) as CDN[];\r\n    for (const cdn of cdns) {\r\n      try {\r\n        const res = await fetch(modulesService.getUrl(testModule, cdn), {\r\n          method: 'HEAD',\r\n        });\r\n        if (res.ok) return cdn;\r\n      } catch {\r\n        // continue;\r\n      }\r\n    }\r\n    // fall back to first\r\n    return modulesService.cdnLists.npm[0];\r\n  },\r\n};\r\n\r\nexport const getAppCDN = (): CDN => {\r\n  if (globalThis.appCDN) return globalThis.appCDN;\r\n  try {\r\n    const url = new URL(location.href);\r\n    return (url.searchParams.get('appCDN') as CDN) || modulesService.cdnLists.npm[0];\r\n  } catch {\r\n    return modulesService.cdnLists.npm[0] as CDN;\r\n  }\r\n};\r\n\r\nconst getCdnUrl = (modName: string, isModule: boolean, defaultCDN?: CDN) => {\r\n  const post = isModule && modName.startsWith('unpkg:') ? '?module' : '';\r\n  if (modName.startsWith('gh:')) {\r\n    modName = modName.replace('gh', ghCDNs[0]);\r\n  } else if (!modName.includes(':')) {\r\n    const prefix = defaultCDN || (isModule ? moduleCDNs[0] : npmCDNs[0]);\r\n    modName = prefix + ':' + modName;\r\n  }\r\n  for (const i of TEMPLATES) {\r\n    const [pattern, template] = i;\r\n    if (pattern.test(modName)) {\r\n      return modName.replace(pattern, template) + post;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// based on https://github.com/neoascetic/rawgithack/blob/master/web/rawgithack.js\r\nconst TEMPLATES: Array<[RegExp, string]> = [\r\n  [/^(jspm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(npm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(node:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(skypack:)(.+)/i, 'https://cdn.skypack.dev/$2'],\r\n\r\n  [/^(jsdelivr:)(.+)/i, 'https://cdn.jsdelivr.net/npm/$2'],\r\n\r\n  [/^(jsdelivr.gh:)(.+)/i, 'https://cdn.jsdelivr.net/gh/$2'],\r\n\r\n  [/^(statically:)(.+)/i, 'https://cdn.statically.io/gh/$2'],\r\n\r\n  [/^(esm.run:)(.+)/i, 'https://esm.run/$2'],\r\n\r\n  [/^(esm.sh:)(.+)/i, 'https://esm.sh/$2'],\r\n\r\n  [/^(esbuild:)(.+)/i, 'https://esbuild.vercel.app/$2'],\r\n\r\n  [/^(bundle.run:)(.+)/i, 'https://bundle.run/$2'],\r\n\r\n  [/^(unpkg:)(.+)/i, 'https://unpkg.com/$2'],\r\n\r\n  [/^(bundlejs:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(bundle:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(deno:)(.+)/i, 'https://deno.bundlejs.com/?file&q=https://deno.land/x/$2/mod.ts'],\r\n\r\n  [/^(https:\\/\\/deno\\.land\\/.+)/i, 'https://deno.bundlejs.com/?file&q=$1'],\r\n\r\n  [\r\n    /^(github:|https:\\/\\/github\\.com\\/)(.[^\\/]+?)\\/(.[^\\/]+?)\\/(?!releases\\/)(?:(?:blob|raw)\\/)?(.+?\\/.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://cdn.jsdelivr.net/gh/$2/$3@$4',\r\n  ],\r\n\r\n  [/^(gist\\.github:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n\r\n  [\r\n    /^(gitlab:|https:\\/\\/gitlab\\.com\\/)([^\\/]+.*\\/[^\\/]+)\\/(?:raw|blob)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://gl.githack.com/$2/raw/$3',\r\n  ],\r\n  [\r\n    /^(bitbucket:|https:\\/\\/bitbucket\\.org\\/)([^\\/]+\\/[^\\/]+)\\/(?:raw|src)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://bb.githack.com/$2/raw/$3',\r\n  ],\r\n\r\n  // snippet file URL from web interface, with revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/]+)\\/revisions\\/([^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4',\r\n  ],\r\n  // snippet file URL from web interface, no revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3',\r\n  ],\r\n  // snippet file URLs from REST API\r\n  [\r\n    /^(bitbucket:)\\!api\\/2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n  [\r\n    /^(api\\.bitbucket:)2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n\r\n  [/^(rawgit:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n  [\r\n    /^(rawgit:|https:\\/\\/raw\\.githubusercontent\\.com)(\\/[^\\/]+\\/[^\\/]+|[0-9A-Za-z-]+\\/[0-9a-f]+\\/raw)\\/(.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://raw.githack.com/$2/$3',\r\n  ],\r\n];\r\n", "// eslint-disable-next-line import/no-internal-modules\r\nimport { modulesService } from './services/modules';\r\n\r\nconst { getUrl, getModuleUrl } = modulesService;\r\n\r\nexport const vendorsBaseUrl = // 'http://127.0.0.1:8081/';\r\n  /* @__PURE__ */ getUrl('@live-codes/browser-compilers@0.7.4/dist/');\r\n\r\nexport const acornUrl = /* @__PURE__ */ getUrl('acorn@8.8.2/dist/acorn.js');\r\n\r\nexport const artTemplateUrl = /* @__PURE__ */ getUrl('art-template@4.13.2/lib/template-web.js');\r\n\r\nexport const asciidocUrl = /* @__PURE__ */ getUrl(\r\n  '@asciidoctor/core@2.2.6/dist/browser/asciidoctor.js',\r\n);\r\n\r\nexport const assemblyscriptLoaderUrl = /* @__PURE__ */ getUrl(\r\n  '@assemblyscript/loader@0.27.5/umd/index.js',\r\n);\r\n\r\nexport const astringUrl = /* @__PURE__ */ getUrl('astring@1.8.1/dist/astring.min.js');\r\n\r\nexport const astroBaseUrl = /* @__PURE__ */ getUrl('@hatemhosny/astro-internal@0.0.4/');\r\n\r\nexport const astroWasmURL = /* @__PURE__ */ getUrl('@astrojs/compiler@0.9.2/astro.wasm');\r\n\r\nexport const autoCompleteUrl = /* @__PURE__ */ getUrl(\r\n  '@tarekraafat/autocomplete.js@10.2.6/dist/autoComplete.js',\r\n);\r\n\r\nexport const babelUrl = /* @__PURE__ */ getUrl('@babel/standalone@7.22.4/babel.js');\r\n\r\nexport const biwaschemeUrl = /* @__PURE__ */ getUrl('biwascheme@0.8.0/release/biwascheme.js');\r\n\r\nexport const blocklyCdnBaseUrl = /* @__PURE__ */ getUrl('blockly@9.3.3/');\r\n\r\nexport const brythonBaseUrl = /* @__PURE__ */ getUrl('brython@3.11.2/');\r\n\r\nexport const chaiUrl = /* @__PURE__ */ getModuleUrl('chai@4.3.6');\r\n\r\nexport const chaiTypesUrl = /* @__PURE__ */ getUrl('@types/chai@4.2.22/index.d.ts');\r\n\r\nexport const cherryCljsBaseUrl = /* @__PURE__ */ getUrl('cherry-cljs@0.0.4/');\r\n\r\nexport const cjs2esUrl = /* @__PURE__ */ getUrl('cjs2es@1.1.1/dist/cjs2es.browser.js');\r\n\r\nexport const clioBaseUrl = /* @__PURE__ */ getUrl(\r\n  '@live-codes/clio-browser-compiler@0.0.3/public/build/',\r\n);\r\n\r\nexport const coffeeScriptUrl = /* @__PURE__ */ getUrl(\r\n  'coffeescript@2.7.0/lib/coffeescript-browser-compiler-legacy/coffeescript.js',\r\n);\r\n\r\nexport const cppWasmBaseUrl = /* @__PURE__ */ getUrl('@chriskoch/cpp-wasm@1.0.2');\r\n\r\nexport const csstreeUrl = /* @__PURE__ */ getUrl('css-tree@1.1.3/dist/csstree.js');\r\n\r\nexport const cytoscapeSvgUrl = /* @__PURE__ */ getUrl('cytoscape-svg@0.4.0/cytoscape-svg.js');\r\n\r\nexport const cytoscapeUrl = /* @__PURE__ */ getUrl('cytoscape@3.25.0/dist/cytoscape.min.js');\r\n\r\nexport const dotUrl = /* @__PURE__ */ getUrl('dot@1.1.3/doT.js');\r\n\r\nexport const ejsUrl = /* @__PURE__ */ getUrl('ejs@3.1.9/ejs.js');\r\n\r\nexport const elkjsBaseUrl = /* @__PURE__ */ getUrl('elkjs@0.8.2/lib/');\r\n\r\nexport const emmetMonacoUrl = /* @__PURE__ */ getUrl('emmet-monaco-es@5.0.0/dist/emmet-monaco.js');\r\n\r\nexport const esModuleShimsPath = 'es-module-shims@1.4.4/dist/es-module-shims.js';\r\n\r\nexport const etaUrl = /* @__PURE__ */ getUrl('eta@2.2.0/dist/eta.umd.js');\r\n\r\nexport const flexSearchUrl = /* @__PURE__ */ getUrl('flexsearch@0.7.21/dist/flexsearch.bundle.js');\r\n\r\nexport const fontAnonymousProUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/anonymous-pro@4.5.9/index.css',\r\n);\r\n\r\nexport const fontCascadiaCodeUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/cascadia-code@4.2.1/index.css',\r\n);\r\n\r\nexport const fontCodeNewRomanUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/code-new-roman-2',\r\n);\r\n\r\nexport const fontComicMonoUrl = /* @__PURE__ */ getUrl('comic-mono@0.0.1/index.css');\r\n\r\nexport const fontCourierPrimeUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/courier-prime@4.5.9/index.css',\r\n);\r\n\r\nexport const fontDECTerminalModernUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/dec-terminal-modern',\r\n);\r\n\r\nexport const fontDejaVuMonoUrl = /* @__PURE__ */ getUrl('@fontsource/dejavu-mono@4.5.4/index.css');\r\n\r\nexport const fontFantasqueUrl = /* @__PURE__ */ getUrl(\r\n  '@typopro/web-fantasque-sans-mono@3.7.5/TypoPRO-FantasqueSansMono.css',\r\n);\r\n\r\nexport const fontFiraCodeUrl = /* @__PURE__ */ getUrl('firacode@6.2.0/distr/fira_code.css');\r\n\r\nexport const fontFixedsysUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/fixedsys-62');\r\n\r\nexport const fontHackUrl = /* @__PURE__ */ getUrl('hack-font@3.3.0/build/web/hack.css');\r\n\r\nexport const fontHermitUrl = /* @__PURE__ */ getUrl('typeface-hermit@0.0.44/index.css');\r\n\r\nexport const fontIBMPlexMonoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap',\r\n);\r\n\r\nexport const fontInconsolataUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Inconsolata&display=swap',\r\n);\r\n\r\nexport const fontIosevkaUrl = /* @__PURE__ */ getUrl('@fontsource/iosevka@4.5.4/index.css');\r\n\r\nexport const fontJetbrainsMonoUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/jetbrains-mono@4.5.11/index.css',\r\n);\r\n\r\nexport const fontMenloUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/menlo');\r\n\r\nexport const fontMonofurUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/monofur');\r\n\r\nexport const fontMonoidUrl = /* @__PURE__ */ getUrl('@typopro/web-monoid@3.7.5/TypoPRO-Monoid.css');\r\n\r\nexport const fontNotoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Noto+Sans+Mono&display=swap',\r\n);\r\n\r\nexport const fontNovaMonoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Nova+Mono&display=swap',\r\n);\r\n\r\nexport const fontOpenDyslexicUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/opendyslexic@4.5.4/index.css',\r\n);\r\n\r\nexport const fontProFontWindowsUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/profontwindows',\r\n);\r\n\r\nexport const fontRobotoMonoUrl = /* @__PURE__ */ getUrl('@fontsource/roboto-mono@4.5.8/index.css');\r\n\r\nexport const fontSFMonoUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/sf-mono');\r\n\r\nexport const fontSourceCodeProUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/source-code-pro@4.5.12/index.css',\r\n);\r\n\r\nexport const fontSpaceMonoUrl = /* @__PURE__ */ getUrl('@fontsource/space-mono@4.5.10/index.css');\r\n\r\nexport const fontSudoVarUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/sudo-var');\r\n\r\nexport const fontUbuntuMonoUrl = /* @__PURE__ */ getUrl('@fontsource/ubuntu-mono@4.5.11/index.css');\r\n\r\nexport const fontVictorMonoUrl = /* @__PURE__ */ getUrl('victormono@1.5.4/dist/index.css');\r\n\r\nexport const fscreenUrl = /* @__PURE__ */ getUrl('fscreen@1.2.0/dist/fscreen.esm.js');\r\n\r\nexport const githubMarkdownCss = /* @__PURE__ */ getUrl(\r\n  'github-markdown-css@5.1.0/github-markdown.css',\r\n);\r\n\r\nexport const go2jsBaseUrl = /* @__PURE__ */ getUrl('@live-codes/go2js@0.4.0/build/');\r\n\r\nexport const graphreCdnUrl = /* @__PURE__ */ getUrl('graphre@0.1.3/dist/graphre.js');\r\n\r\nexport const handlebarsBaseUrl = /* @__PURE__ */ getUrl('handlebars@4.7.7/dist/');\r\n\r\nexport const highlightjsUrl = /* @__PURE__ */ getModuleUrl('highlight.js@11.5.1');\r\n\r\nexport const hintCssUrl = /* @__PURE__ */ getUrl('hint.css@2.7.0/hint.css');\r\n\r\nexport const hpccJsCdnUrl = /* @__PURE__ */ getUrl('@hpcc-js/wasm@2.13.0/dist/index.js');\r\n\r\nexport const imbaBaseUrl = /* @__PURE__ */ getUrl('imba@2.0.0-alpha.229/dist/');\r\n\r\nexport const jestLiteUrl = /* @__PURE__ */ getUrl('jest-lite@1.0.0-alpha.4/dist/core.js');\r\n\r\nexport const jestTypesUrl = /* @__PURE__ */ getUrl('@types/jest@27.4.1/index.d.ts');\r\n\r\nexport const jsclUrl = /* @__PURE__ */ getUrl(\r\n  'gh:jscl-project/jscl-project.github.io@efd3aecdba496d132ed650b7b5be976fd0ca278f/jscl.js',\r\n);\r\n\r\nexport const jsZipUrl = /* @__PURE__ */ getUrl('jszip@3.10.1/dist/jszip.js');\r\n\r\nexport const juliaWasmBaseUrl = /* @__PURE__ */ getUrl('@chriskoch/julia-wasm@1.0.4');\r\n\r\nexport const liquidJsUrl = /* @__PURE__ */ getUrl('liquidjs@10.8.2/dist/liquid.browser.min.js');\r\n\r\nexport const localforageUrl = /* @__PURE__ */ getUrl('localforage@1.10.0/dist/localforage.js');\r\n\r\nexport const luaUrl = /* @__PURE__ */ getUrl('fengari-web@0.1.4/dist/fengari-web.js');\r\n\r\nexport const lunaObjViewerStylesUrl = /* @__PURE__ */ getUrl(\r\n  'luna-object-viewer@0.2.0/luna-object-viewer.css',\r\n);\r\n\r\nexport const lunaConsoleStylesUrl = /* @__PURE__ */ getUrl('luna-console@0.2.1/luna-console.css');\r\n\r\nexport const malinaVersion = '0.6.64';\r\nexport const malinaUrl = /* @__PURE__ */ getUrl(`malinajs@${malinaVersion}/malina.js`);\r\n\r\nexport const markedUrl = /* @__PURE__ */ getUrl('marked@5.0.4/marked.min.js');\r\n\r\nexport const mermaidCdnUrl = /* @__PURE__ */ getUrl('mermaid@10.2.2/dist/mermaid.esm.mjs');\r\n\r\nexport const mjmlUrl = /* @__PURE__ */ getUrl('mjml-browser@4.14.1/lib/index.js');\r\n\r\nexport const monacoEmacsUrl = /* @__PURE__ */ getUrl('monaco-emacs@0.3.0/dist/monaco-emacs.js');\r\n\r\nexport const monacoVimUrl = /* @__PURE__ */ getUrl('monaco-vim@0.4.0/dist/monaco-vim.js');\r\n\r\nexport const mustacheUrl = /* @__PURE__ */ getUrl('mustache@4.2.0/mustache.js');\r\n\r\nexport const nomnomlCdnUrl = /* @__PURE__ */ getUrl('nomnoml@1.6.1/dist/nomnoml.js');\r\n\r\nexport const normalizeCssUrl = /* @__PURE__ */ getUrl('normalize.css@8.0.1/normalize.css');\r\n\r\nexport const nunjucksBaseUrl = /* @__PURE__ */ getUrl('nunjucks@3.2.4/browser/');\r\n\r\nexport const opalBaseUrl = /* @__PURE__ */ getUrl('https://cdn.opalrb.com/opal/1.7.3/');\r\n\r\nexport const parinferUrl = /* @__PURE__ */ getUrl('parinfer@3.13.1/parinfer.js');\r\n\r\nexport const pintoraUrl = /* @__PURE__ */ getUrl(\r\n  '@pintora/standalone@0.6.2/lib/pintora-standalone.umd.js',\r\n);\r\n\r\nexport const plotlyCdnUrl = /* @__PURE__ */ getUrl('plotly.js@2.23.2/dist/plotly.js');\r\n\r\nexport const postcssImportUrlUrl = /* @__PURE__ */ getUrl(\r\n  '@live-codes/postcss-import-url@0.1.2/dist/postcss-import-url.js',\r\n);\r\n\r\nexport const prettierBaseUrl = /* @__PURE__ */ getUrl('prettier@2.5.1/');\r\n\r\nexport const prettierPhpUrl = /* @__PURE__ */ getUrl('@prettier/plugin-php@0.18.0/standalone.js');\r\n\r\nexport const prismBaseUrl = /* @__PURE__ */ getUrl('prismjs@1.26.0/components/');\r\n\r\nexport const pyodideBaseUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.jsdelivr.net/pyodide/v0.23.2/full/',\r\n);\r\n\r\nexport const qrcodeUrl = /* @__PURE__ */ getUrl('qrcode-generator@1.4.4/qrcode.js');\r\n\r\nexport const quillEditorCdnBaseUrl = /* @__PURE__ */ getUrl('quill@2.0.0-dev.4/dist/');\r\n\r\nexport const quillHtmlEditUrl = /* @__PURE__ */ getUrl(\r\n  'quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js',\r\n);\r\n\r\nexport const quillBlotFormaterUrl = /* @__PURE__ */ getUrl(\r\n  'quill-blot-formatter@1.0.5/dist/quill-blot-formatter.min.js',\r\n);\r\n\r\nexport const quillBetterTableBaseUrl = /* @__PURE__ */ getUrl('quill-better-table@1.2.10/dist/');\r\n\r\nexport const requireUrl = /* @__PURE__ */ getUrl('requirejs@2.3.6/require.js');\r\n\r\nexport const reasonCompilerUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v9.1.2/compiler.js',\r\n);\r\n\r\nexport const reasonReactUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v9.1.2/%40rescript/react/cmij.js',\r\n);\r\n\r\nexport const reasonStdLibBaseUrl = /* @__PURE__ */ getUrl('@rescript/std@9.1.3/lib/es6/');\r\n\r\nexport const rescriptCompilerUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v10.1.2/compiler.js',\r\n);\r\n\r\nexport const rescriptReactUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v10.1.2/%40rescript/react/cmij.js',\r\n);\r\n\r\nexport const rescriptStdLibBaseUrl = /* @__PURE__ */ getUrl('@rescript/std@10.1.2/lib/es6/');\r\n\r\nexport const resetCssUrl = /* @__PURE__ */ getUrl('reset-css@5.0.1/reset.css');\r\n\r\nexport const riotBaseUrl = /* @__PURE__ */ getUrl('riot@7.1.0/');\r\n\r\nexport const snackbarUrl = /* @__PURE__ */ getUrl('@snackbar/core@1.7.0/dist/snackbar.css');\r\n\r\nexport const spacingJsUrl = /* @__PURE__ */ getUrl('spacingjs@1.0.7/dist/bundle.js');\r\n\r\nexport const sqlFormatterUrl = /* @__PURE__ */ getUrl(\r\n  'sql-formatter@12.2.1/dist/sql-formatter.min.js',\r\n);\r\n\r\nexport const sqljsBaseUrl = /* @__PURE__ */ getUrl('sql.js@1.8.0/dist/');\r\n\r\nexport const stencilUrl = /* @__PURE__ */ getUrl('@stencil/core@3.2.2/compiler/stencil.js');\r\n\r\nexport const stylisUrl = /* @__PURE__ */ getUrl('stylis@4.2.0/dist/umd/stylis.js');\r\n\r\nexport const svgbobWasmCdnUrl = /* @__PURE__ */ getUrl('svgbob-wasm@0.4.1-a0/svgbob_wasm_bg.wasm');\r\n\r\nexport const tagifyBaseUrl = /* @__PURE__ */ getUrl('@yaireo/tagify@4.9.6/dist/');\r\n\r\nexport const tailwindcssUrl = /* @__PURE__ */ getUrl(\r\n  '@mhsdesign/jit-browser-tailwindcss@0.3.0/dist/cdn.min.js',\r\n);\r\n\r\nexport const tauPrologBaseUrl = /* @__PURE__ */ getUrl('tau-prolog@0.3.4/modules/');\r\n\r\nexport const tealUrl = /* @__PURE__ */ getUrl(\r\n  'gh:teal-language/tl@d2fc36b5ff9a52d7265e63eb74cce70fd1cdbcb2/tl.lua',\r\n);\r\n\r\nexport const twigUrl = /* @__PURE__ */ getUrl('twig@1.16.0/twig.min.js');\r\n\r\nexport const typescriptUrl = /* @__PURE__ */ getUrl('typescript@5.1.3/lib/typescript.js');\r\n\r\nexport const uniterUrl = /* @__PURE__ */ getUrl('uniter@2.18.0/dist/uniter.js');\r\n\r\nexport const vegaCdnUrl = /* @__PURE__ */ getUrl('vega@5.25.0/build/vega.js');\r\n\r\nexport const vegaLiteCdnUrl = /* @__PURE__ */ getUrl('vega-lite@5.9.3/build/vega-lite.js');\r\n\r\nexport const vue3CdnUrl = /* @__PURE__ */ getUrl('vue@3');\r\n\r\nexport const vue2CdnUrl = /* @__PURE__ */ getUrl('vue@2');\r\n\r\nexport const vueSfcLoaderCdnBaseUrl = /* @__PURE__ */ getUrl('vue3-sfc-loader@0.8.4/dist/');\r\n\r\nexport const wabtjsUrl = /* @__PURE__ */ getUrl('wabt@1.0.32/index.js');\r\n\r\nexport const waveDromBaseUrl = /* @__PURE__ */ getUrl('wavedrom@3.2.0/');\r\n\r\nexport const webRBaseUrl = /* @__PURE__ */ getUrl('@r-wasm/webr@0.1.1/dist/');\r\n", "import type { User } from '../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { safeName } from '../utils/utils';\n\nexport interface GitHubFile {\n  path: string;\n  content: string;\n}\nexport const getGithubHeaders = (user: User, mediaType?: 'object' | 'raw') => ({\n  Accept: `application/vnd.github.v3${mediaType ? '.' + mediaType : ''}+json`,\n  'Content-Type': 'application/json',\n  Authorization: 'token ' + user.token,\n});\n\nexport const repoExists = async (user: User, repo: string) => {\n  try {\n    const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}`, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    });\n    return res.ok;\n  } catch {\n    return false;\n  }\n};\n\nconst createRepo = async (user: User, repo: string, privateRepo = false, description?: string) => {\n  const res = await fetch('https://api.github.com/user/repos', {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      name: repo,\n      private: privateRepo,\n      ...(privateRepo ? {} : { homepage: `https://${user.username}.github.io/${repo}/` }),\n      ...(description ? { description } : {}),\n    }),\n  });\n  if (!res.ok) {\n    const error = await res.json().then((data) => data.errors[0]?.message);\n    if (error === 'name already exists on this account') {\n      throw new Error('Repo name already exists');\n    }\n    throw new Error('Error creating repo');\n  }\n  return res.json().then((data) => data.name);\n};\n\nconst createFile = async ({\n  user,\n  repo,\n  branch,\n  file,\n  message,\n  initialize = false,\n  encoded = false,\n}: {\n  user: User;\n  repo: string;\n  branch: string;\n  file: GitHubFile;\n  message: string;\n  initialize: boolean;\n  encoded: boolean;\n}) => {\n  const url = `https://api.github.com/repos/${user.username}/${repo}/contents/`;\n  const path = file.path.split('/').slice(0, -1).join('/');\n\n  let sha: string | undefined;\n\n  if (!initialize) {\n    const response = await fetch(url + path, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    });\n    if (response.ok) {\n      const files = await response.json();\n      sha = files.find((f: any) => f.path === file.path)?.sha;\n    }\n  }\n  const res = await fetch(url + file.path, {\n    method: 'PUT',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      message: message || 'deploy',\n      content: encoded ? file.content : btoa(file.content),\n      branch,\n      ...(sha ? { sha } : {}),\n    }),\n  });\n\n  if (!res.ok) {\n    throw new Error('Error creating file');\n  }\n  return res.json();\n};\n\nexport const getContent = async ({\n  user,\n  repo,\n  branch,\n  path,\n}: {\n  user: User;\n  repo: string;\n  branch?: string;\n  path: string;\n}) => {\n  const url =\n    `https://api.github.com/repos/${user.username}/${repo}/contents/${path}` +\n    (branch ? `?ref=${branch}` : '');\n\n  const res = await fetch(url, {\n    method: 'GET',\n    cache: 'no-store',\n    headers: getGithubHeaders(user, 'object'),\n  });\n\n  if (!res.ok) {\n    throw new Error('Error getting file');\n  }\n\n  const result = await res.json();\n\n  // https://docs.github.com/en/rest/repos/contents#size-limits\n  if (result.content === '' && result.encoding === 'none') {\n    const rawRes = await fetch(url, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user, 'raw'),\n    });\n    if (!rawRes.ok) {\n      throw new Error('Error getting file');\n    }\n\n    if (path.endsWith('.b64.zip')) {\n      // sync data\n      result.content = await rawRes.arrayBuffer();\n      result.encoding = 'arrayBuffer';\n    } else {\n      result.content = btoa(await rawRes.text());\n      result.encoding = 'base64';\n    }\n  }\n\n  return result;\n};\n\nconst initializeRepo = async (user: User, repo: string, branch = 'main', readmeContent?: string) =>\n  (\n    await createFile({\n      user,\n      repo,\n      branch,\n      file: { path: 'README.md', content: `${readmeContent || '# ' + repo + '\\n'}` },\n      message: 'initial commit',\n      initialize: true,\n      encoded: false,\n    })\n  )?.commit.sha;\n\nconst getLastCommit = async (user: User, repo: string, branch: string) => {\n  const res = await fetch(\n    `https://api.github.com/repos/${user.username}/${repo}/git/matching-refs/heads/${branch}?per_page=100`,\n    {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    },\n  );\n  const refs = await res.json();\n\n  if (refs.message === 'Git Repository is empty.') {\n    const commit = await initializeRepo(user, repo, 'main');\n    return branch === 'main' ? commit : null;\n  }\n\n  if (!res.ok) {\n    throw new Error('Error getting last commit');\n  }\n\n  const branchRef = refs.find((ref: any) => ref.ref === `refs/heads/${branch}`);\n\n  if (!branchRef) return null;\n  return branchRef.object.sha;\n};\n\nconst getTree = async (user: User, repo: string, commit: string) => {\n  const res = await fetch(\n    `https://api.github.com/repos/${user.username}/${repo}/commits/${commit}`,\n    {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    },\n  );\n\n  if (!res.ok) {\n    throw new Error('Error getting commit tree');\n  }\n\n  const data = await res.json();\n  const tree = data?.commit?.tree?.sha;\n\n  if (!tree) return null;\n  return tree;\n};\n\nconst createTree = async (\n  user: User,\n  repo: string,\n  files: GitHubFile[],\n  baseTree: string | null,\n): Promise<string> => {\n  const tree = files.map((file) => ({\n    path: file.path,\n    mode: '100644',\n    type: 'blob',\n    content: file.content,\n  }));\n\n  const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}/git/trees`, {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      // eslint-disable-next-line camelcase\n      ...(baseTree ? { base_tree: baseTree } : {}),\n      tree,\n    }),\n  });\n  if (!res.ok) {\n    throw new Error('Error creating tree');\n  }\n  return res.json().then((data) => data.sha);\n};\n\nconst createCommit = async (\n  user: User,\n  repo: string,\n  message: string,\n  tree: string,\n  lastCommit: string | null,\n): Promise<string> => {\n  const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}/git/commits`, {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      tree,\n      message: message || 'deploy',\n      ...(lastCommit ? { parents: [lastCommit] } : {}),\n    }),\n  });\n  if (!res.ok) {\n    throw new Error('Error creating commit');\n  }\n  return res.json().then((data) => data.sha);\n};\n\nconst createBranch = async (user: User, repo: string, branch: string, commit: string) => {\n  const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}/git/refs`, {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      ref: `refs/heads/${branch}`,\n      sha: commit,\n    }),\n  });\n  if (!res.ok) {\n    throw new Error('Error creating branch');\n  }\n  return true;\n};\n\nconst updateBranch = async (user: User, repo: string, branch: string, commit: string) => {\n  const res = await fetch(\n    `https://api.github.com/repos/${user.username}/${repo}/git/refs/heads/${branch}`,\n    {\n      method: 'PATCH',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n      body: JSON.stringify({\n        sha: commit,\n      }),\n    },\n  );\n  if (!res.ok) {\n    throw new Error('Error updating branch');\n  }\n  return true;\n};\n\nexport const commitFiles = async ({\n  files,\n  user,\n  repo,\n  branch,\n  message,\n  newRepo,\n  privateRepo,\n  description,\n  readmeContent,\n  clearPrevious = true,\n}: {\n  files: GitHubFile[];\n  user: User;\n  repo: string;\n  branch: string;\n  message: string;\n  newRepo?: boolean;\n  privateRepo?: boolean;\n  description?: string;\n  readmeContent?: string;\n  clearPrevious?: boolean;\n}) => {\n  let lastCommit: string | null;\n  let tree: string | null;\n  let commit: string | null;\n  let succeeded = false;\n\n  if (newRepo) {\n    repo = safeName(repo, '-').toLowerCase();\n  }\n\n  try {\n    if (newRepo || !(await repoExists(user, repo))) {\n      newRepo = true;\n      await createRepo(user, repo, privateRepo, description);\n      const initialCommit = await initializeRepo(user, repo, 'main', readmeContent);\n      lastCommit = branch === 'main' ? initialCommit : null;\n    } else {\n      lastCommit = await getLastCommit(user, repo, branch);\n    }\n    const baseTree = lastCommit && !clearPrevious ? await getTree(user, repo, lastCommit) : null;\n    tree = await createTree(user, repo, files, baseTree);\n    commit = await createCommit(user, repo, message, tree, lastCommit);\n\n    if (lastCommit) {\n      succeeded = await updateBranch(user, repo, branch, commit);\n    } else {\n      succeeded = await createBranch(user, repo, branch, commit);\n    }\n\n    if (!succeeded) return null;\n\n    return {\n      tree,\n      commit,\n    };\n  } catch (error: any) {\n    return null;\n  }\n};\n\nexport const commitFile = async ({\n  file,\n  user,\n  repo,\n  branch,\n  message,\n  newRepo,\n  privateRepo,\n  description,\n  readmeContent,\n}: {\n  file: GitHubFile;\n  user: User;\n  repo: string;\n  branch: string;\n  message: string;\n  newRepo?: boolean;\n  privateRepo?: boolean;\n  description?: string;\n  readmeContent?: string;\n}) => {\n  try {\n    if (newRepo || !(await repoExists(user, repo))) {\n      newRepo = true;\n      repo = safeName(repo, '-').toLowerCase();\n      await createRepo(user, repo, privateRepo, description);\n      await initializeRepo(user, repo, branch, readmeContent);\n    }\n\n    const result = await createFile({\n      user,\n      repo,\n      branch,\n      file,\n      message,\n      initialize: newRepo || false,\n      encoded: true,\n    });\n\n    return {\n      tree: result?.commit?.tree?.sha,\n      commit: result?.commit?.sha,\n    };\n  } catch (error: any) {\n    return null;\n  }\n};\n\nexport const getUserRepos = async (\n  user: User,\n  reposType: 'all' | 'owner' | 'public' | 'private' | 'member' = 'public',\n) => {\n  let page = 1;\n  const pageSize = 100;\n  const maxPages = 5;\n  const results = [];\n\n  while (page <= maxPages) {\n    const response = await fetch(\n      `https://api.github.com/user/repos?type=${reposType}&per_page=${pageSize}&page=${page}`,\n      {\n        method: 'GET',\n        cache: 'no-store',\n        headers: getGithubHeaders(user),\n      },\n    );\n    page += 1;\n    if (!response.ok) {\n      continue;\n    }\n    const newResults = await response.json();\n    results.push(...newResults.map((repo: any) => repo.name));\n    if (newResults.length < pageSize) {\n      page = maxPages + 1;\n    }\n  }\n  return results;\n};\n", "export const getToolbarElement = () => document.querySelector('#toolbar') as HTMLElement;\r\nexport const getProjectTitleElement = () => document.querySelector('#project-title') as HTMLElement;\r\nexport const getEditorContainerElement = () =>\r\n  document.querySelector('#editor-container') as HTMLElement;\r\nexport const getEditorsElement = () => document.querySelector('#editors') as HTMLElement;\r\nexport const getMarkupElement = () => document.querySelector('#markup') as HTMLElement;\r\nexport const getStyleElement = () => document.querySelector('#style') as HTMLElement;\r\nexport const getScriptElement = () => document.querySelector('#script') as HTMLElement;\r\nexport const getOutputElement = () => document.querySelector('#output') as HTMLElement;\r\nexport const getResultElement = () => document.querySelector('#result') as HTMLElement;\r\nexport const getResultIFrameElement = () =>\r\n  document.querySelector('#result > iframe') as HTMLIFrameElement;\r\nexport const getGutterElement = () =>\r\n  document.querySelector('#editor-container .gutter') as HTMLElement;\r\nexport const getLogoLink = () => document.querySelector('#logo a') as HTMLAnchorElement;\r\nexport const getRunButton = () => document.querySelector('#run-button') as HTMLElement;\r\nexport const getCodeRunButton = () => document.querySelector('#code-run-button') as HTMLElement;\r\nexport const getEditorToolbar = () => document.querySelector('#editor-tools') as HTMLElement;\r\nexport const getCopyButton = () => document.querySelector('#editor-tools #copy-btn') as HTMLElement;\r\nexport const getUndoButton = () => document.querySelector('#editor-tools #undo-btn') as HTMLElement;\r\nexport const getRedoButton = () => document.querySelector('#editor-tools #redo-btn') as HTMLElement;\r\nexport const getFormatButton = () =>\r\n  document.querySelector('#editor-tools #format-btn') as HTMLElement;\r\nexport const getEditorModeNode = () => document.querySelector<HTMLElement>('#editor-mode');\r\nexport const getEditorStatus = () =>\r\n  document.querySelector('#editor-tools #editor-status') as HTMLElement;\r\nexport const getExternalResourcesBtn = () =>\r\n  document.querySelector('#editor-tools #external-resources-btn') as HTMLElement;\r\nexport const getExternalResourcesMark = () =>\r\n  document.querySelector('#editor-tools #external-resources-mark') as HTMLElement;\r\nexport const getResultButton = () => document.querySelector('#result-button') as HTMLElement;\r\nexport const getFullscreenButton = () =>\r\n  document.querySelector('#fullscreen-button') as HTMLElement;\r\nexport const getEditorTitles = () =>\r\n  document.querySelectorAll<HTMLElement>('.editor-title:not(.hidden)');\r\nexport const getEditorDivs = () => document.querySelectorAll<HTMLElement>('#editors > .editor');\r\nexport const getToolspaneElement = () =>\r\n  document.querySelector('#output #tools-pane') as HTMLElement;\r\nexport const getToolspaneBar = () =>\r\n  document.querySelector('#output #tools-pane-bar') as HTMLElement;\r\nexport const getToolspaneButtons = () =>\r\n  document.querySelector('#tools-pane-buttons') as HTMLElement;\r\nexport const getToolspaneTitles = () => document.querySelector<HTMLElement>('#tools-pane-titles');\r\nexport const getToolspaneLoader = () => document.querySelector<HTMLElement>('#tools-pane-loading');\r\nexport const getZoomButtonValue = () =>\r\n  document.querySelector<HTMLElement>('#zoom-button #zoom-value');\r\nexport const getModalSaveButton = () =>\r\n  document.querySelector('#modal #prompt-save-btn') as HTMLElement;\r\nexport const getModalDoNotSaveButton = () =>\r\n  document.querySelector('#modal #prompt-donot-save-btn') as HTMLElement;\r\nexport const getModalCancelButton = () =>\r\n  document.querySelector('#modal #prompt-cancel-btn') as HTMLElement;\r\n\r\nexport const getModalRecoverButton = () =>\r\n  document.querySelector('#modal #prompt-recover-btn') as HTMLElement;\r\nexport const getModalSavePreviousButton = () =>\r\n  document.querySelector('#modal #prompt-save-previous-btn') as HTMLElement;\r\nexport const getModalCancelRecoverButton = () =>\r\n  document.querySelector('#modal #prompt-cancel-recover-btn') as HTMLElement;\r\nexport const getModalUnsavedName = () =>\r\n  document.querySelector('#modal #unsaved-project-name') as HTMLElement;\r\nexport const getModalUnsavedLastModified = () =>\r\n  document.querySelector('#modal #unsaved-project-last-modified') as HTMLElement;\r\nexport const getModalDisableRecoverCheckbox = () =>\r\n  document.querySelector('#modal #disable-recover-checkbox') as HTMLInputElement;\r\n\r\nexport const getLanguageMenuLinks = () =>\r\n  document.querySelectorAll<HTMLElement>('#select-editor .language-item a');\r\n\r\nexport const getLanguageMenuButtons = () =>\r\n  document.querySelectorAll<HTMLElement>('#select-editor .language-menu-button');\r\n\r\nexport const getstyleMenu = () =>\r\n  document.querySelector<HTMLElement>('#style-selector .dropdown-menu');\r\n\r\nexport const getSettingToggles = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#settings-menu input');\r\n\r\nexport const getCssPresetLinks = () =>\r\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\r\n\r\nexport const getSettingsMenuScroller = () =>\r\n  document.querySelector<HTMLElement>('#settings-menu-container');\r\nexport const getSettingsButton = () => document.querySelector<HTMLElement>('#settings-button');\r\n\r\nexport const getExportJSONLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-json');\r\n\r\nexport const getExportResultLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-result');\r\n\r\nexport const getExportSourceLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-src');\r\n\r\nexport const getExportGithubGistLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-githubGist');\r\n\r\nexport const getExportCodepenLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-codepen');\r\n\r\nexport const getExportJsfiddleLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-jsfiddle');\r\n\r\nexport const getLoginLink = () => document.querySelector<HTMLAnchorElement>('#login-link');\r\n\r\nexport const getLogoutLink = () => document.querySelector<HTMLAnchorElement>('#logout-link');\r\n\r\nexport const getNewLink = () => document.querySelector<HTMLAnchorElement>('#new-link');\r\n\r\nexport const getOpenLink = () => document.querySelector<HTMLAnchorElement>('#open-link');\r\n\r\nexport const getSaveLink = () => document.querySelector<HTMLAnchorElement>('#save-link');\r\n\r\nexport const getForkLink = () => document.querySelector<HTMLAnchorElement>('#fork-link');\r\n\r\nexport const getSaveAsTemplateLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#template-link');\r\n\r\nexport const getExternalResourcesLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#external-resources-link');\r\n\r\nexport const getCustomSettingsLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#custom-settings-link');\r\n\r\nexport const getShareLink = () => document.querySelector<HTMLAnchorElement>('#share-link');\r\n\r\nexport const getEmbedLink = () => document.querySelector<HTMLAnchorElement>('#embed-link');\r\n\r\nexport const getEditorSettingsLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#editor-settings-link');\r\n\r\nexport const getDeployLink = () => document.querySelector<HTMLAnchorElement>('#deploy-link');\r\n\r\nexport const getSyncLink = () => document.querySelector<HTMLAnchorElement>('#sync-link');\r\n\r\nexport const getSyncIndicator = () => document.querySelector<HTMLAnchorElement>('#sync-indicator');\r\n\r\nexport const getImportLink = () => document.querySelector<HTMLAnchorElement>('#import-link');\r\n\r\nexport const getBackupLink = () => document.querySelector<HTMLAnchorElement>('#backup-link');\r\n\r\nexport const getBroadcastLink = () => document.querySelector<HTMLAnchorElement>('#broadcast-link');\r\n\r\nexport const getWelcomeLink = () => document.querySelector<HTMLAnchorElement>('#welcome-link');\r\n\r\nexport const getAboutLink = () => document.querySelector<HTMLAnchorElement>('#about-link');\r\n\r\nexport const getAutoupdateToggle = () =>\r\n  document.querySelector('#settings-menu input#autoupdate') as HTMLInputElement;\r\n\r\nexport const getDelayValue = () =>\r\n  document.querySelector('#settings-menu #delay-value') as HTMLElement;\r\n\r\nexport const getDelayRange = () =>\r\n  document.querySelector('#settings-menu input#delay-range') as HTMLInputElement;\r\n\r\nexport const getAutosaveToggle = () =>\r\n  document.querySelector('#settings-menu input#autosave') as HTMLInputElement;\r\n\r\nexport const getAutosyncToggle = () =>\r\n  document.querySelector('#settings-menu input#autosync') as HTMLInputElement;\r\n\r\nexport const getFormatOnsaveToggle = () =>\r\n  document.querySelector('#settings-menu input#formatOnsave') as HTMLInputElement;\r\n\r\nexport const getProcessorToggles = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#style-selector input');\r\n\r\nexport const getEmmetToggle = () =>\r\n  document.querySelector('#settings-menu input#emmet') as HTMLInputElement;\r\n\r\nexport const getThemeToggle = () =>\r\n  document.querySelector('#settings-menu input#theme') as HTMLInputElement;\r\n\r\nexport const getShowWelcomeToggle = () =>\r\n  document.querySelector('#settings-menu input#welcome') as HTMLInputElement;\r\n\r\nexport const getRecoverToggle = () =>\r\n  document.querySelector('#settings-menu input#recover-unsaved') as HTMLInputElement;\r\n\r\nexport const getSpacingToggle = () =>\r\n  document.querySelector('#settings-menu input#show-spacing') as HTMLInputElement;\r\n\r\nexport const getCSSPresetLinks = () =>\r\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\r\n\r\nexport const getProjectInfoLink = () =>\r\n  document.querySelector('#settings-menu #info-link') as HTMLInputElement;\r\n\r\nexport const getAssetsLink = () =>\r\n  document.querySelector('#settings-menu #assets-link') as HTMLInputElement;\r\n\r\nexport const getSnippetsLink = () =>\r\n  document.querySelector('#settings-menu #snippets-link') as HTMLInputElement;\r\n\r\nexport const getInfoTitleInput = () =>\r\n  document.querySelector('#info-container input#title-input') as HTMLInputElement;\r\n\r\nexport const getInfoDescription = () =>\r\n  document.querySelector('#info-container #description-textarea') as HTMLTextAreaElement;\r\n\r\nexport const getInfoTagsInput = () =>\r\n  document.querySelector('#info-container input#tags-input') as HTMLInputElement;\r\n\r\nexport const getSaveInfoButton = () =>\r\n  document.querySelector<HTMLElement>('#info-container #info-save-btn');\r\n\r\nexport const getExternalResourcesTextareas = () =>\r\n  document.querySelectorAll<HTMLTextAreaElement>('#resources-container textarea');\r\n\r\nexport const getExternalResourcesCssPresetInputs = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#resources-container input[type=\"radio\"]');\r\n\r\nexport const getLoadResourcesButton = () =>\r\n  document.querySelector<HTMLElement>('#resources-container #resources-load-btn');\r\n\r\nexport const getCustomSettingsEditor = () =>\r\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-editor');\r\n\r\nexport const getLoadCustomSettingsButton = () =>\r\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-load-btn');\r\n\r\nexport const getTestEditor = () =>\r\n  document.querySelector<HTMLElement>('#test-editor-container #test-editor');\r\n\r\nexport const getLoadTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-editor-container #test-load-btn');\r\n\r\nexport const getEditTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #edit-tests-btn');\r\n\r\nexport const getRunTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #run-tests-btn');\r\n\r\nexport const getWatchTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #watch-tests-btn');\r\n\r\nexport const getUrlImportForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector<HTMLFormElement>('#url-import-form');\r\nexport const getUrlImportButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#url-import-btn') as HTMLButtonElement;\r\nexport const getUrlImportInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#code-url') as HTMLInputElement;\r\nexport const getCodeImportInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#local-code-input') as HTMLInputElement;\r\n\r\nexport const getImportJsonUrlForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url-import-form') as HTMLInputElement;\r\nexport const getImportJsonUrlButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url-import-btn') as HTMLInputElement;\r\nexport const getImportJsonUrlInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url') as HTMLInputElement;\r\n\r\nexport const getBulkImportJsonUrlForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url-import-form') as HTMLInputElement;\r\nexport const getBulkImportJsonUrlButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url-import-btn') as HTMLInputElement;\r\nexport const getBulkImportJsonUrlInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url') as HTMLInputElement;\r\nexport const getLinkToSavedProjects = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#link-to-saved-projects') as HTMLAnchorElement;\r\n\r\nexport const getImportFileInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#file-input') as HTMLInputElement;\r\n\r\nexport const getImportFileInputLabel = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('.file-input-label') as HTMLInputElement;\r\n\r\nexport const getBulkImportFileInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-file-input') as HTMLInputElement;\r\n\r\nexport const getNewRepoForm = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector<HTMLFormElement>('#new-repo-form');\r\nexport const getNewRepoButton = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-btn') as HTMLButtonElement;\r\nexport const getNewRepoNameInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-name') as HTMLInputElement;\r\nexport const getNewRepoNameError = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-name-error') as HTMLElement;\r\nexport const getNewRepoMessageInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-message') as HTMLInputElement;\r\nexport const getNewRepoCommitSource = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-source') as HTMLInputElement;\r\nexport const getNewRepoAutoSync = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-autosync') as HTMLInputElement;\r\n\r\nexport const getExistingRepoForm = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector<HTMLFormElement>('#existing-repo-form');\r\nexport const getExistingRepoButton = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-btn') as HTMLButtonElement;\r\nexport const getExistingRepoNameInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-name') as HTMLInputElement;\r\nexport const getExistingRepoMessageInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-message') as HTMLInputElement;\r\nexport const getExistingRepoCommitSource = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-source') as HTMLInputElement;\r\nexport const getExistingRepoAutoSync = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-autosync') as HTMLInputElement;\r\n\r\nexport const getStarterTemplatesTab = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector<HTMLElement>(\r\n    '#templates-tabs [data-target=\"templates-starter\"]',\r\n  );\r\nexport const getStarterTemplatesList = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector<HTMLElement>('#starter-templates-list');\r\nexport const getUserTemplatesScreen = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector('#templates-user .modal-screen') as HTMLElement;\r\n\r\nexport const getBulkImportButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#bulk-import-button') as HTMLElement;\r\n\r\nexport const getExportAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#export-all-button') as HTMLElement;\r\n\r\nexport const getDeleteAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#delete-all-button') as HTMLElement;\r\n\r\nexport const getAddAssetButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-add-asset-button') as HTMLElement;\r\n\r\nexport const getAssetsDeleteAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-delete-all-button') as HTMLElement;\r\n\r\nexport const getAssetsButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-button') as HTMLElement;\r\n\r\nexport const getAssetDataUrlFileInput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-data-url-file-input') as HTMLInputElement;\r\n\r\nexport const getAssetDataUrlOutput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#data-url-output') as HTMLElement;\r\n\r\nexport const getAssetGHPagesFileInput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input') as HTMLInputElement;\r\n\r\nexport const getAssetGHPagesFileInputLabel = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input-label') as HTMLElement;\r\n\r\nexport const getAssetGHPagesFileInputButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input-button') as HTMLElement;\r\n\r\nexport const getAssetGHPagesOutput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#gh-pages-output') as HTMLElement;\r\n\r\nexport const getSyncStatus = (syncContainer: HTMLElement | undefined) =>\r\n  (syncContainer || document).querySelector<HTMLElement>('#sync-status');\r\n\r\nexport const getStartSyncBtns = (syncContainer: HTMLElement | undefined) =>\r\n  (syncContainer || document).querySelectorAll<HTMLButtonElement>('.start-sync-btn');\r\n\r\nexport const getBackupForm = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelector('#backup-form') as HTMLFormElement;\r\n\r\nexport const getBackupBtn = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelector('#backup-btn') as HTMLButtonElement;\r\n\r\nexport const getBackupCheckedInputs = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelectorAll<HTMLInputElement>('#backup input[type=\"checkbox\"]:checked');\r\n\r\nexport const getAddSnippetButton = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-add-snippet-button') as HTMLElement;\r\n\r\nexport const getSnippetsDeleteAllButton = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-delete-all-button') as HTMLElement;\r\n\r\nexport const getSnippetLanguageSelect = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#language-select') as HTMLSelectElement;\r\n\r\nexport const getAddSnippetEditor = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-editor') as HTMLElement;\r\n\r\nexport const getSnippetTitleInput = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-title-input') as HTMLInputElement;\r\n\r\nexport const getSnippetDescriptionArea = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-description-textarea') as HTMLTextAreaElement;\r\n\r\nexport const getSaveSnippetBtn = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-save-btn') as HTMLButtonElement;\r\n\r\nexport const getSnippetsBtn = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-button') as HTMLButtonElement;\r\n\r\nexport const getBroadcastStatusLabel = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-status') as HTMLElement;\r\n\r\nexport const getBroadcastForm = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-form') as HTMLFormElement;\r\n\r\nexport const getBroadcastServerUrlInput = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-server-url') as HTMLInputElement;\r\n\r\nexport const getBroadcastSourceCheckbox = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-source') as HTMLInputElement;\r\n\r\nexport const getBroadcastBtn = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-btn') as HTMLButtonElement;\r\n\r\nexport const getBroadcastChannelUrlSection = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-channel-url-section') as HTMLElement;\r\n\r\nexport const getBroadcastChannelUrl = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-channel-url') as HTMLAnchorElement;\r\n\r\nexport const getBroadcastStatusBtn = () =>\r\n  document.querySelector('#broadcast-status-btn') as HTMLElement | null;\r\n\r\nexport const getQrCodeContainer = () => document.querySelector('#qrcode-container') as HTMLElement;\r\n\r\nexport const getEditorSettingsFormatLink = (editorSettingsContainer: HTMLElement) =>\r\n  editorSettingsContainer.querySelector('#editor-settings-format-link') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkNew = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-new') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkOpen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-open') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkImport = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-import') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkDefaultTemplateLi = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('.default-template-li') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkNoDefaultTemplate = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#no-default-template') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkLoadDefault = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-load-default') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkRecentOpen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-recent-open') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkTemplates = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-templates') as HTMLAnchorElement;\r\n\r\nexport const getModalShowWelcomeCheckbox = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #show-welcome-checkbox') as HTMLInputElement;\r\n\r\nexport const getModalWelcomeRecover = (welcomeContainer = document) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recover') as HTMLElement;\r\n\r\nexport const getModalWelcomeScreen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-screen-container .modal-screen') as HTMLElement;\r\n\r\nexport const getModalWelcomeRecent = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recent') as HTMLElement;\r\n\r\nexport const getModalWelcomeRecentList = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recent-list') as HTMLElement;\r\n\r\nexport const getModalWelcomeTemplateList = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-template-list') as HTMLElement;\r\n", "/* eslint-disable import/no-internal-modules */\nimport type { createEventsManager } from '../events';\nimport type { createModal } from '../modal';\nimport type { createNotifications } from '../notifications';\nimport type { User, UserData } from '../models';\nimport { syncScreen } from '../html';\nimport { autoCompleteUrl } from '../vendors';\nimport { getUserRepos } from '../services/github';\nimport {\n  getExistingRepoAutoSync,\n  getExistingRepoForm,\n  getExistingRepoNameInput,\n  getNewRepoAutoSync,\n  getNewRepoForm,\n  getNewRepoNameInput,\n  getStartSyncBtns,\n  getSyncIndicator,\n  getSyncLink,\n  getSyncStatus,\n} from './selectors';\n\nconst createSyncContainer = (\n  eventsManager: ReturnType<typeof createEventsManager>,\n  repo: string | null | undefined,\n) => {\n  const div = document.createElement('div');\n  div.innerHTML = syncScreen;\n  const syncContainer = div.firstChild as HTMLElement;\n\n  const tabs = syncContainer.querySelectorAll<HTMLElement>('#sync-tabs li');\n  tabs.forEach((tab) => {\n    eventsManager.addEventListener(tab, 'click', () => {\n      tabs.forEach((t) => t.classList.remove('active'));\n      tab.classList.add('active');\n\n      document.querySelectorAll('#sync-screens > div').forEach((screen) => {\n        screen.classList.remove('active');\n      });\n      const target = syncContainer.querySelector('#' + tab.dataset.target);\n      target?.classList.add('active');\n      target?.querySelector('input')?.focus();\n    });\n  });\n\n  if (repo) {\n    setTimeout(() => {\n      tabs[1].click();\n      const existingRepoNameInput = getExistingRepoNameInput(syncContainer);\n      existingRepoNameInput.value = repo;\n    });\n  }\n\n  return syncContainer;\n};\n\nconst syncInProgressMessage = 'Sync in progress...';\nexport const isSyncInProgress = () => getSyncLink()?.dataset.hint === syncInProgressMessage;\n\nexport const updateSyncStatus = ({\n  inProgress,\n  lastSync,\n  syncContainer,\n}: {\n  inProgress?: boolean;\n  lastSync?: number;\n  syncContainer?: HTMLElement;\n}) => {\n  const syncLink = getSyncLink();\n  const syncIndicator = getSyncIndicator();\n  const syncStatus = getSyncStatus(syncContainer);\n  const startSyncBtns = getStartSyncBtns(syncContainer);\n\n  const lastSyncMessage = lastSync ? `Last sync: ${new Date(lastSync).toLocaleString()}` : '';\n  if (syncStatus) {\n    syncStatus.innerText = lastSyncMessage;\n  }\n\n  if (inProgress ?? isSyncInProgress()) {\n    if (syncLink) {\n      syncLink.classList.add('hint--bottom');\n      syncLink.dataset.hint = syncInProgressMessage;\n      syncIndicator?.classList.remove('hidden');\n    }\n    startSyncBtns?.forEach((btn) => {\n      btn.innerText = syncInProgressMessage;\n      btn.disabled = true;\n    });\n  } else {\n    if (syncLink) {\n      syncLink.classList.toggle('hint--bottom', Boolean(lastSyncMessage));\n      syncLink.dataset.hint = lastSyncMessage;\n      syncIndicator?.classList.add('hidden');\n    }\n    startSyncBtns?.forEach((btn) => {\n      btn.innerText = 'Sync';\n      btn.disabled = false;\n    });\n  }\n};\n\nexport const createSyncUI = async ({\n  baseUrl,\n  modal,\n  notifications,\n  eventsManager,\n  user,\n  deps,\n}: {\n  baseUrl: string;\n  modal: ReturnType<typeof createModal>;\n  notifications: ReturnType<typeof createNotifications>;\n  eventsManager: ReturnType<typeof createEventsManager>;\n  user: User;\n  deps: {\n    getSyncData: () => Promise<UserData['data']['sync'] | null>;\n    setSyncData: (syncData: UserData['data']['sync']) => Promise<void>;\n  };\n}) => {\n  const syncData = await deps.getSyncData();\n  const syncContainer = createSyncContainer(eventsManager, syncData?.repo);\n\n  const newRepoForm = getNewRepoForm(syncContainer);\n  const newRepoNameInput = getNewRepoNameInput(syncContainer);\n  const newRepoAutoSync = getNewRepoAutoSync(syncContainer);\n  const existingRepoForm = getExistingRepoForm(syncContainer);\n  const existingRepoNameInput = getExistingRepoNameInput(syncContainer);\n  const existingRepoAutoSync = getExistingRepoAutoSync(syncContainer);\n\n  updateSyncStatus({ inProgress: isSyncInProgress(), lastSync: syncData?.lastSync, syncContainer });\n\n  // start loading the module\n  const syncModule: Promise<typeof import('../sync/sync')> = import(\n    baseUrl + '{{hash:sync.js}}'\n  ).then((mod) => {\n    mod.init(baseUrl);\n    return mod;\n  });\n\n  const sync = (user: User, repo: string, newRepo: boolean) => {\n    notifications.info('Sync started...');\n    modal.close();\n\n    return syncModule\n      .then(async (mod) => {\n        const syncResult = await mod.sync({\n          user,\n          repo,\n          newRepo,\n        });\n        if (!syncResult) {\n          notifications.error('Sync failed!');\n          return;\n        }\n        notifications.success('Sync complete!');\n      })\n      .catch(() => {\n        notifications.error('Sync failed!');\n      });\n  };\n\n  eventsManager.addEventListener(newRepoForm, 'submit', async (e) => {\n    e.preventDefault();\n    if (!user || isSyncInProgress()) return;\n\n    const repo = newRepoNameInput.value;\n    const autosync = newRepoAutoSync.checked;\n\n    const newRepo = true;\n    if (!repo) {\n      notifications.error('Repo name is required');\n      return;\n    }\n\n    updateSyncStatus({ inProgress: true });\n\n    await sync(user, repo, newRepo);\n    const lastSync = Date.now();\n    await deps.setSyncData({ autosync, repo, lastSync });\n\n    updateSyncStatus({ inProgress: false, lastSync });\n  });\n\n  eventsManager.addEventListener(existingRepoForm, 'submit', async (e) => {\n    e.preventDefault();\n    if (!user || isSyncInProgress()) return;\n\n    const repo = existingRepoNameInput.value;\n    const autosync = existingRepoAutoSync.checked;\n\n    const newRepo = false;\n    if (!repo) {\n      notifications.error('Repo name is required');\n      return;\n    }\n\n    updateSyncStatus({ inProgress: true });\n\n    await sync(user, repo, newRepo);\n    const lastSync = Date.now();\n    await deps.setSyncData({ autosync, repo, lastSync });\n\n    updateSyncStatus({ inProgress: false, lastSync });\n  });\n\n  let autoComplete: any;\n  import(autoCompleteUrl).then(async () => {\n    autoComplete = (globalThis as any).autoComplete;\n\n    if (!user) return;\n    const repos = await getUserRepos(user, 'all');\n\n    eventsManager.addEventListener(existingRepoNameInput, 'init', () => {\n      existingRepoNameInput.focus();\n    });\n\n    const inputSelector = '#' + existingRepoNameInput.id;\n    if (!document.querySelector(inputSelector)) return;\n    const autoCompleteJS = new autoComplete({\n      selector: inputSelector,\n      placeHolder: 'Search your repos...',\n      data: {\n        src: repos,\n      },\n      resultItem: {\n        highlight: {\n          render: true,\n        },\n      },\n    });\n\n    eventsManager.addEventListener(autoCompleteJS.input, 'selection', function (event: any) {\n      const feedback = event.detail;\n      autoCompleteJS.input.blur();\n      const selection = feedback.selection.value;\n      autoCompleteJS.input.value = selection;\n    });\n  });\n\n  modal.show(syncContainer, { isAsync: true });\n  newRepoNameInput.focus();\n};\n"],
  "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",
  "names": ["replaceValues", "str", "resultTemplate", "result_default", "appHTML", "app_default", "settingsMenuHTML", "settings_menu_default", "languageInfo", "language_info_default", "customSettingsScreen", "custom_settings_default", "testEditorScreen", "test_editor_default", "importScreen", "import_default", "deployScreen", "deploy_default", "syncScreen", "sync_default", "backupScreen", "backup_default", "broadcastScreen", "broadcast_default", "welcomeScreen", "welcome_default", "aboutScreen", "about_default", "infoScreen", "project_info_default", "resourcesScreen", "external_resources_default", "loginScreen", "login_default", "savePromptScreen", "save_prompt_default", "recoverPromptScreen", "recover_prompt_default", "templatesScreen", "templates_default", "openScreen", "open_default", "assetsScreen", "assets_default", "addAssetScreen", "add_asset_default", "snippetsScreen", "snippets_default", "addSnippetScreen", "add_snippet_default", "shareScreen", "share_default", "embedScreen", "embed_default", "editorSettingsScreen", "editor_settings_default", "resultPopupHTML", "result_popup_default", "moduleCDNs", "npmCDNs", "ghCDNs", "modulesService", "moduleName", "isModule", "defaultCDN", "moduleUrl", "getCdnUrl", "path", "cdn", "getAppCDN", "testModule", "preferredCDN", "cdns", "modName", "post", "i", "TEMPLATES", "pattern", "template", "getUrl", "getModuleUrl", "modulesService", "autoCompleteUrl", "getUrl", "malinaVersion", "malinaUrl", "getUrl", "getGithubHeaders", "user", "mediaType", "getUserRepos", "user", "reposType", "page", "pageSize", "maxPages", "results", "response", "getGithubHeaders", "newResults", "repo", "getSyncLink", "getSyncIndicator", "getNewRepoForm", "deployContainer", "getNewRepoNameInput", "deployContainer", "getNewRepoAutoSync", "deployContainer", "getExistingRepoForm", "getExistingRepoNameInput", "deployContainer", "getExistingRepoAutoSync", "deployContainer", "getSyncStatus", "syncContainer", "getStartSyncBtns", "createSyncContainer", "eventsManager", "repo", "div", "syncScreen", "syncContainer", "tabs", "tab", "t", "screen", "target", "existingRepoNameInput", "getExistingRepoNameInput", "syncInProgressMessage", "isSyncInProgress", "getSyncLink", "updateSyncStatus", "inProgress", "lastSync", "syncLink", "syncIndicator", "getSyncIndicator", "syncStatus", "getSyncStatus", "startSyncBtns", "getStartSyncBtns", "lastSyncMessage", "btn", "createSyncUI", "baseUrl", "modal", "notifications", "user", "deps", "syncData", "newRepoForm", "getNewRepoForm", "newRepoNameInput", "getNewRepoNameInput", "newRepoAutoSync", "getNewRepoAutoSync", "existingRepoForm", "getExistingRepoForm", "existingRepoAutoSync", "getExistingRepoAutoSync", "syncModule", "mod", "sync", "newRepo", "e", "autosync", "autoComplete", "autoCompleteUrl", "repos", "getUserRepos", "inputSelector", "autoCompleteJS", "event", "feedback", "selection"]
}
