{
  "version": 3,
  "sources": ["../../src/livecodes/services/modules.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/languages/scss/lang-scss-compiler.ts"],
  "sourcesContent": ["import type { CDN } from '../models';\r\n\r\ndeclare const globalThis: { appCDN: CDN };\r\n\r\nconst moduleCDNs: CDN[] = ['jspm', 'skypack'];\r\nconst npmCDNs: CDN[] = ['jsdelivr', 'unpkg', 'fastly.jsdelivr'];\r\nconst ghCDNs: CDN[] = ['jsdelivr.gh', 'statically'];\r\n\r\nexport const modulesService = {\r\n  getModuleUrl: (\r\n    moduleName: string,\r\n    { isModule = true, defaultCDN = 'jspm' }: { isModule?: boolean; defaultCDN?: CDN } = {},\r\n  ) => {\r\n    moduleName = moduleName.replace(/#nobundle/g, '');\r\n\r\n    const moduleUrl = getCdnUrl(moduleName, isModule, defaultCDN);\r\n    if (moduleUrl) {\r\n      return moduleUrl;\r\n    }\r\n\r\n    return isModule\r\n      ? 'https://jspm.dev/' + moduleName\r\n      : 'https://cdn.jsdelivr.net/npm/' + moduleName;\r\n  },\r\n\r\n  getUrl: (path: string, cdn?: CDN) =>\r\n    path.startsWith('http') ? path : getCdnUrl(path, false, cdn || getAppCDN()) || path,\r\n\r\n  cdnLists: { npm: npmCDNs, module: moduleCDNs, gh: ghCDNs },\r\n\r\n  checkCDNs: async (testModule: string, preferredCDN?: CDN) => {\r\n    const cdns: CDN[] = [preferredCDN, ...modulesService.cdnLists.npm].filter(Boolean) as CDN[];\r\n    for (const cdn of cdns) {\r\n      try {\r\n        const res = await fetch(modulesService.getUrl(testModule, cdn), {\r\n          method: 'HEAD',\r\n        });\r\n        if (res.ok) return cdn;\r\n      } catch {\r\n        // continue;\r\n      }\r\n    }\r\n    // fall back to first\r\n    return modulesService.cdnLists.npm[0];\r\n  },\r\n};\r\n\r\nexport const getAppCDN = (): CDN => {\r\n  if (globalThis.appCDN) return globalThis.appCDN;\r\n  try {\r\n    const url = new URL(location.href);\r\n    return (url.searchParams.get('appCDN') as CDN) || modulesService.cdnLists.npm[0];\r\n  } catch {\r\n    return modulesService.cdnLists.npm[0] as CDN;\r\n  }\r\n};\r\n\r\nconst getCdnUrl = (modName: string, isModule: boolean, defaultCDN?: CDN) => {\r\n  const post = isModule && modName.startsWith('unpkg:') ? '?module' : '';\r\n  if (modName.startsWith('gh:')) {\r\n    modName = modName.replace('gh', ghCDNs[0]);\r\n  } else if (!modName.includes(':')) {\r\n    const prefix = defaultCDN || (isModule ? moduleCDNs[0] : npmCDNs[0]);\r\n    modName = prefix + ':' + modName;\r\n  }\r\n  for (const i of TEMPLATES) {\r\n    const [pattern, template] = i;\r\n    if (pattern.test(modName)) {\r\n      return modName.replace(pattern, template) + post;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// based on https://github.com/neoascetic/rawgithack/blob/master/web/rawgithack.js\r\nconst TEMPLATES: Array<[RegExp, string]> = [\r\n  [/^(jspm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(npm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(node:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(skypack:)(.+)/i, 'https://cdn.skypack.dev/$2'],\r\n\r\n  [/^(jsdelivr:)(.+)/i, 'https://cdn.jsdelivr.net/npm/$2'],\r\n\r\n  [/^(fastly.jsdelivr:)(.+)/i, 'https://fastly.jsdelivr.net/npm/$2'],\r\n\r\n  [/^(jsdelivr.gh:)(.+)/i, 'https://cdn.jsdelivr.net/gh/$2'],\r\n\r\n  [/^(statically:)(.+)/i, 'https://cdn.statically.io/gh/$2'],\r\n\r\n  [/^(esm.run:)(.+)/i, 'https://esm.run/$2'],\r\n\r\n  [/^(esm.sh:)(.+)/i, 'https://esm.sh/$2'],\r\n\r\n  [/^(esbuild:)(.+)/i, 'https://esbuild.vercel.app/$2'],\r\n\r\n  [/^(bundle.run:)(.+)/i, 'https://bundle.run/$2'],\r\n\r\n  [/^(unpkg:)(.+)/i, 'https://unpkg.com/$2'],\r\n\r\n  [/^(bundlejs:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(bundle:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(deno:)(.+)/i, 'https://deno.bundlejs.com/?file&q=https://deno.land/x/$2/mod.ts'],\r\n\r\n  [/^(https:\\/\\/deno\\.land\\/.+)/i, 'https://deno.bundlejs.com/?file&q=$1'],\r\n\r\n  [\r\n    /^(github:|https:\\/\\/github\\.com\\/)(.[^\\/]+?)\\/(.[^\\/]+?)\\/(?!releases\\/)(?:(?:blob|raw)\\/)?(.+?\\/.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://cdn.jsdelivr.net/gh/$2/$3@$4',\r\n  ],\r\n\r\n  [/^(gist\\.github:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n\r\n  [\r\n    /^(gitlab:|https:\\/\\/gitlab\\.com\\/)([^\\/]+.*\\/[^\\/]+)\\/(?:raw|blob)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://gl.githack.com/$2/raw/$3',\r\n  ],\r\n  [\r\n    /^(bitbucket:|https:\\/\\/bitbucket\\.org\\/)([^\\/]+\\/[^\\/]+)\\/(?:raw|src)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://bb.githack.com/$2/raw/$3',\r\n  ],\r\n\r\n  // snippet file URL from web interface, with revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/]+)\\/revisions\\/([^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4',\r\n  ],\r\n  // snippet file URL from web interface, no revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3',\r\n  ],\r\n  // snippet file URLs from REST API\r\n  [\r\n    /^(bitbucket:)\\!api\\/2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n  [\r\n    /^(api\\.bitbucket:)2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n\r\n  [/^(rawgit:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n  [\r\n    /^(rawgit:|https:\\/\\/raw\\.githubusercontent\\.com)(\\/[^\\/]+\\/[^\\/]+|[0-9A-Za-z-]+\\/[0-9a-f]+\\/raw)\\/(.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://raw.githack.com/$2/$3',\r\n  ],\r\n];\r\n", "import type { Config, Language, Processor, WorkerMessageEvent } from '../models';\r\n\r\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\r\n  let timeout: any;\r\n\r\n  return (...args: unknown[]) => {\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\r\n  };\r\n};\r\n\r\nexport const decodeHTML = (html: string) => {\r\n  const txt = document.createElement('textarea');\r\n  txt.innerHTML = html;\r\n  return txt.value;\r\n};\r\n\r\nexport const encodeHTML = (html: string) =>\r\n  html\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/'/g, '&#39;')\r\n    .replace(/\"/g, '&#34;');\r\n\r\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\nexport const escapeCode = (code: string, slash = true) =>\r\n  code\r\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\r\n    .replace(/`/g, '\\\\`')\r\n    .replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const pipe = (...fns: Function[]) =>\r\n  fns.reduce(\r\n    (f, g) =>\r\n      (...args: any) =>\r\n        g(f(...args)),\r\n  );\r\n\r\n// replace non-alphanumeric with underscore\r\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\r\n\r\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n// added safari (on mac & ios): monaco editor is broken on safari\r\nexport const isMobile = () => {\r\n  let mobile = false;\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n        a,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4),\r\n      )\r\n    ) {\r\n      mobile = true;\r\n    }\r\n  })(userAgent || navigator.vendor || (window as any).opera);\r\n\r\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\r\n\r\n  return mobile || safari;\r\n};\r\n\r\nexport const isRelativeUrl = (url?: string) =>\r\n  !url?.startsWith('http') && !url?.startsWith('data:');\r\n\r\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\r\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\r\n\r\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\r\n\r\nexport const objectMap = (\r\n  obj: Record<string, any>,\r\n  fn: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\r\n\r\nexport const objectFilter = (\r\n  obj: Record<string, any>,\r\n  predicate: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\r\n    const textarea = document.createElement('textarea');\r\n    textarea.textContent = text;\r\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('Copy to clipboard failed.', ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const stringToValidJson = (str: string) =>\r\n  str\r\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\r\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\r\n    })\r\n    .replace(\r\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\r\n      function quoteNonQuoted(matchedStr) {\r\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\r\n      },\r\n    )\r\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\r\n\r\nexport const stringify = (obj: any, pretty = false) => {\r\n  try {\r\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\r\n  } catch {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\r\n\r\nexport const downloadFile = (filename: string, extension: string, content: string) => {\r\n  const a = document.createElement('a');\r\n  a.style.display = 'none';\r\n  a.href = content;\r\n  a.download = safeName(filename) + '.' + extension;\r\n  a.click();\r\n  a.remove();\r\n};\r\n\r\nexport const loadScript = (url: string, name?: string) =>\r\n  new Promise((resolve, reject) => {\r\n    if (name && (globalThis as any)[name]) {\r\n      return resolve((globalThis as any)[name]);\r\n    }\r\n\r\n    // if running in web worker\r\n    if (typeof (globalThis as any).importScripts === 'function') {\r\n      (globalThis as any).importScripts(url);\r\n      if (name && (globalThis as any)[name]) {\r\n        return resolve((globalThis as any)[name]);\r\n      }\r\n      return resolve(globalThis);\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.src = url;\r\n    script.async = true;\r\n    const removeEventListeners = () => {\r\n      script.removeEventListener('load', onLoad);\r\n      script.removeEventListener('error', onError);\r\n    };\r\n    const onLoad = () => {\r\n      removeEventListeners();\r\n      if (!name) {\r\n        return resolve('loaded: ' + url);\r\n      }\r\n      const i = setInterval(() => {\r\n        if ((window as any)[name]) {\r\n          clearInterval(i);\r\n          return resolve((window as any)[name]);\r\n        }\r\n      }, 5);\r\n    };\r\n    const onError = () => {\r\n      removeEventListeners();\r\n      reject('failed to load: ' + url);\r\n    };\r\n    script.addEventListener('load', onLoad);\r\n    script.addEventListener('error', onError);\r\n    document.head.appendChild(script);\r\n  });\r\n\r\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\r\n  if (id && document.getElementById(id)) return;\r\n  const stylesheet = document.createElement('link');\r\n  stylesheet.rel = 'stylesheet';\r\n  stylesheet.href = url;\r\n  stylesheet.id = id || 'styles-' + getRandomString();\r\n  document.head.insertBefore(\r\n    stylesheet,\r\n    insertBefore ? document.querySelector(insertBefore) : null,\r\n  );\r\n};\r\n\r\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\r\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\r\n\r\nexport const getDate = () => {\r\n  let date = new Date();\r\n  const offset = date.getTimezoneOffset();\r\n  date = new Date(date.getTime() - offset * 60 * 1000);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\r\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\r\n  fetch(input, init).then(handleFetchError);\r\n\r\nexport const blobToBase64 = (file: Blob): Promise<string> =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\r\n  const CHUNK_SZ = 0x8000;\r\n  const c = [];\r\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\r\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\r\n  }\r\n  return btoa(c.join(''));\r\n};\r\n\r\nexport const base64ToUint8Array = (str: string) =>\r\n  new Uint8Array(\r\n    atob(str)\r\n      .split('')\r\n      .map((c) => c.charCodeAt(0)),\r\n  );\r\n\r\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (a.byteLength !== b.byteLength) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < a.byteLength; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getWorkerDataURL = (url: string) => {\r\n  const content = `importScripts(\"${url}\");`;\r\n  return 'data:text/javascript;base64,' + btoa(content);\r\n};\r\n\r\nexport const removeComments = (src: string) =>\r\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\r\n\r\nexport const removeStrings = (src: string) =>\r\n  src\r\n    .replace(/'[^\\n']*'/gm, \"''\")\r\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\r\n    .replace(/`[^`]*`/gm, '``');\r\n\r\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\r\n\r\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\r\n  ...(config.customSettings as any)[language],\r\n});\r\n\r\nexport const getValidUrl = (url?: string) => {\r\n  if (!url) return null;\r\n  let validUrl = null;\r\n  if (url.startsWith('http') || url.startsWith('data:')) {\r\n    try {\r\n      validUrl = new URL(url).href;\r\n    } catch {\r\n      try {\r\n        validUrl = new URL(decodeURIComponent(url)).href;\r\n      } catch {\r\n        //\r\n      }\r\n    }\r\n  }\r\n  return validUrl;\r\n};\r\n\r\nexport const runOrContinue =\r\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\r\n  async (x: T): Promise<T> => {\r\n    try {\r\n      const result = await fn(x);\r\n      return result;\r\n    } catch (error) {\r\n      if (typeof catchFn === 'function') {\r\n        catchFn(error);\r\n      }\r\n      return x;\r\n    }\r\n  };\r\n\r\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\r\n\r\nexport const isInIframe = () => {\r\n  try {\r\n    return window.self !== window.top;\r\n  } catch {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\r\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\r\n\r\nexport const hideOnClickOutside = (element: HTMLElement) => {\r\n  const hideElement = () => {\r\n    element.style.display = 'none';\r\n    removeListeners();\r\n    (window as any).watchingEscape = false;\r\n  };\r\n\r\n  const outsideClickListener = (event: MouseEvent) => {\r\n    if (!element.contains(event.target as Node) && isVisible(element)) {\r\n      hideElement();\r\n    }\r\n  };\r\n\r\n  const escapeListener = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      hideElement();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const isVisible = (elem: HTMLElement) =>\r\n    !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\r\n\r\n  const removeListeners = () => {\r\n    document.removeEventListener('click', outsideClickListener);\r\n    document.removeEventListener('keydown', escapeListener);\r\n  };\r\n\r\n  document.addEventListener('click', outsideClickListener);\r\n  document.addEventListener('keydown', escapeListener);\r\n  (window as any).watchingEscape = true;\r\n\r\n  return {\r\n    clear: () => removeListeners(),\r\n  };\r\n};\r\n\r\nexport const callWorker = async <T = string, K = unknown>(\r\n  worker: Worker,\r\n  message: { method: T; args?: any },\r\n) =>\r\n  new Promise<K>((resolve) => {\r\n    const messageId = getRandomString();\r\n\r\n    const handler = (event: WorkerMessageEvent<T, K>) => {\r\n      const received = event.data;\r\n\r\n      if (received.method === message.method && received.messageId === messageId) {\r\n        worker.removeEventListener('message', handler);\r\n        resolve(received.data as K);\r\n      }\r\n    };\r\n    worker.addEventListener('message', handler);\r\n\r\n    worker.postMessage({\r\n      ...message,\r\n      messageId,\r\n    });\r\n  });\r\n\r\nexport const toCamelCase = (str: string) =>\r\n  str\r\n    .replace(/[-_.]+/g, ' ')\r\n    .trim()\r\n    .replace(/^([A-Z])|\\s+(\\w)/g, function (_match, p1, p2) {\r\n      if (p2) return p2.toUpperCase();\r\n      return p1.toLowerCase();\r\n    });\r\n\r\nexport const removeDuplicates = (arr: any[] | undefined) => Array.from(new Set(arr));\r\n", "import type { CompilerFunction } from '../../models';\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport { modulesService } from '../../services/modules';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\n\r\n(self as any).createScssCompiler = (): CompilerFunction => {\r\n  const sass = (window as any).sass;\r\n  return async (code, { config, language }): Promise<string> => {\r\n    const syntax = language === 'sass' ? 'indented' : 'scss';\r\n    const customSettings = getLanguageCustomSettings(language, config);\r\n    let baseUrl: string | null = null;\r\n\r\n    const moduleServiceUrl = modulesService.getUrl('~').replace('~', '');\r\n\r\n    const fetchStyles = (url: string) => {\r\n      const moduleUrl =\r\n        baseUrl && baseUrl !== url ? new URL(url.replace(moduleServiceUrl, ''), baseUrl).href : url;\r\n      const module = moduleUrl.replace(moduleServiceUrl, '');\r\n      const moduleParts = module.split('/');\r\n\r\n      if (\r\n        moduleParts.length === 1 ||\r\n        (moduleParts.length === 2 && moduleParts[0].startsWith('@'))\r\n      ) {\r\n        return Promise.reject('not a valid URL!');\r\n      }\r\n\r\n      return fetch(moduleUrl)\r\n        .then((res) => {\r\n          if (!res.ok) return Promise.reject('URL not found: ' + moduleUrl);\r\n          return res.text();\r\n        })\r\n        .then((contents) => {\r\n          const result = {\r\n            contents,\r\n            syntax,\r\n          };\r\n          return result;\r\n        });\r\n    };\r\n\r\n    const result = sass.compileString(code, {\r\n      ...customSettings,\r\n      syntax,\r\n      importers: [\r\n        {\r\n          canonicalize(url: string) {\r\n            return new URL(url, moduleServiceUrl);\r\n          },\r\n          load(canonicalUrl: URL) {\r\n            const urlString = canonicalUrl.href;\r\n            return fetchStyles(urlString)\r\n              .catch(() => {\r\n                const urlParts = urlString.split('/');\r\n                const filename = urlParts[urlParts.length - 1];\r\n                const prefix = filename.startsWith('_') ? '' : '_';\r\n                urlParts[urlParts.length - 1] = prefix + filename + '.scss';\r\n                return fetchStyles(urlParts.join('/'));\r\n              })\r\n              .catch(() => fetchStyles(urlString + '.scss'))\r\n              .catch(\r\n                () =>\r\n                  new Promise((resolve, reject) => {\r\n                    fetch(urlString + '/package.json')\r\n                      .then((res) => res.json())\r\n                      .then((pkg) => {\r\n                        if (pkg.sass) {\r\n                          baseUrl = urlString + '/' + pkg.sass;\r\n                          resolve(fetchStyles(baseUrl));\r\n                        } else if (pkg.style) {\r\n                          baseUrl = urlString + '/' + pkg.style;\r\n                          resolve(fetchStyles(baseUrl));\r\n                        } else {\r\n                          reject('Not found');\r\n                        }\r\n                      });\r\n                  }),\r\n              );\r\n          },\r\n        },\r\n      ],\r\n    });\r\n\r\n    return result.css || '';\r\n  };\r\n};\r\n"],
  "mappings": "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",
  "names": ["moduleCDNs", "npmCDNs", "ghCDNs", "modulesService", "moduleName", "isModule", "defaultCDN", "moduleUrl", "getCdnUrl", "path", "cdn", "getAppCDN", "testModule", "preferredCDN", "cdns", "modName", "post", "i", "TEMPLATES", "pattern", "template", "getLanguageCustomSettings", "language", "config", "sass", "code", "config", "language", "syntax", "customSettings", "getLanguageCustomSettings", "baseUrl", "moduleServiceUrl", "modulesService", "fetchStyles", "url", "moduleUrl", "moduleParts", "res", "contents", "canonicalUrl", "urlString", "urlParts", "filename", "prefix", "resolve", "reject", "pkg"]
}
