{
  "version": 3,
  "sources": ["../../node_modules/lz-string/libs/lz-string.js", "../../src/livecodes/html/index.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/config/default-config.ts", "../../src/livecodes/services/modules.ts", "../../src/livecodes/vendors.ts", "../../src/livecodes/languages/lightningcss/processor-lightningcss.ts", "../../src/livecodes/languages/postcss/processor-postcss.ts", "../../src/livecodes/languages/postcss/postcss-plugins.ts", "../../src/livecodes/languages/unocss/processor-unocss.ts", "../../src/livecodes/languages/windicss/processor-windicss.ts", "../../src/livecodes/languages/prettier.ts", "../../src/livecodes/languages/babel/lang-babel.ts", "../../src/livecodes/languages/css/lang-css.ts", "../../src/livecodes/languages/haml/lang-haml.ts", "../../src/livecodes/languages/html/lang-html.ts", "../../src/livecodes/languages/javascript/lang-javascript.ts", "../../src/livecodes/languages/jsx/lang-jsx.ts", "../../src/livecodes/languages/jsx/lang-tsx.ts", "../../src/livecodes/languages/less/lang-less.ts", "../../src/livecodes/languages/markdown/lang-markdown.ts", "../../src/livecodes/compiler/compile-in-compiler.ts", "../../src/livecodes/languages/mdx/lang-mdx.ts", "../../src/livecodes/languages/pug/lang-pug.ts", "../../src/livecodes/languages/scss/lang-scss.ts", "../../src/livecodes/languages/svelte/lang-svelte.ts", "../../src/livecodes/languages/stylus/lang-stylus.ts", "../../src/livecodes/languages/typescript/lang-typescript.ts", "../../src/livecodes/languages/vue/lang-vue.ts", "../../src/livecodes/languages/vue/lang-vue2.ts", "../../src/livecodes/languages/stencil/lang-stencil.ts", "../../src/livecodes/languages/livescript/lang-livescript.ts", "../../src/livecodes/languages/assemblyscript/lang-assemblyscript.ts", "../../src/livecodes/languages/python/lang-python.ts", "../../src/livecodes/languages/ruby/lang-ruby.ts", "../../src/livecodes/languages/php/lang-php.ts", "../../src/livecodes/languages/lua/lang-lua.ts", "../../src/livecodes/languages/commonlisp/lang-commonlisp.ts", "../../src/livecodes/languages/solid/lang-solid.ts", "../../src/livecodes/languages/solid/lang-solid-tsx.ts", "../../src/livecodes/languages/liquid/lang-liquid.ts", "../../src/livecodes/languages/ejs/lang-ejs.ts", "../../src/livecodes/languages/handlebars/lang-handlebars.ts", "../../src/livecodes/languages/dot/lang-dot.ts", "../../src/livecodes/languages/nunjucks/lang-nunjucks.ts", "../../src/livecodes/languages/go/lang-go.ts", "../../src/livecodes/languages/wat/lang-wat.ts", "../../src/livecodes/languages/riot/lang-riot.ts", "../../src/livecodes/languages/sql/lang-sql.ts", "../../src/livecodes/languages/react-native/lang-react-native.ts", "../../src/livecodes/languages/react-native/lang-react-native-tsx.ts", "../../src/livecodes/languages/twig/lang-twig.ts", "../../src/livecodes/languages/astro/lang-astro.ts", "../../src/livecodes/languages/malina/lang-malina.ts", "../../src/livecodes/languages/cpp/lang-cpp.ts", "../../src/livecodes/languages/clio/lang-clio.ts", "../../src/livecodes/languages/diagrams/lang-diagrams.ts", "../../src/livecodes/languages/imba/lang-imba.ts", "../../src/livecodes/languages/mustache/lang-mustache.ts", "../../src/livecodes/languages/art-template/lang-art-template.ts", "../../src/livecodes/languages/civet/lang-civet.ts", "../../src/livecodes/languages/flow/lang-flow.ts", "../../src/livecodes/languages/mjml/lang-mjml.ts", "../../src/livecodes/languages/sucrase/lang-sucrase.ts", "../../src/livecodes/languages/eta/lang-eta.ts", "../../src/livecodes/services/allowed-origin.ts", "../../src/livecodes/utils/compression.ts", "../../src/livecodes/services/share.ts", "../../src/livecodes/languages/clojurescript/lang-clojurescript.ts", "../../src/livecodes/config/config.ts", "../../src/livecodes/editor/fonts.ts", "../../src/livecodes/UI/selectors.ts", "../../src/livecodes/UI/editor-settings.ts"],
  "sourcesContent": ["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "// @ts-ignore\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport resultTemplateRaw from './sandbox/v6/result.html';\r\n// @ts-ignore\r\nimport appHTMLRaw from './app.html';\r\n// @ts-ignore\r\nimport settingsMenuHTMLRaw from './settings-menu.html';\r\n// @ts-ignore\r\nimport languageInfoRaw from './language-info.html';\r\n// @ts-ignore\r\nimport customSettingsScreenRaw from './custom-settings.html';\r\n// @ts-ignore\r\nimport testEditorScreenRaw from './test-editor.html';\r\n// @ts-ignore\r\nimport importScreenRaw from './import.html';\r\n// @ts-ignore\r\nimport deployScreenRaw from './deploy.html';\r\n// @ts-ignore\r\nimport syncScreenRaw from './sync.html';\r\n// @ts-ignore\r\nimport backupScreenRaw from './backup.html';\r\n// @ts-ignore\r\nimport broadcastScreenRaw from './broadcast.html';\r\n// @ts-ignore\r\nimport welcomeScreenRaw from './welcome.html';\r\n// @ts-ignore\r\nimport aboutScreenRaw from './about.html';\r\n// @ts-ignore\r\nimport infoScreenRaw from './project-info.html';\r\n// @ts-ignore\r\nimport resourcesScreenRaw from './external-resources.html';\r\n// @ts-ignore\r\nimport loginScreenRaw from './login.html';\r\n// @ts-ignore\r\nimport savePromptScreenRaw from './save-prompt.html';\r\n// @ts-ignore\r\nimport recoverPromptScreenRaw from './recover-prompt.html';\r\n// @ts-ignore\r\nimport templatesScreenRaw from './templates.html';\r\n// @ts-ignore\r\nimport openScreenRaw from './open.html';\r\n// @ts-ignore\r\nimport assetsScreenRaw from './assets.html';\r\n// @ts-ignore\r\nimport addAssetScreenRaw from './add-asset.html';\r\n// @ts-ignore\r\nimport snippetsScreenRaw from './snippets.html';\r\n// @ts-ignore\r\nimport addSnippetScreenRaw from './add-snippet.html';\r\n// @ts-ignore\r\nimport shareScreenRaw from './share.html';\r\n// @ts-ignore\r\nimport embedScreenRaw from './embed.html';\r\n// @ts-ignore\r\nimport editorSettingsScreenRaw from './editor-settings.html';\r\n// @ts-ignore\r\nimport resultPopupHTMLRaw from './result-popup.html';\r\n\r\nconst replaceValues = (str: string) =>\r\n  str\r\n    .replace(/{{APP_VERSION}}/g, process.env.VERSION || '')\r\n    .replace(/{{SDK_VERSION}}/g, process.env.SDK_VERSION || '')\r\n    .replace(/{{COMMIT_SHA}}/g, process.env.GIT_COMMIT || '')\r\n    .replace(/{{REPO_URL}}/g, process.env.REPO_URL || '')\r\n    .replace(/{{DOCS_BASE_URL}}/g, process.env.DOCS_BASE_URL || '');\r\n\r\nconst resultTemplate = replaceValues(resultTemplateRaw);\r\nconst appHTML = replaceValues(appHTMLRaw);\r\nconst settingsMenuHTML = replaceValues(settingsMenuHTMLRaw);\r\nconst languageInfo = replaceValues(languageInfoRaw);\r\nconst customSettingsScreen = replaceValues(customSettingsScreenRaw);\r\nconst testEditorScreen = replaceValues(testEditorScreenRaw);\r\nconst importScreen = replaceValues(importScreenRaw);\r\nconst deployScreen = replaceValues(deployScreenRaw);\r\nconst syncScreen = replaceValues(syncScreenRaw);\r\nconst backupScreen = replaceValues(backupScreenRaw);\r\nconst broadcastScreen = replaceValues(broadcastScreenRaw);\r\nconst welcomeScreen = replaceValues(welcomeScreenRaw);\r\nconst aboutScreen = replaceValues(aboutScreenRaw);\r\nconst infoScreen = replaceValues(infoScreenRaw);\r\nconst resourcesScreen = replaceValues(resourcesScreenRaw);\r\nconst loginScreen = replaceValues(loginScreenRaw);\r\nconst savePromptScreen = replaceValues(savePromptScreenRaw);\r\nconst recoverPromptScreen = replaceValues(recoverPromptScreenRaw);\r\nconst templatesScreen = replaceValues(templatesScreenRaw);\r\nconst openScreen = replaceValues(openScreenRaw);\r\nconst assetsScreen = replaceValues(assetsScreenRaw);\r\nconst addAssetScreen = replaceValues(addAssetScreenRaw);\r\nconst snippetsScreen = replaceValues(snippetsScreenRaw);\r\nconst addSnippetScreen = replaceValues(addSnippetScreenRaw);\r\nconst shareScreen = replaceValues(shareScreenRaw);\r\nconst embedScreen = replaceValues(embedScreenRaw);\r\nconst editorSettingsScreen = replaceValues(editorSettingsScreenRaw);\r\nconst resultPopupHTML = replaceValues(resultPopupHTMLRaw);\r\n\r\nexport {\r\n  resultTemplate,\r\n  appHTML,\r\n  settingsMenuHTML,\r\n  languageInfo,\r\n  customSettingsScreen,\r\n  testEditorScreen,\r\n  importScreen,\r\n  deployScreen,\r\n  syncScreen,\r\n  backupScreen,\r\n  broadcastScreen,\r\n  welcomeScreen,\r\n  aboutScreen,\r\n  infoScreen,\r\n  resourcesScreen,\r\n  loginScreen,\r\n  savePromptScreen,\r\n  recoverPromptScreen,\r\n  templatesScreen,\r\n  openScreen,\r\n  assetsScreen,\r\n  addAssetScreen,\r\n  snippetsScreen,\r\n  addSnippetScreen,\r\n  shareScreen,\r\n  embedScreen,\r\n  editorSettingsScreen,\r\n  resultPopupHTML,\r\n};\r\n", "import type { Config, Language, Processor, WorkerMessageEvent } from '../models';\r\n\r\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\r\n  let timeout: any;\r\n\r\n  return (...args: unknown[]) => {\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\r\n  };\r\n};\r\n\r\nexport const decodeHTML = (html: string) => {\r\n  const txt = document.createElement('textarea');\r\n  txt.innerHTML = html;\r\n  return txt.value;\r\n};\r\n\r\nexport const encodeHTML = (html: string) =>\r\n  html\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/'/g, '&#39;')\r\n    .replace(/\"/g, '&#34;');\r\n\r\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\nexport const escapeCode = (code: string, slash = true) =>\r\n  code\r\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\r\n    .replace(/`/g, '\\\\`')\r\n    .replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const pipe = (...fns: Function[]) =>\r\n  fns.reduce(\r\n    (f, g) =>\r\n      (...args: any) =>\r\n        g(f(...args)),\r\n  );\r\n\r\n// replace non-alphanumeric with underscore\r\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\r\n\r\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n// added safari (on mac & ios): monaco editor is broken on safari\r\nexport const isMobile = () => {\r\n  let mobile = false;\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n        a,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4),\r\n      )\r\n    ) {\r\n      mobile = true;\r\n    }\r\n  })(userAgent || navigator.vendor || (window as any).opera);\r\n\r\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\r\n\r\n  return mobile || safari;\r\n};\r\n\r\nexport const isRelativeUrl = (url?: string) =>\r\n  !url?.startsWith('http') && !url?.startsWith('data:');\r\n\r\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\r\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\r\n\r\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\r\n\r\nexport const objectMap = (\r\n  obj: Record<string, any>,\r\n  fn: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\r\n\r\nexport const objectFilter = (\r\n  obj: Record<string, any>,\r\n  predicate: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\r\n    const textarea = document.createElement('textarea');\r\n    textarea.textContent = text;\r\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('Copy to clipboard failed.', ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const stringToValidJson = (str: string) =>\r\n  str\r\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\r\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\r\n    })\r\n    .replace(\r\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\r\n      function quoteNonQuoted(matchedStr) {\r\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\r\n      },\r\n    )\r\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\r\n\r\nexport const stringify = (obj: any, pretty = false) => {\r\n  try {\r\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\r\n  } catch {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\r\n\r\nexport const downloadFile = (filename: string, extension: string, content: string) => {\r\n  const a = document.createElement('a');\r\n  a.style.display = 'none';\r\n  a.href = content;\r\n  a.download = safeName(filename) + '.' + extension;\r\n  a.click();\r\n  a.remove();\r\n};\r\n\r\nexport const loadScript = (url: string, name?: string) =>\r\n  new Promise((resolve, reject) => {\r\n    if (name && (globalThis as any)[name]) {\r\n      return resolve((globalThis as any)[name]);\r\n    }\r\n\r\n    // if running in web worker\r\n    if (typeof (globalThis as any).importScripts === 'function') {\r\n      (globalThis as any).importScripts(url);\r\n      if (name && (globalThis as any)[name]) {\r\n        return resolve((globalThis as any)[name]);\r\n      }\r\n      return resolve(globalThis);\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.src = url;\r\n    script.async = true;\r\n    const removeEventListeners = () => {\r\n      script.removeEventListener('load', onLoad);\r\n      script.removeEventListener('error', onError);\r\n    };\r\n    const onLoad = () => {\r\n      removeEventListeners();\r\n      if (!name) {\r\n        return resolve('loaded: ' + url);\r\n      }\r\n      const i = setInterval(() => {\r\n        if ((window as any)[name]) {\r\n          clearInterval(i);\r\n          return resolve((window as any)[name]);\r\n        }\r\n      }, 5);\r\n    };\r\n    const onError = () => {\r\n      removeEventListeners();\r\n      reject('failed to load: ' + url);\r\n    };\r\n    script.addEventListener('load', onLoad);\r\n    script.addEventListener('error', onError);\r\n    document.head.appendChild(script);\r\n  });\r\n\r\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\r\n  if (id && document.getElementById(id)) return;\r\n  const stylesheet = document.createElement('link');\r\n  stylesheet.rel = 'stylesheet';\r\n  stylesheet.href = url;\r\n  stylesheet.id = id || 'styles-' + getRandomString();\r\n  document.head.insertBefore(\r\n    stylesheet,\r\n    insertBefore ? document.querySelector(insertBefore) : null,\r\n  );\r\n};\r\n\r\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\r\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\r\n\r\nexport const getDate = () => {\r\n  let date = new Date();\r\n  const offset = date.getTimezoneOffset();\r\n  date = new Date(date.getTime() - offset * 60 * 1000);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\r\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\r\n  fetch(input, init).then(handleFetchError);\r\n\r\nexport const blobToBase64 = (file: Blob): Promise<string> =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\r\n  const CHUNK_SZ = 0x8000;\r\n  const c = [];\r\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\r\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\r\n  }\r\n  return btoa(c.join(''));\r\n};\r\n\r\nexport const base64ToUint8Array = (str: string) =>\r\n  new Uint8Array(\r\n    atob(str)\r\n      .split('')\r\n      .map((c) => c.charCodeAt(0)),\r\n  );\r\n\r\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (a.byteLength !== b.byteLength) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < a.byteLength; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getWorkerDataURL = (url: string) => {\r\n  const content = `importScripts(\"${url}\");`;\r\n  return 'data:text/javascript;base64,' + btoa(content);\r\n};\r\n\r\nexport const removeComments = (src: string) =>\r\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\r\n\r\nexport const removeStrings = (src: string) =>\r\n  src\r\n    .replace(/'[^\\n']*'/gm, \"''\")\r\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\r\n    .replace(/`[^`]*`/gm, '``');\r\n\r\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\r\n\r\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\r\n  ...(config.customSettings as any)[language],\r\n});\r\n\r\nexport const getValidUrl = (url?: string) => {\r\n  if (!url) return null;\r\n  let validUrl = null;\r\n  if (url.startsWith('http') || url.startsWith('data:')) {\r\n    try {\r\n      validUrl = new URL(url).href;\r\n    } catch {\r\n      try {\r\n        validUrl = new URL(decodeURIComponent(url)).href;\r\n      } catch {\r\n        //\r\n      }\r\n    }\r\n  }\r\n  return validUrl;\r\n};\r\n\r\nexport const runOrContinue =\r\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\r\n  async (x: T): Promise<T> => {\r\n    try {\r\n      const result = await fn(x);\r\n      return result;\r\n    } catch (error) {\r\n      if (typeof catchFn === 'function') {\r\n        catchFn(error);\r\n      }\r\n      return x;\r\n    }\r\n  };\r\n\r\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\r\n\r\nexport const isInIframe = () => {\r\n  try {\r\n    return window.self !== window.top;\r\n  } catch {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\r\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\r\n\r\nexport const hideOnClickOutside = (element: HTMLElement) => {\r\n  const hideElement = () => {\r\n    element.style.display = 'none';\r\n    removeListeners();\r\n    (window as any).watchingEscape = false;\r\n  };\r\n\r\n  const outsideClickListener = (event: MouseEvent) => {\r\n    if (!element.contains(event.target as Node) && isVisible(element)) {\r\n      hideElement();\r\n    }\r\n  };\r\n\r\n  const escapeListener = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      hideElement();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const isVisible = (elem: HTMLElement) =>\r\n    !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\r\n\r\n  const removeListeners = () => {\r\n    document.removeEventListener('click', outsideClickListener);\r\n    document.removeEventListener('keydown', escapeListener);\r\n  };\r\n\r\n  document.addEventListener('click', outsideClickListener);\r\n  document.addEventListener('keydown', escapeListener);\r\n  (window as any).watchingEscape = true;\r\n\r\n  return {\r\n    clear: () => removeListeners(),\r\n  };\r\n};\r\n\r\nexport const callWorker = async <T = string, K = unknown>(\r\n  worker: Worker,\r\n  message: { method: T; args?: any },\r\n) =>\r\n  new Promise<K>((resolve) => {\r\n    const messageId = getRandomString();\r\n\r\n    const handler = (event: WorkerMessageEvent<T, K>) => {\r\n      const received = event.data;\r\n\r\n      if (received.method === message.method && received.messageId === messageId) {\r\n        worker.removeEventListener('message', handler);\r\n        resolve(received.data as K);\r\n      }\r\n    };\r\n    worker.addEventListener('message', handler);\r\n\r\n    worker.postMessage({\r\n      ...message,\r\n      messageId,\r\n    });\r\n  });\r\n\r\nexport const toCamelCase = (str: string) =>\r\n  str\r\n    .replace(/[-_.]+/g, ' ')\r\n    .trim()\r\n    .replace(/^([A-Z])|\\s+(\\w)/g, function (_match, p1, p2) {\r\n      if (p2) return p2.toUpperCase();\r\n      return p1.toLowerCase();\r\n    });\r\n\r\nexport const removeDuplicates = (arr: any[] | undefined) => Array.from(new Set(arr));\r\n", "import type { Config } from '../models';\r\n\r\nexport const defaultConfig: Config = {\r\n  title: 'Untitled Project',\r\n  description: '',\r\n  tags: [],\r\n  autoupdate: true,\r\n  autosave: false,\r\n  delay: 1500,\r\n  formatOnsave: false,\r\n  mode: 'full',\r\n  theme: 'dark',\r\n  recoverUnsaved: true,\r\n  showSpacing: false,\r\n  welcome: true,\r\n  readonly: false,\r\n  allowLangChange: true,\r\n  activeEditor: undefined,\r\n  languages: undefined,\r\n  markup: {\r\n    language: 'html',\r\n    content: '',\r\n  },\r\n  style: {\r\n    language: 'css',\r\n    content: '',\r\n  },\r\n  script: {\r\n    language: 'javascript',\r\n    content: '',\r\n  },\r\n  stylesheets: [],\r\n  scripts: [],\r\n  cssPreset: '',\r\n  imports: {},\r\n  types: {},\r\n  tests: {\r\n    language: 'typescript',\r\n    content: '',\r\n  },\r\n  tools: {\r\n    enabled: 'all',\r\n    active: '',\r\n    status: '',\r\n  },\r\n  zoom: 1,\r\n  processors: [],\r\n  customSettings: {},\r\n  editor: undefined,\r\n  fontFamily: undefined,\r\n  fontSize: undefined,\r\n  useTabs: false,\r\n  tabSize: 2,\r\n  lineNumbers: true,\r\n  wordWrap: false,\r\n  closeBrackets: true,\r\n  semicolons: true,\r\n  singleQuote: false,\r\n  trailingComma: true,\r\n  emmet: true,\r\n  editorMode: undefined,\r\n  version: process.env.VERSION as string,\r\n};\r\n", "import type { CDN } from '../models';\r\n\r\ndeclare const globalThis: { appCDN: CDN };\r\n\r\nconst moduleCDNs: CDN[] = ['jspm', 'skypack'];\r\nconst npmCDNs: CDN[] = ['unpkg', 'jsdelivr'];\r\nconst ghCDNs: CDN[] = ['jsdelivr.gh', 'statically'];\r\n\r\nexport const modulesService = {\r\n  getModuleUrl: (\r\n    moduleName: string,\r\n    { isModule = true, defaultCDN = 'jspm' }: { isModule?: boolean; defaultCDN?: CDN } = {},\r\n  ) => {\r\n    moduleName = moduleName.replace(/#nobundle/g, '');\r\n\r\n    const moduleUrl = getCdnUrl(moduleName, isModule, defaultCDN);\r\n    if (moduleUrl) {\r\n      return moduleUrl;\r\n    }\r\n\r\n    return isModule\r\n      ? 'https://jspm.dev/' + moduleName\r\n      : 'https://cdn.jsdelivr.net/npm/' + moduleName;\r\n  },\r\n\r\n  getUrl: (path: string, cdn?: CDN) =>\r\n    path.startsWith('http') ? path : getCdnUrl(path, false, cdn || getAppCDN()) || path,\r\n\r\n  cdnLists: { npm: npmCDNs, module: moduleCDNs, gh: ghCDNs },\r\n\r\n  checkCDNs: async (testModule: string, preferredCDN?: CDN) => {\r\n    const cdns: CDN[] = [preferredCDN, ...modulesService.cdnLists.npm].filter(Boolean) as CDN[];\r\n    for (const cdn of cdns) {\r\n      try {\r\n        const res = await fetch(modulesService.getUrl(testModule, cdn), {\r\n          method: 'HEAD',\r\n        });\r\n        if (res.ok) return cdn;\r\n      } catch {\r\n        // continue;\r\n      }\r\n    }\r\n    // fall back to first\r\n    return modulesService.cdnLists.npm[0];\r\n  },\r\n};\r\n\r\nexport const getAppCDN = (): CDN => {\r\n  if (globalThis.appCDN) return globalThis.appCDN;\r\n  try {\r\n    const url = new URL(location.href);\r\n    return (url.searchParams.get('appCDN') as CDN) || modulesService.cdnLists.npm[0];\r\n  } catch {\r\n    return modulesService.cdnLists.npm[0] as CDN;\r\n  }\r\n};\r\n\r\nconst getCdnUrl = (modName: string, isModule: boolean, defaultCDN?: CDN) => {\r\n  const post = isModule && modName.startsWith('unpkg:') ? '?module' : '';\r\n  if (modName.startsWith('gh:')) {\r\n    modName = modName.replace('gh', ghCDNs[0]);\r\n  } else if (!modName.includes(':')) {\r\n    const prefix = defaultCDN || (isModule ? moduleCDNs[0] : npmCDNs[0]);\r\n    modName = prefix + ':' + modName;\r\n  }\r\n  for (const i of TEMPLATES) {\r\n    const [pattern, template] = i;\r\n    if (pattern.test(modName)) {\r\n      return modName.replace(pattern, template) + post;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// based on https://github.com/neoascetic/rawgithack/blob/master/web/rawgithack.js\r\nconst TEMPLATES: Array<[RegExp, string]> = [\r\n  [/^(jspm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(npm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(node:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(skypack:)(.+)/i, 'https://cdn.skypack.dev/$2'],\r\n\r\n  [/^(jsdelivr:)(.+)/i, 'https://cdn.jsdelivr.net/npm/$2'],\r\n\r\n  [/^(jsdelivr.gh:)(.+)/i, 'https://cdn.jsdelivr.net/gh/$2'],\r\n\r\n  [/^(statically:)(.+)/i, 'https://cdn.statically.io/gh/$2'],\r\n\r\n  [/^(esm.run:)(.+)/i, 'https://esm.run/$2'],\r\n\r\n  [/^(esm.sh:)(.+)/i, 'https://esm.sh/$2'],\r\n\r\n  [/^(esbuild:)(.+)/i, 'https://esbuild.vercel.app/$2'],\r\n\r\n  [/^(bundle.run:)(.+)/i, 'https://bundle.run/$2'],\r\n\r\n  [/^(unpkg:)(.+)/i, 'https://unpkg.com/$2'],\r\n\r\n  [/^(bundlejs:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(bundle:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(deno:)(.+)/i, 'https://deno.bundlejs.com/?file&q=https://deno.land/x/$2/mod.ts'],\r\n\r\n  [/^(https:\\/\\/deno\\.land\\/.+)/i, 'https://deno.bundlejs.com/?file&q=$1'],\r\n\r\n  [\r\n    /^(github:|https:\\/\\/github\\.com\\/)(.[^\\/]+?)\\/(.[^\\/]+?)\\/(?!releases\\/)(?:(?:blob|raw)\\/)?(.+?\\/.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://cdn.jsdelivr.net/gh/$2/$3@$4',\r\n  ],\r\n\r\n  [/^(gist\\.github:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n\r\n  [\r\n    /^(gitlab:|https:\\/\\/gitlab\\.com\\/)([^\\/]+.*\\/[^\\/]+)\\/(?:raw|blob)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://gl.githack.com/$2/raw/$3',\r\n  ],\r\n  [\r\n    /^(bitbucket:|https:\\/\\/bitbucket\\.org\\/)([^\\/]+\\/[^\\/]+)\\/(?:raw|src)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://bb.githack.com/$2/raw/$3',\r\n  ],\r\n\r\n  // snippet file URL from web interface, with revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/]+)\\/revisions\\/([^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4',\r\n  ],\r\n  // snippet file URL from web interface, no revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3',\r\n  ],\r\n  // snippet file URLs from REST API\r\n  [\r\n    /^(bitbucket:)\\!api\\/2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n  [\r\n    /^(api\\.bitbucket:)2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n\r\n  [/^(rawgit:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n  [\r\n    /^(rawgit:|https:\\/\\/raw\\.githubusercontent\\.com)(\\/[^\\/]+\\/[^\\/]+|[0-9A-Za-z-]+\\/[0-9a-f]+\\/raw)\\/(.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://raw.githack.com/$2/$3',\r\n  ],\r\n];\r\n", "// eslint-disable-next-line import/no-internal-modules\r\nimport { modulesService } from './services/modules';\r\n\r\nconst { getUrl, getModuleUrl } = modulesService;\r\n\r\nexport const vendorsBaseUrl = // 'http://127.0.0.1:8081/';\r\n  /* @__PURE__ */ getUrl('@live-codes/browser-compilers@0.7.4/dist/');\r\n\r\nexport const acornUrl = /* @__PURE__ */ getUrl('acorn@8.8.2/dist/acorn.js');\r\n\r\nexport const artTemplateUrl = /* @__PURE__ */ getUrl('art-template@4.13.2/lib/template-web.js');\r\n\r\nexport const asciidocUrl = /* @__PURE__ */ getUrl(\r\n  '@asciidoctor/core@2.2.6/dist/browser/asciidoctor.js',\r\n);\r\n\r\nexport const assemblyscriptLoaderUrl = /* @__PURE__ */ getUrl(\r\n  '@assemblyscript/loader@0.27.5/umd/index.js',\r\n);\r\n\r\nexport const astringUrl = /* @__PURE__ */ getUrl('astring@1.8.1/dist/astring.min.js');\r\n\r\nexport const astroBaseUrl = /* @__PURE__ */ getUrl('@hatemhosny/astro-internal@0.0.4/');\r\n\r\nexport const astroWasmURL = /* @__PURE__ */ getUrl('@astrojs/compiler@0.9.2/astro.wasm');\r\n\r\nexport const autoCompleteUrl = /* @__PURE__ */ getUrl(\r\n  '@tarekraafat/autocomplete.js@10.2.6/dist/autoComplete.js',\r\n);\r\n\r\nexport const babelUrl = /* @__PURE__ */ getUrl('@babel/standalone@7.22.4/babel.js');\r\n\r\nexport const biwaschemeUrl = /* @__PURE__ */ getUrl('biwascheme@0.8.0/release/biwascheme.js');\r\n\r\nexport const blocklyCdnBaseUrl = /* @__PURE__ */ getUrl('blockly@9.3.3/');\r\n\r\nexport const brythonBaseUrl = /* @__PURE__ */ getUrl('brython@3.11.2/');\r\n\r\nexport const chaiUrl = /* @__PURE__ */ getModuleUrl('chai@4.3.6');\r\n\r\nexport const chaiTypesUrl = /* @__PURE__ */ getUrl('@types/chai@4.2.22/index.d.ts');\r\n\r\nexport const cherryCljsBaseUrl = /* @__PURE__ */ getUrl('cherry-cljs@0.0.4/');\r\n\r\nexport const cjs2esUrl = /* @__PURE__ */ getUrl('cjs2es@1.1.1/dist/cjs2es.browser.js');\r\n\r\nexport const clioBaseUrl = /* @__PURE__ */ getUrl(\r\n  '@live-codes/clio-browser-compiler@0.0.3/public/build/',\r\n);\r\n\r\nexport const coffeeScriptUrl = /* @__PURE__ */ getUrl(\r\n  'coffeescript@2.7.0/lib/coffeescript-browser-compiler-legacy/coffeescript.js',\r\n);\r\n\r\nexport const cppWasmBaseUrl = /* @__PURE__ */ getUrl('@chriskoch/cpp-wasm@1.0.2');\r\n\r\nexport const csstreeUrl = /* @__PURE__ */ getUrl('css-tree@1.1.3/dist/csstree.js');\r\n\r\nexport const cytoscapeSvgUrl = /* @__PURE__ */ getUrl('cytoscape-svg@0.4.0/cytoscape-svg.js');\r\n\r\nexport const cytoscapeUrl = /* @__PURE__ */ getUrl('cytoscape@3.25.0/dist/cytoscape.min.js');\r\n\r\nexport const dotUrl = /* @__PURE__ */ getUrl('dot@1.1.3/doT.js');\r\n\r\nexport const ejsUrl = /* @__PURE__ */ getUrl('ejs@3.1.9/ejs.js');\r\n\r\nexport const elkjsBaseUrl = /* @__PURE__ */ getUrl('elkjs@0.8.2/lib/');\r\n\r\nexport const emmetMonacoUrl = /* @__PURE__ */ getUrl('emmet-monaco-es@5.0.0/dist/emmet-monaco.js');\r\n\r\nexport const esModuleShimsPath = 'es-module-shims@1.4.4/dist/es-module-shims.js';\r\n\r\nexport const etaUrl = /* @__PURE__ */ getUrl('eta@2.2.0/dist/eta.umd.js');\r\n\r\nexport const flexSearchUrl = /* @__PURE__ */ getUrl('flexsearch@0.7.21/dist/flexsearch.bundle.js');\r\n\r\nexport const fontAnonymousProUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/anonymous-pro@4.5.9/index.css',\r\n);\r\n\r\nexport const fontCascadiaCodeUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/cascadia-code@4.2.1/index.css',\r\n);\r\n\r\nexport const fontCodeNewRomanUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/code-new-roman-2',\r\n);\r\n\r\nexport const fontComicMonoUrl = /* @__PURE__ */ getUrl('comic-mono@0.0.1/index.css');\r\n\r\nexport const fontCourierPrimeUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/courier-prime@4.5.9/index.css',\r\n);\r\n\r\nexport const fontDECTerminalModernUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/dec-terminal-modern',\r\n);\r\n\r\nexport const fontDejaVuMonoUrl = /* @__PURE__ */ getUrl('@fontsource/dejavu-mono@4.5.4/index.css');\r\n\r\nexport const fontFantasqueUrl = /* @__PURE__ */ getUrl(\r\n  '@typopro/web-fantasque-sans-mono@3.7.5/TypoPRO-FantasqueSansMono.css',\r\n);\r\n\r\nexport const fontFiraCodeUrl = /* @__PURE__ */ getUrl('firacode@6.2.0/distr/fira_code.css');\r\n\r\nexport const fontFixedsysUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/fixedsys-62');\r\n\r\nexport const fontHackUrl = /* @__PURE__ */ getUrl('hack-font@3.3.0/build/web/hack.css');\r\n\r\nexport const fontHermitUrl = /* @__PURE__ */ getUrl('typeface-hermit@0.0.44/index.css');\r\n\r\nexport const fontIBMPlexMonoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap',\r\n);\r\n\r\nexport const fontInconsolataUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Inconsolata&display=swap',\r\n);\r\n\r\nexport const fontIosevkaUrl = /* @__PURE__ */ getUrl('@fontsource/iosevka@4.5.4/index.css');\r\n\r\nexport const fontJetbrainsMonoUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/jetbrains-mono@4.5.11/index.css',\r\n);\r\n\r\nexport const fontMenloUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/menlo');\r\n\r\nexport const fontMonofurUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/monofur');\r\n\r\nexport const fontMonoidUrl = /* @__PURE__ */ getUrl('@typopro/web-monoid@3.7.5/TypoPRO-Monoid.css');\r\n\r\nexport const fontNotoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Noto+Sans+Mono&display=swap',\r\n);\r\n\r\nexport const fontNovaMonoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Nova+Mono&display=swap',\r\n);\r\n\r\nexport const fontOpenDyslexicUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/opendyslexic@4.5.4/index.css',\r\n);\r\n\r\nexport const fontProFontWindowsUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/profontwindows',\r\n);\r\n\r\nexport const fontRobotoMonoUrl = /* @__PURE__ */ getUrl('@fontsource/roboto-mono@4.5.8/index.css');\r\n\r\nexport const fontSFMonoUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/sf-mono');\r\n\r\nexport const fontSourceCodeProUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/source-code-pro@4.5.12/index.css',\r\n);\r\n\r\nexport const fontSpaceMonoUrl = /* @__PURE__ */ getUrl('@fontsource/space-mono@4.5.10/index.css');\r\n\r\nexport const fontSudoVarUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/sudo-var');\r\n\r\nexport const fontUbuntuMonoUrl = /* @__PURE__ */ getUrl('@fontsource/ubuntu-mono@4.5.11/index.css');\r\n\r\nexport const fontVictorMonoUrl = /* @__PURE__ */ getUrl('victormono@1.5.4/dist/index.css');\r\n\r\nexport const fscreenUrl = /* @__PURE__ */ getUrl('fscreen@1.2.0/dist/fscreen.esm.js');\r\n\r\nexport const githubMarkdownCss = /* @__PURE__ */ getUrl(\r\n  'github-markdown-css@5.1.0/github-markdown.css',\r\n);\r\n\r\nexport const go2jsBaseUrl = /* @__PURE__ */ getUrl('@live-codes/go2js@0.4.0/build/');\r\n\r\nexport const graphreCdnUrl = /* @__PURE__ */ getUrl('graphre@0.1.3/dist/graphre.js');\r\n\r\nexport const handlebarsBaseUrl = /* @__PURE__ */ getUrl('handlebars@4.7.7/dist/');\r\n\r\nexport const highlightjsUrl = /* @__PURE__ */ getModuleUrl('highlight.js@11.5.1');\r\n\r\nexport const hintCssUrl = /* @__PURE__ */ getUrl('hint.css@2.7.0/hint.css');\r\n\r\nexport const hpccJsCdnUrl = /* @__PURE__ */ getUrl('@hpcc-js/wasm@2.13.0/dist/index.js');\r\n\r\nexport const imbaBaseUrl = /* @__PURE__ */ getUrl('imba@2.0.0-alpha.229/dist/');\r\n\r\nexport const jestLiteUrl = /* @__PURE__ */ getUrl('jest-lite@1.0.0-alpha.4/dist/core.js');\r\n\r\nexport const jestTypesUrl = /* @__PURE__ */ getUrl('@types/jest@27.4.1/index.d.ts');\r\n\r\nexport const jsclUrl = /* @__PURE__ */ getUrl(\r\n  'gh:jscl-project/jscl-project.github.io@efd3aecdba496d132ed650b7b5be976fd0ca278f/jscl.js',\r\n);\r\n\r\nexport const jsZipUrl = /* @__PURE__ */ getUrl('jszip@3.10.1/dist/jszip.js');\r\n\r\nexport const juliaWasmBaseUrl = /* @__PURE__ */ getUrl('@chriskoch/julia-wasm@1.0.4');\r\n\r\nexport const liquidJsUrl = /* @__PURE__ */ getUrl('liquidjs@10.8.2/dist/liquid.browser.min.js');\r\n\r\nexport const localforageUrl = /* @__PURE__ */ getUrl('localforage@1.10.0/dist/localforage.js');\r\n\r\nexport const luaUrl = /* @__PURE__ */ getUrl('fengari-web@0.1.4/dist/fengari-web.js');\r\n\r\nexport const lunaObjViewerStylesUrl = /* @__PURE__ */ getUrl(\r\n  'luna-object-viewer@0.2.0/luna-object-viewer.css',\r\n);\r\n\r\nexport const lunaConsoleStylesUrl = /* @__PURE__ */ getUrl('luna-console@0.2.1/luna-console.css');\r\n\r\nexport const malinaVersion = '0.6.64';\r\nexport const malinaUrl = /* @__PURE__ */ getUrl(`malinajs@${malinaVersion}/malina.js`);\r\n\r\nexport const markedUrl = /* @__PURE__ */ getUrl('marked@5.0.4/marked.min.js');\r\n\r\nexport const mermaidCdnUrl = /* @__PURE__ */ getUrl('mermaid@10.2.2/dist/mermaid.esm.mjs');\r\n\r\nexport const mjmlUrl = /* @__PURE__ */ getUrl('mjml-browser@4.14.1/lib/index.js');\r\n\r\nexport const monacoEmacsUrl = /* @__PURE__ */ getUrl('monaco-emacs@0.3.0/dist/monaco-emacs.js');\r\n\r\nexport const monacoVimUrl = /* @__PURE__ */ getUrl('monaco-vim@0.4.0/dist/monaco-vim.js');\r\n\r\nexport const mustacheUrl = /* @__PURE__ */ getUrl('mustache@4.2.0/mustache.js');\r\n\r\nexport const nomnomlCdnUrl = /* @__PURE__ */ getUrl('nomnoml@1.6.1/dist/nomnoml.js');\r\n\r\nexport const normalizeCssUrl = /* @__PURE__ */ getUrl('normalize.css@8.0.1/normalize.css');\r\n\r\nexport const nunjucksBaseUrl = /* @__PURE__ */ getUrl('nunjucks@3.2.4/browser/');\r\n\r\nexport const opalBaseUrl = /* @__PURE__ */ getUrl('https://cdn.opalrb.com/opal/1.7.3/');\r\n\r\nexport const parinferUrl = /* @__PURE__ */ getUrl('parinfer@3.13.1/parinfer.js');\r\n\r\nexport const pintoraUrl = /* @__PURE__ */ getUrl(\r\n  '@pintora/standalone@0.6.2/lib/pintora-standalone.umd.js',\r\n);\r\n\r\nexport const plotlyCdnUrl = /* @__PURE__ */ getUrl('plotly.js@2.23.2/dist/plotly.js');\r\n\r\nexport const postcssImportUrlUrl = /* @__PURE__ */ getUrl(\r\n  '@live-codes/postcss-import-url@0.1.2/dist/postcss-import-url.js',\r\n);\r\n\r\nexport const prettierBaseUrl = /* @__PURE__ */ getUrl('prettier@2.5.1/');\r\n\r\nexport const prettierPhpUrl = /* @__PURE__ */ getUrl('@prettier/plugin-php@0.18.0/standalone.js');\r\n\r\nexport const prismBaseUrl = /* @__PURE__ */ getUrl('prismjs@1.26.0/components/');\r\n\r\nexport const pyodideBaseUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.jsdelivr.net/pyodide/v0.23.2/full/',\r\n);\r\n\r\nexport const qrcodeUrl = /* @__PURE__ */ getUrl('qrcode-generator@1.4.4/qrcode.js');\r\n\r\nexport const quillEditorCdnBaseUrl = /* @__PURE__ */ getUrl('quill@2.0.0-dev.4/dist/');\r\n\r\nexport const quillHtmlEditUrl = /* @__PURE__ */ getUrl(\r\n  'quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js',\r\n);\r\n\r\nexport const quillBlotFormaterUrl = /* @__PURE__ */ getUrl(\r\n  'quill-blot-formatter@1.0.5/dist/quill-blot-formatter.min.js',\r\n);\r\n\r\nexport const quillBetterTableBaseUrl = /* @__PURE__ */ getUrl('quill-better-table@1.2.10/dist/');\r\n\r\nexport const requireUrl = /* @__PURE__ */ getUrl('requirejs@2.3.6/require.js');\r\n\r\nexport const reasonCompilerUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v9.1.2/compiler.js',\r\n);\r\n\r\nexport const reasonReactUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v9.1.2/%40rescript/react/cmij.js',\r\n);\r\n\r\nexport const reasonStdLibBaseUrl = /* @__PURE__ */ getUrl('@rescript/std@9.1.3/lib/es6/');\r\n\r\nexport const rescriptCompilerUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v10.1.2/compiler.js',\r\n);\r\n\r\nexport const rescriptReactUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v10.1.2/%40rescript/react/cmij.js',\r\n);\r\n\r\nexport const rescriptStdLibBaseUrl = /* @__PURE__ */ getUrl('@rescript/std@10.1.2/lib/es6/');\r\n\r\nexport const resetCssUrl = /* @__PURE__ */ getUrl('reset-css@5.0.1/reset.css');\r\n\r\nexport const riotBaseUrl = /* @__PURE__ */ getUrl('riot@7.1.0/');\r\n\r\nexport const snackbarUrl = /* @__PURE__ */ getUrl('@snackbar/core@1.7.0/dist/snackbar.css');\r\n\r\nexport const spacingJsUrl = /* @__PURE__ */ getUrl('spacingjs@1.0.7/dist/bundle.js');\r\n\r\nexport const sqlFormatterUrl = /* @__PURE__ */ getUrl(\r\n  'sql-formatter@12.2.1/dist/sql-formatter.min.js',\r\n);\r\n\r\nexport const sqljsBaseUrl = /* @__PURE__ */ getUrl('sql.js@1.8.0/dist/');\r\n\r\nexport const stencilUrl = /* @__PURE__ */ getUrl('@stencil/core@3.2.2/compiler/stencil.js');\r\n\r\nexport const stylisUrl = /* @__PURE__ */ getUrl('stylis@4.2.0/dist/umd/stylis.js');\r\n\r\nexport const svgbobWasmCdnUrl = /* @__PURE__ */ getUrl('svgbob-wasm@0.4.1-a0/svgbob_wasm_bg.wasm');\r\n\r\nexport const tagifyBaseUrl = /* @__PURE__ */ getUrl('@yaireo/tagify@4.9.6/dist/');\r\n\r\nexport const tailwindcssUrl = /* @__PURE__ */ getUrl(\r\n  '@mhsdesign/jit-browser-tailwindcss@0.3.0/dist/cdn.min.js',\r\n);\r\n\r\nexport const tauPrologBaseUrl = /* @__PURE__ */ getUrl('tau-prolog@0.3.4/modules/');\r\n\r\nexport const tealUrl = /* @__PURE__ */ getUrl(\r\n  'gh:teal-language/tl@d2fc36b5ff9a52d7265e63eb74cce70fd1cdbcb2/tl.lua',\r\n);\r\n\r\nexport const twigUrl = /* @__PURE__ */ getUrl('twig@1.16.0/twig.min.js');\r\n\r\nexport const typescriptUrl = /* @__PURE__ */ getUrl('typescript@5.1.3/lib/typescript.js');\r\n\r\nexport const uniterUrl = /* @__PURE__ */ getUrl('uniter@2.18.0/dist/uniter.js');\r\n\r\nexport const vegaCdnUrl = /* @__PURE__ */ getUrl('vega@5.25.0/build/vega.js');\r\n\r\nexport const vegaLiteCdnUrl = /* @__PURE__ */ getUrl('vega-lite@5.9.3/build/vega-lite.js');\r\n\r\nexport const vue3CdnUrl = /* @__PURE__ */ getUrl('vue@3');\r\n\r\nexport const vue2CdnUrl = /* @__PURE__ */ getUrl('vue@2');\r\n\r\nexport const vueSfcLoaderCdnBaseUrl = /* @__PURE__ */ getUrl('vue3-sfc-loader@0.8.4/dist/');\r\n\r\nexport const wabtjsUrl = /* @__PURE__ */ getUrl('wabt@1.0.32/index.js');\r\n\r\nexport const waveDromBaseUrl = /* @__PURE__ */ getUrl('wavedrom@3.2.0/');\r\n\r\nexport const webRBaseUrl = /* @__PURE__ */ getUrl('@r-wasm/webr@0.1.1/dist/');\r\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const lightningcss: ProcessorSpecs = {\n  name: 'lightningcss',\n  title: 'Lightning CSS',\n  isPostcssPlugin: false,\n  compiler: {\n    url: vendorsBaseUrl + 'lightningcss/lightningcss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-lightningcss-compiler.js}}');\n      return (self as any).createLightningcssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const postcss: ProcessorSpecs = {\n  name: 'postcss',\n  title: 'Processors:',\n  isPostcssPlugin: false,\n  compiler: {\n    url: vendorsBaseUrl + 'postcss/postcss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-postcss-compiler.js}}');\n      return (self as any).createPostcssCompiler();\n    },\n  },\n  editor: 'style',\n  hidden: true,\n};\n", "import type { ProcessorSpecs } from '../../models';\r\nimport { postcssImportUrlUrl, vendorsBaseUrl } from '../../vendors';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\n\r\nexport const autoprefixer: ProcessorSpecs = {\r\n  name: 'autoprefixer',\r\n  title: 'Autoprefixer',\r\n  isPostcssPlugin: true,\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'autoprefixer/autoprefixer.js',\r\n    factory: (config) =>\r\n      (self as any).autoprefixer.autoprefixer({\r\n        ...getLanguageCustomSettings('autoprefixer', config),\r\n      }),\r\n  },\r\n  editor: 'style',\r\n};\r\n\r\nexport const cssnano: ProcessorSpecs = {\r\n  name: 'cssnano',\r\n  title: 'cssnano',\r\n  isPostcssPlugin: true,\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'cssnano/cssnano.js',\r\n    factory: () => {\r\n      const nanoPlugins = (self as any).cssnano.cssnanoPresetDefault().plugins;\r\n      const postcssPlugins = [];\r\n      for (const plugin of nanoPlugins) {\r\n        const [processor, opts] = plugin;\r\n        if (\r\n          typeof opts === 'undefined' ||\r\n          (typeof opts === 'object' && !opts.exclude) ||\r\n          (typeof opts === 'boolean' && opts === true)\r\n        ) {\r\n          postcssPlugins.push(processor(opts));\r\n        }\r\n      }\r\n      return postcssPlugins;\r\n    },\r\n  },\r\n  editor: 'style',\r\n};\r\n\r\nexport const postcssImportUrl: ProcessorSpecs = {\r\n  name: 'postcssImportUrl',\r\n  title: 'Import Url',\r\n  isPostcssPlugin: true,\r\n  compiler: {\r\n    url: postcssImportUrlUrl,\r\n    factory: (config) =>\r\n      (self as any).postcssImportUrl({\r\n        ...getLanguageCustomSettings('postcssImportUrl', config),\r\n      }),\r\n  },\r\n  editor: 'style',\r\n};\r\n\r\nexport const postcssPresetEnv: ProcessorSpecs = {\r\n  name: 'postcssPresetEnv',\r\n  title: 'Preset Env',\r\n  isPostcssPlugin: true,\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'postcss-preset-env/postcss-preset-env.js',\r\n    factory: (config) =>\r\n      (self as any).postcssPresetEnv.postcssPresetEnv({\r\n        autoprefixer: false,\r\n        ...getLanguageCustomSettings('postcssPresetEnv', config),\r\n      }),\r\n  },\r\n  editor: 'style',\r\n};\r\n\r\nexport const purgecss: ProcessorSpecs = {\r\n  name: 'purgecss',\r\n  title: 'PurgeCSS',\r\n  isPostcssPlugin: true,\r\n  needsHTML: true,\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'purgecss/purgecss.js',\r\n    factory: (config, _baseUrl, options) =>\r\n      (self as any).purgecss.purgecss({\r\n        ...getLanguageCustomSettings('purgecss', config),\r\n        content: [\r\n          {\r\n            raw: `<template>${options.html}\\n<script>${config.script.content}</script></template>`,\r\n            extension: 'html',\r\n          },\r\n        ],\r\n      }),\r\n  },\r\n  editor: 'style',\r\n};\r\n\r\nexport const tokencss: ProcessorSpecs = {\r\n  name: 'tokencss',\r\n  title: 'Token CSS',\r\n  isPostcssPlugin: true,\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'tokencss/tokencss.js',\r\n    factory: (config) => {\r\n      const customSettings = getLanguageCustomSettings('tokencss', config);\r\n      if (Object.keys(customSettings).length === 0) {\r\n        customSettings.$schema = 'https://tokencss.com/schema@0.0.1';\r\n        customSettings.extends = '@tokencss/core/preset';\r\n      }\r\n      const extendTokens = (base: any, tokens: any) => {\r\n        const result = JSON.parse(JSON.stringify(base));\r\n        Object.keys(tokens).forEach((key) => {\r\n          result[key] =\r\n            typeof tokens[key] !== 'object' || Array.isArray(tokens[key])\r\n              ? tokens[key]\r\n              : {\r\n                  ...result[key],\r\n                  ...tokens[key],\r\n                };\r\n        });\r\n        return result;\r\n      };\r\n      const tokensConfig = customSettings.extends?.includes('@tokencss/core/preset')\r\n        ? extendTokens((self as any).tokencss.preset, customSettings)\r\n        : customSettings;\r\n\r\n      return (self as any).tokencss.tokencss({ config: tokensConfig });\r\n    },\r\n  },\r\n  editor: 'style',\r\n};\r\n\r\nexport const cssModules: ProcessorSpecs = {\r\n  name: 'cssmodules',\r\n  title: 'CSS Modules',\r\n  isPostcssPlugin: true,\r\n  needsHTML: true,\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'postcss-modules/postcss-modules.js',\r\n    factory: (config, _baseUrl, options) => {\r\n      const customSettings = getLanguageCustomSettings('cssmodules', config);\r\n      return (self as any).postcssModules.postcssModules({\r\n        localsConvention: 'camelCase',\r\n        ...customSettings,\r\n        getJSON(_cssFileName: string, json: Record<string, string>, _outputFileName: string) {\r\n          const addClasses = customSettings.addClassesToHTML !== false;\r\n          const removeClasses = customSettings.removeOriginalClasses === true;\r\n          if (addClasses) {\r\n            options.html = (self as any).postcssModules.addClassesToHtml(\r\n              options.html,\r\n              json,\r\n              removeClasses,\r\n            );\r\n          }\r\n          options.compileInfo = {\r\n            ...options.compileInfo,\r\n            cssModules: json,\r\n            ...(addClasses ? { modifiedHTML: options.html } : {}),\r\n          };\r\n        },\r\n      });\r\n    },\r\n  },\r\n  editor: 'style',\r\n};\r\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const unocss: ProcessorSpecs = {\n  name: 'unocss',\n  title: 'UnoCSS',\n  isPostcssPlugin: false,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'unocss/unocss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-unocss-compiler.js}}');\n      return (self as any).createUnocssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const windicss: ProcessorSpecs = {\n  name: 'windicss',\n  title: 'Windi CSS',\n  isPostcssPlugin: false,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'windicss/windicss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-windicss-compiler.js}}');\n      return (self as any).createWindicssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import { prettierBaseUrl, prettierPhpUrl, vendorsBaseUrl } from '../vendors';\r\n\r\nexport const prettierUrl = prettierBaseUrl + 'standalone.js';\r\nexport const parserPlugins = {\r\n  babel: prettierBaseUrl + 'parser-babel.js',\r\n  glimmer: prettierBaseUrl + 'parser-glimmer.js',\r\n  html: prettierBaseUrl + 'parser-html.js',\r\n  markdown: prettierBaseUrl + 'parser-markdown.js',\r\n  postcss: prettierBaseUrl + 'parser-postcss.js',\r\n  php: prettierPhpUrl,\r\n  pug: vendorsBaseUrl + 'prettier/parser-pug.js',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { babelUrl } from '../../vendors';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const babel: LanguageSpecs = {\r\n  name: 'babel',\r\n  title: 'Babel',\r\n  parser: {\r\n    name: 'babel',\r\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    url: babelUrl,\r\n    factory:\r\n      () =>\r\n      async (code, { config }) =>\r\n        (window as any).Babel.transform(code, {\r\n          filename: 'script.tsx',\r\n          presets: [['env', { modules: false }], 'typescript', 'react'],\r\n          ...getLanguageCustomSettings('babel', config),\r\n        }).code,\r\n  },\r\n  extensions: ['es', 'babel'],\r\n  editor: 'script',\r\n  editorLanguage: 'typescript',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const css: LanguageSpecs = {\n  name: 'css',\n  title: 'CSS',\n  info: false,\n  parser: {\n    name: 'css',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['css'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const haml: LanguageSpecs = {\n  name: 'haml',\n  title: 'Haml',\n  compiler: {\n    url: vendorsBaseUrl + 'clientside-haml-js/haml.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-haml-compiler.js}}');\n      return (self as any).createHamlCompiler();\n    },\n  },\n  extensions: ['haml'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const html: LanguageSpecs = {\n  name: 'html',\n  title: 'HTML',\n  info: false,\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['html', 'htm'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const javascript: LanguageSpecs = {\n  name: 'javascript',\n  title: 'JS',\n  longTitle: 'JavaScript',\n  info: false,\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['js'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const jsx: LanguageSpecs = {\n  name: 'jsx',\n  title: 'JSX',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'typescript',\n  extensions: ['jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const tsx: LanguageSpecs = {\n  name: 'tsx',\n  title: 'TSX',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'typescript',\n  extensions: ['tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { vendorsBaseUrl } from '../../vendors';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const less: LanguageSpecs = {\r\n  name: 'less',\r\n  title: 'Less',\r\n  parser: {\r\n    name: 'less',\r\n    pluginUrls: [parserPlugins.postcss],\r\n  },\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'less/less.js',\r\n    factory:\r\n      () =>\r\n      async (code, { config }) =>\r\n        (\r\n          await (window as any).less.render(code, {\r\n            ...getLanguageCustomSettings('less', config),\r\n          })\r\n        ).css,\r\n  },\r\n  extensions: ['less'],\r\n  editor: 'style',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { markedUrl } from '../../vendors';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const markdown: LanguageSpecs = {\r\n  name: 'markdown',\r\n  title: 'Markdown',\r\n  parser: {\r\n    name: 'markdown',\r\n    pluginUrls: [parserPlugins.markdown, parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    url: markedUrl,\r\n    factory:\r\n      () =>\r\n      async (code, { config }) =>\r\n        (window as any).marked.parse(code, {\r\n          headerIds: false,\r\n          mangle: false,\r\n          ...getLanguageCustomSettings('markdown', config),\r\n        }),\r\n  },\r\n  extensions: ['md', 'markdown', 'mdown', 'mkdn'],\r\n  editor: 'markup',\r\n};\r\n", "import type { Config, Language, CompileOptions } from '../models';\r\n\r\nexport const compileInCompiler = async (\r\n  content: string,\r\n  language: Language | undefined,\r\n  config: Config,\r\n  options: CompileOptions = {},\r\n  worker: Worker = self as unknown as Worker,\r\n): Promise<string> =>\r\n  new Promise((resolve) => {\r\n    if (!content || !language || !config) {\r\n      return resolve(content || '');\r\n    }\r\n    const handler = async function (ev: MessageEvent) {\r\n      const message = ev.data.payload;\r\n      if (\r\n        ev.data.trigger === 'compileInCompiler' &&\r\n        message?.content === content &&\r\n        message?.language === language\r\n      ) {\r\n        worker.removeEventListener('message', handler);\r\n        resolve(message.compiled);\r\n      }\r\n    };\r\n    worker.addEventListener('message', handler);\r\n    worker.postMessage({\r\n      type: 'compileInCompiler',\r\n      payload: { content, language, config, options },\r\n    });\r\n  });\r\n", "import type { CompilerFunction, LanguageSpecs } from '../../models';\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport { compileInCompiler } from '../../compiler/compile-in-compiler';\r\nimport { escapeCode, getLanguageCustomSettings } from '../../utils';\r\nimport { vendorsBaseUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const runOutsideWorker: CompilerFunction = async (code: string, { config, worker }) =>\r\n  new Promise(async (resolve) => {\r\n    if (!code) return resolve('');\r\n    const [mdx, { default: remarkGfm }] = await Promise.all([\r\n      import(vendorsBaseUrl + 'mdx/mdx.js'),\r\n      import(vendorsBaseUrl + 'remark-gfm/remark-gfm.js'),\r\n    ]);\r\n\r\n    const compiled = (\r\n      await mdx.compile(code, {\r\n        remarkPlugins: [remarkGfm],\r\n        ...getLanguageCustomSettings('mdx', config),\r\n      })\r\n    ).value;\r\n\r\n    // TODO: improve this\r\n    const removeComponentDeclaration = (str: string) =>\r\n      str\r\n        .replace(/, {[^}]*} = _components/g, '')\r\n        .replace(/const {[^:]*} = props.components[^;]*;/g, '');\r\n\r\n    const jsx = removeComponentDeclaration(compiled);\r\n    const result = `import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n${escapeCode(jsx, false)}\r\ncreateRoot(document.querySelector('#__livecodes_mdx_root__')).render(<MDXContent />,);\r\n`;\r\n    const js = await compileInCompiler(result, 'jsx', config, {}, worker);\r\n    resolve(`<div id=\"__livecodes_mdx_root__\"></div><script type=\"module\">${js}</script>`);\r\n  });\r\n\r\nexport const mdx: LanguageSpecs = {\r\n  name: 'mdx',\r\n  title: 'MDX',\r\n  parser: {\r\n    name: 'markdown',\r\n    pluginUrls: [parserPlugins.markdown, parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    factory: () => async (code) => code,\r\n    runOutsideWorker,\r\n    compiledCodeLanguage: 'javascript',\r\n  },\r\n  extensions: ['mdx'],\r\n  editor: 'markup',\r\n  editorLanguage: 'markdown',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { vendorsBaseUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const pug: LanguageSpecs = {\r\n  name: 'pug',\r\n  title: 'Pug',\r\n  parser: {\r\n    name: 'pug',\r\n    pluginUrls: [parserPlugins.pug],\r\n  },\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'pug/pug.min.js',\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-pug-compiler.js}}');\r\n      return (self as any).createPugCompiler();\r\n    },\r\n  },\r\n  extensions: ['pug', 'jade'],\r\n  editor: 'markup',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const scss: LanguageSpecs = {\n  name: 'scss',\n  title: 'SCSS',\n  parser: {\n    name: 'scss',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'sass/sass.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-scss-compiler.js}}');\n      return (self as any).createScssCompiler();\n    },\n  },\n  extensions: ['scss'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const svelte: LanguageSpecs = {\n  name: 'svelte',\n  title: 'Svelte',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'svelte/svelte-compiler.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-svelte-compiler.js}}');\n      return (self as any).createSvelteCompiler();\n    },\n  },\n  extensions: ['svelte'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const stylus: LanguageSpecs = {\n  name: 'stylus',\n  title: 'Stylus',\n  compiler: {\n    url: vendorsBaseUrl + 'stylus/stylus.min.js',\n    factory: () => async (code) => (window as any).stylus.render(code),\n  },\n  extensions: ['styl'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { typescriptUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const typescriptOptions = {\n  target: 'es2015',\n  jsx: 'react',\n  allowUmdGlobalAccess: true,\n  esModuleInterop: true,\n};\n\nexport const typescript: LanguageSpecs = {\n  name: 'typescript',\n  title: 'TS',\n  longTitle: 'TypeScript',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: typescriptUrl,\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n  },\n  extensions: ['ts', 'typescript'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { vue3CdnUrl, vueSfcLoaderCdnBaseUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nconst loaderCdnUrl = vueSfcLoaderCdnBaseUrl + 'vue3-sfc-loader.js';\r\n\r\nexport const vue: LanguageSpecs = {\r\n  name: 'vue',\r\n  title: 'Vue 3',\r\n  longTitle: 'Vue 3 SFC',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-vue-compiler.js}}');\r\n      return (self as any).createVueCompiler();\r\n    },\r\n    scripts: [vue3CdnUrl, loaderCdnUrl],\r\n    imports: {\r\n      vue: vue3CdnUrl + '/dist/vue.runtime.esm-browser.prod.js',\r\n    },\r\n  },\r\n  extensions: ['vue', 'vue3'],\r\n  editor: 'script',\r\n  editorLanguage: 'html',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { vue2CdnUrl, vueSfcLoaderCdnBaseUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nconst loaderCdnUrl = vueSfcLoaderCdnBaseUrl + 'vue2-sfc-loader.js';\r\n\r\nexport const vue2: LanguageSpecs = {\r\n  name: 'vue2',\r\n  title: 'Vue 2',\r\n  longTitle: 'Vue 2 SFC',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-vue-compiler.js}}');\r\n      return (self as any).createVue2Compiler();\r\n    },\r\n    scripts: [vue2CdnUrl, loaderCdnUrl],\r\n    imports: {\r\n      vue: vue2CdnUrl + '/dist/vue.runtime.esm-browser.prod.js',\r\n    },\r\n  },\r\n  extensions: ['vue2'],\r\n  editor: 'script',\r\n  editorLanguage: 'html',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { stencilUrl, vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const stencil: LanguageSpecs = {\n  name: 'stencil',\n  title: 'Stencil',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: stencilUrl,\n    factory:\n      () =>\n      async (code, { config }) => {\n        const result = await (window as any).stencil.transpile(code, {\n          // TranspileOptions interface\n          // https://github.com/ionic-team/stencil/blob/1b8b7ec21f2622d05c9aafa417b2abdd4f2597a4/src/declarations/stencil-public-compiler.ts#L2311\n          sourceMap: false,\n          target: 'es2019',\n          ...getLanguageCustomSettings('stencil', config),\n        });\n        return result.code;\n      },\n    types: {\n      '@stencil/core': {\n        url: vendorsBaseUrl + 'types/stencil-core.d.ts',\n        declareAsModule: false,\n      },\n    },\n  },\n  extensions: ['stencil.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\nexport const livescript: LanguageSpecs = {\n  name: 'livescript',\n  title: 'LiveScript',\n  compiler: {\n    url: vendorsBaseUrl + 'livescript/livescript-min.js',\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).require('livescript').compile(code, {\n          bare: true,\n          ...getLanguageCustomSettings('livescript', config),\n        }),\n    scripts: [vendorsBaseUrl + 'livescript/prelude-browser-min.js'],\n  },\n  extensions: ['ls'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { assemblyscriptLoaderUrl, vendorsBaseUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nconst assemblyscriptUrl = vendorsBaseUrl + 'assemblyscript/assemblyscript.js';\r\n\r\nexport const assemblyscript: LanguageSpecs = {\r\n  name: 'assemblyscript',\r\n  title: 'AS',\r\n  longTitle: 'AssemblyScript',\r\n  parser: {\r\n    name: 'babel-ts',\r\n    pluginUrls: [parserPlugins.babel],\r\n  },\r\n  compiler: {\r\n    url: assemblyscriptUrl,\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-assemblyscript-compiler.js}}');\r\n      return (self as any).createAssemblyscriptCompiler();\r\n    },\r\n    scripts: ({ baseUrl }) => [\r\n      assemblyscriptLoaderUrl,\r\n      baseUrl + '{{hash:lang-assemblyscript-script.js}}',\r\n    ],\r\n    scriptType: 'application/wasm-uint8',\r\n    compiledCodeLanguage: 'wat',\r\n    types: {\r\n      assemblyscript: {\r\n        url: vendorsBaseUrl + 'types/assemblyscript.d.ts',\r\n        declareAsModule: false,\r\n        autoload: true,\r\n      },\r\n    },\r\n  },\r\n  extensions: ['as', 'ts'],\r\n  editor: 'script',\r\n  editorLanguage: 'typescript',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { brythonBaseUrl } from '../../vendors';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\n\r\nconst brythonUrl = brythonBaseUrl + 'brython.min.js';\r\nconst stdlibUrl = brythonBaseUrl + 'brython_stdlib.js';\r\n\r\nexport const python: LanguageSpecs = {\r\n  name: 'python',\r\n  title: 'Python',\r\n  compiler: {\r\n    factory: () => async (code) => code,\r\n    scripts: ({ compiled, config }) => {\r\n      const { autoloadStdlib, ...options } = getLanguageCustomSettings('python', config);\r\n      const importsPattern = /^(?:from[ ]+(\\S+)[ ]+)?import[ ]+(\\S+)(?:[ ]+as[ ]+\\S+)?[ ]*$/gm;\r\n      const stdlib = autoloadStdlib !== false && compiled.match(importsPattern) ? [stdlibUrl] : [];\r\n      const loader = `window.addEventListener(\"load\", () => {brython(${JSON.stringify(options)})})`;\r\n      const loaderUrl = 'data:text/plain;base64,' + btoa(loader);\r\n      return [brythonUrl, ...stdlib, loaderUrl];\r\n    },\r\n    scriptType: 'text/python',\r\n    compiledCodeLanguage: 'python',\r\n  },\r\n  extensions: ['py'],\r\n  editor: 'script',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { opalBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nconst getImports = (code: string, requireMap: { [mod: string]: string } = {}) =>\n  Array.from(\n    new Set(\n      [...code.matchAll(new RegExp(/^\\s*self\\.\\$require\\(\"(\\S+)\"\\);/gm))]\n        .map((arr) => arr[1])\n        .map((mod) => mod.split('/')[0])\n        .filter((mod) => requireMap.hasOwnProperty(mod) || mod !== 'opal') // already loaded\n        .map((mod) => requireMap[mod] || `${opalBaseUrl + mod}.min.js`),\n    ),\n  );\n\nexport const ruby: LanguageSpecs = {\n  name: 'ruby',\n  title: 'Ruby',\n  compiler: {\n    url: opalBaseUrl + 'opal.min.js',\n    factory: () => {\n      importScripts(opalBaseUrl + 'opal-parser.min.js');\n      // eslint-disable-next-line camelcase\n      (self as any).Opal.config.unsupported_features_severity = 'ignore';\n      (self as any).Opal.load('opal-parser');\n      return async (code, { config }) => {\n        const { autoloadStdlib, requireMap, ...options } = getLanguageCustomSettings(\n          'ruby',\n          config,\n        );\n        return (self as any).Opal.compile(code, options);\n      };\n    },\n    scripts: ({ compiled, config }) => {\n      const { autoloadStdlib, requireMap } = getLanguageCustomSettings('ruby', config);\n      const imports = getImports(compiled, requireMap);\n      const stdlib = autoloadStdlib !== false ? imports : [];\n      return [opalBaseUrl + 'opal.min.js', ...stdlib];\n    },\n  },\n  extensions: ['rb'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { uniterUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const php: LanguageSpecs = {\n  name: 'php',\n  title: 'PHP',\n  parser: {\n    name: 'php',\n    pluginUrls: [parserPlugins.php],\n  },\n  compiler: {\n    factory: () => async (code) => {\n      code = code.trim();\n      if (code.startsWith('<?php')) {\n        code = code.replace('<?php', '/* <?php */');\n        if (code.endsWith('?>')) {\n          code = code.replace('?>', '/* ?> */');\n        }\n      }\n      return code;\n    },\n    scripts: [uniterUrl],\n    deferScripts: true,\n    scriptType: 'text/x-uniter-php',\n    compiledCodeLanguage: 'php',\n  },\n  extensions: ['php'],\n  editor: 'script',\n};\n", "import type { LanguageFormatter, LanguageSpecs } from '../../models';\nimport { luaUrl, vendorsBaseUrl } from '../../vendors';\n\nconst luaFmtUrl = vendorsBaseUrl + 'lua-fmt/lua-fmt.js';\n\nexport const luaFormatter: LanguageFormatter = {\n  factory: () => {\n    (self as any).importScripts(luaFmtUrl);\n    return async (code, cursorOffset) => ({\n      formatted: (self as any).luaFmt.formatText(code),\n      cursorOffset,\n    });\n  },\n};\n\nexport const lua: LanguageSpecs = {\n  name: 'lua',\n  title: 'Lua',\n  formatter: luaFormatter,\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: [luaUrl],\n    scriptType: 'application/lua',\n    compiledCodeLanguage: 'lua',\n  },\n  extensions: ['lua'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { jsclUrl, parinferUrl } from '../../vendors';\n\nexport const parenFormatter = () => {\n  const url = parinferUrl;\n  (self as any).importScripts(url);\n  return async (value: string) => ({\n    formatted: (window as any).parinfer.parenMode(value).text,\n    cursorOffset: 0,\n  });\n};\n\nexport const commonlisp: LanguageSpecs = {\n  name: 'commonlisp',\n  title: 'Lisp',\n  longTitle: 'Common Lisp',\n  formatter: {\n    factory: parenFormatter,\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [jsclUrl, baseUrl + '{{hash:lang-commonlisp-script.js}}'],\n    scriptType: 'text/commonlisp',\n    compiledCodeLanguage: 'commonlisp',\n    inlineScript: `\n\n    `,\n  },\n  extensions: ['lisp', 'common-lisp'],\n  editor: 'script',\n  editorLanguage: 'scheme',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const solid: LanguageSpecs = {\n  name: 'solid',\n  title: 'Solid',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['babel'],\n    url: vendorsBaseUrl + 'babel-preset-solid/babel-preset-solid.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-solid-compiler.js}}');\n      return (self as any).createSolidCompiler();\n    },\n    types: {\n      'solid-js': {\n        url: vendorsBaseUrl + 'types/solid-js.d.ts',\n        declareAsModule: false,\n      },\n    },\n  },\n  extensions: ['solid.jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const solidTsx: LanguageSpecs = {\n  name: 'solid.tsx',\n  title: 'Solid (TS)',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'solid',\n  extensions: ['solid.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { liquidJsUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const liquid: LanguageSpecs = {\n  name: 'liquid',\n  title: 'Liquid',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: liquidJsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-liquid-compiler.js}}');\n      return (self as any).createLiquidCompiler();\n    },\n  },\n  extensions: ['liquid', 'liquidjs'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { ejsUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const ejs: LanguageSpecs = {\n  name: 'ejs',\n  title: 'EJS',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: ejsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-ejs-compiler.js}}');\n      return (self as any).createEjsCompiler();\n    },\n  },\n  extensions: ['ejs'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { handlebarsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst url = handlebarsBaseUrl + 'handlebars.min.js';\nexport const runtimeUrl = handlebarsBaseUrl + 'handlebars.runtime.min.js';\n\nexport const handlebars: LanguageSpecs = {\n  name: 'handlebars',\n  title: 'Handlebars',\n  parser: {\n    name: 'glimmer',\n    pluginUrls: [parserPlugins.glimmer],\n  },\n  compiler: {\n    url,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-handlebars-compiler.js}}');\n      return (self as any).createHandlebarsCompiler();\n    },\n  },\n  extensions: ['hbs', 'handlebars'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { dotUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const dot: LanguageSpecs = {\n  name: 'dot',\n  title: 'doT',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: dotUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-dot-compiler.js}}');\n      return (self as any).createDotCompiler();\n    },\n  },\n  extensions: ['dot'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { nunjucksBaseUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nconst url = nunjucksBaseUrl + 'nunjucks.min.js';\r\nexport const runtimeUrl = nunjucksBaseUrl + 'nunjucks-slim.min.js';\r\n\r\nexport const nunjucks: LanguageSpecs = {\r\n  name: 'nunjucks',\r\n  title: 'Nunjucks',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    url,\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-nunjucks-compiler.js}}');\r\n      return (self as any).createNunjucksCompiler();\r\n    },\r\n  },\r\n  extensions: ['njk', 'nunjucks'],\r\n  editor: 'markup',\r\n  editorLanguage: 'html',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { go2jsBaseUrl } from '../../vendors';\r\n\r\ndeclare const importScripts: (...args: string[]) => void;\r\n\r\nexport const go: LanguageSpecs = {\r\n  name: 'go',\r\n  title: 'Go',\r\n  formatter: {\r\n    factory: () => {\r\n      importScripts(go2jsBaseUrl + 'go2js-format.js');\r\n      return async (code: string) => {\r\n        if (!code) return { formatted: '', cursorOffset: 0 };\r\n\r\n        const [formatted, err] = (globalThis as any).go2jsFormat(code);\r\n\r\n        if (err) {\r\n          // eslint-disable-next-line no-console\r\n          console.error(err);\r\n          return { formatted: code, cursorOffset: 0 };\r\n        }\r\n\r\n        return { formatted, cursorOffset: 0 };\r\n      };\r\n    },\r\n  },\r\n  compiler: {\r\n    url: go2jsBaseUrl + 'go2js-compile.js',\r\n    factory: () => (code) =>\r\n      new Promise((resolve) => {\r\n        if (!code) {\r\n          resolve('');\r\n          return;\r\n        }\r\n        (globalThis as any).go2jsCompile(code, go2jsBaseUrl, (err: string, jsCode: string) => {\r\n          if (err) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(err);\r\n            resolve('');\r\n          } else {\r\n            resolve(jsCode);\r\n          }\r\n        });\r\n      }),\r\n  },\r\n  extensions: ['go', 'golang'],\r\n  editor: 'script',\r\n};\r\n", "/* eslint-disable camelcase */\nimport type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl, wabtjsUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nconst formatterUrl = vendorsBaseUrl + 'wast-refmt/wast-refmt.js';\nexport const scriptType = 'application/wasm-uint8';\n\nexport const wat: LanguageSpecs = {\n  name: 'wat',\n  title: 'WAT',\n  longTitle: 'WebAssembly Text',\n  formatter: {\n    factory: () => {\n      importScripts(formatterUrl);\n      return async (value: string) => {\n        let formatted = value;\n        try {\n          formatted = (self as any).wastRefmt.format(value);\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.warn('failed parsing WAT', error);\n        }\n        return {\n          formatted,\n          cursorOffset: 0,\n        };\n      };\n    },\n  },\n  compiler: {\n    url: wabtjsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-wat-compiler.js}}');\n      return (self as any).createWatCompiler();\n    },\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-wat-script.js}}'],\n    scriptType,\n    compiledCodeLanguage: 'Binary',\n  },\n  extensions: ['wat', 'wast', 'webassembly', 'wasm'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { riotBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst compilerCdnUrl = riotBaseUrl + 'riot+compiler.min.js';\nconst cdnUrl = riotBaseUrl + 'riot.min.js';\n\nexport const riot: LanguageSpecs = {\n  name: 'riot',\n  title: 'Riot.js',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: compilerCdnUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-riot-compiler.js}}');\n      return (self as any).createRiotCompiler();\n    },\n    scripts: [cdnUrl],\n    scriptType: 'module',\n  },\n  extensions: ['riot', 'riotjs'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { sqlFormatterUrl, sqljsBaseUrl } from '../../vendors';\r\n\r\ndeclare const importScripts: (...args: string[]) => void;\r\n\r\nexport const scriptType = 'application/json';\r\n\r\nexport const sql: LanguageSpecs = {\r\n  name: 'sql',\r\n  title: 'SQL',\r\n  formatter: {\r\n    factory: () => {\r\n      importScripts(sqlFormatterUrl);\r\n      return async (value: string) => ({\r\n        formatted: await (self as any).sqlFormatter.format(value, { linesBetweenQueries: 2 }),\r\n        cursorOffset: 0,\r\n      });\r\n    },\r\n  },\r\n  compiler: {\r\n    url: sqljsBaseUrl + 'sql-wasm.js',\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-sql-compiler.js}}');\r\n      return (self as any).createSqlCompiler();\r\n    },\r\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-sql-script.js}}'],\r\n    scriptType,\r\n    compiledCodeLanguage: 'json',\r\n  },\r\n  extensions: ['sql', 'sqlite', 'sqlite3'],\r\n  editor: 'script',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { typescriptOptions } from '../typescript';\nimport { getLanguageCustomSettings } from '../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const reactNativeWebUrl = vendorsBaseUrl + 'react-native-web/react-native-web.js';\n\nexport const reactNative: LanguageSpecs = {\n  name: 'react-native',\n  title: 'RN',\n  longTitle: 'React Native',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['typescript'],\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n    imports: {\n      react: reactNativeWebUrl,\n      'react-native': reactNativeWebUrl,\n    },\n  },\n  extensions: ['react-native.jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { typescriptOptions } from '../typescript';\nimport { getLanguageCustomSettings } from '../utils';\nimport { parserPlugins } from '../prettier';\nimport { reactNativeWebUrl } from './lang-react-native';\n\nexport const reactNativeTsx: LanguageSpecs = {\n  name: 'react-native-tsx',\n  title: 'RN (TSX)',\n  longTitle: 'React Native (TSX)',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['typescript'],\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n    imports: {\n      react: reactNativeWebUrl,\n      'react-native': reactNativeWebUrl,\n    },\n  },\n  extensions: ['react-native.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { twigUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const twig: LanguageSpecs = {\n  name: 'twig',\n  title: 'Twig',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: twigUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-twig-compiler.js}}');\n      return (self as any).createTwigCompiler();\n    },\n  },\n  extensions: ['twig'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { astroBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst compilerURL = astroBaseUrl + 'compiler.min.js';\n\nexport const astro: LanguageSpecs = {\n  name: 'astro',\n  title: 'Astro',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: compilerURL,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-astro-compiler.js}}');\n      return (self as any).createAstroCompiler();\n    },\n  },\n  extensions: ['astro'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { malinaVersion } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const malina: LanguageSpecs = {\r\n  name: 'malina',\r\n  title: 'Malina.js',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\r\n  },\r\n  compiler: {\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-malina-compiler.js}}');\r\n      return (self as any).createMalinaCompiler();\r\n    },\r\n    imports: {\r\n      'malinajs/runtime.js': `https://jspm.dev/malinajs@${malinaVersion}/runtime.js`,\r\n    },\r\n  },\r\n  extensions: ['xht'],\r\n  editor: 'script',\r\n  editorLanguage: 'html',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const cdnUrl = vendorsBaseUrl + 'jscpp/JSCPP.es5.min.js';\n\nexport const cpp: LanguageSpecs = {\n  name: 'cpp',\n  title: 'C++',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [cdnUrl, baseUrl + '{{hash:lang-cpp-script.js}}'],\n    scriptType: 'text/cpp',\n    compiledCodeLanguage: 'cpp',\n  },\n  extensions: ['cpp', 'c', 'C', 'cp', 'cxx', 'c++', 'cppm', 'ixx', 'ii', 'hpp', 'h'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { clioBaseUrl } from '../../vendors';\n\nexport const clio: LanguageSpecs = {\n  name: 'clio',\n  title: 'Clio',\n  compiler: {\n    url: clioBaseUrl + 'compile.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-clio-compiler.js}}');\n      return (self as any).createClioCompiler();\n    },\n    scripts: [clioBaseUrl + 'exec.js'],\n  },\n  extensions: ['clio'],\n  editor: 'script',\n  editorLanguage: 'coffeescript',\n};\n", "import type { CompilerFunction, LanguageSpecs } from '../../models';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const runOutsideWorker: CompilerFunction = async (code: string, { baseUrl, config }) => {\r\n  const { diagramsCompiler } = await import(baseUrl + '{{hash:lang-diagrams-compiler-esm.js}}');\r\n  return diagramsCompiler(code, { config });\r\n};\r\n\r\nexport const diagrams: LanguageSpecs = {\r\n  name: 'diagrams',\r\n  title: 'Diagrams',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    factory: () => async (code) => code || '',\r\n    runOutsideWorker,\r\n  },\r\n  extensions: ['diagrams', 'diagram', 'graph', 'plt'],\r\n  editor: 'markup',\r\n  editorLanguage: 'html',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\nimport { imbaBaseUrl } from '../../vendors';\n\nexport const imba: LanguageSpecs = {\n  name: 'imba',\n  title: 'Imba',\n  compiler: {\n    url: imbaBaseUrl + 'compiler.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-imba-compiler.js}}');\n      return (self as any).createImbaCompiler();\n    },\n    imports: {\n      imba: imbaBaseUrl + 'imba.mjs',\n    },\n  },\n  extensions: ['imba'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { mustacheUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const mustache: LanguageSpecs = {\n  name: 'mustache',\n  title: 'Mustache',\n  parser: {\n    name: 'glimmer',\n    pluginUrls: [parserPlugins.glimmer],\n  },\n  compiler: {\n    url: mustacheUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-mustache-compiler.js}}');\n      return (self as any).createMustacheCompiler();\n    },\n  },\n  extensions: ['mustache'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { artTemplateUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const artTemplate: LanguageSpecs = {\n  name: 'art-template',\n  title: 'art',\n  longTitle: 'art-template',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: artTemplateUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-art-template-compiler.js}}');\n      return (self as any).createArtTemplateCompiler();\n    },\n  },\n  extensions: ['art', 'art-template'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nconst civetUrl = vendorsBaseUrl + 'civet/civet.js';\n\nexport const civet: LanguageSpecs = {\n  name: 'civet',\n  title: 'Civet',\n  compiler: {\n    url: civetUrl,\n    factory: () => async (code) => (window as any).civet.compile(code, { js: true }),\n  },\n  extensions: ['civet'],\n  editor: 'script',\n  editorLanguage: 'coffeescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const flow: LanguageSpecs = {\n  name: 'flow',\n  title: 'Flow',\n  parser: {\n    name: 'babel-flow',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'flow-remove-types/flow-remove-types.js',\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).flowRemoveTypes\n          .transpile(code, {\n            all: true,\n            ...getLanguageCustomSettings('flow', config),\n          })\n          .toString(),\n  },\n  extensions: ['flow'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\nimport { mjmlUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const mjml: LanguageSpecs = {\r\n  name: 'mjml',\r\n  title: 'MJML',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    url: mjmlUrl,\r\n    factory:\r\n      () =>\r\n      async (code, { config }) => {\r\n        if (!code.trim()) return '';\r\n        const { html, errors } = (self as any).mjml(\r\n          code,\r\n          getLanguageCustomSettings('mjml', config),\r\n        );\r\n        errors?.forEach(\r\n          (err: { line: number; tagName: string; message: string; formattedMessage: string }) => {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(err.formattedMessage);\r\n          },\r\n        );\r\n        return html;\r\n      },\r\n  },\r\n  extensions: ['mjml'],\r\n  editor: 'markup',\r\n  editorLanguage: 'xml',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { vendorsBaseUrl } from '../../vendors';\r\nimport { getLanguageCustomSettings } from '../../utils';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const sucrase: LanguageSpecs = {\r\n  name: 'sucrase',\r\n  title: 'Sucrase',\r\n  parser: {\r\n    name: 'babel',\r\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    url: vendorsBaseUrl + 'sucrase/sucrase.js',\r\n    factory:\r\n      () =>\r\n      async (code, { config }) =>\r\n        (window as any).sucrase.transform(code, {\r\n          transforms: ['jsx', 'typescript'],\r\n          ...getLanguageCustomSettings('sucrase', config),\r\n        }).code,\r\n  },\r\n  extensions: ['sucrase'],\r\n  editor: 'script',\r\n  editorLanguage: 'typescript',\r\n};\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { etaUrl } from '../../vendors';\r\nimport { parserPlugins } from '../prettier';\r\n\r\nexport const eta: LanguageSpecs = {\r\n  name: 'eta',\r\n  title: 'Eta',\r\n  parser: {\r\n    name: 'html',\r\n    pluginUrls: [parserPlugins.html],\r\n  },\r\n  compiler: {\r\n    url: etaUrl,\r\n    factory: (_config, baseUrl) => {\r\n      (self as any).importScripts(baseUrl + '{{hash:lang-eta-compiler.js}}');\r\n      return (self as any).createEtaCompiler();\r\n    },\r\n  },\r\n  extensions: ['eta'],\r\n  editor: 'markup',\r\n  editorLanguage: 'html',\r\n};\r\n", "export const allowedOrigin = (origin = location.origin) =>\n  Boolean(\n    origin &&\n      (origin.endsWith('livecodes.io') ||\n        origin.endsWith('livecodes.pages.dev') ||\n        origin.endsWith('localpen.io') ||\n        origin.endsWith('localpen.pages.dev') ||\n        origin.startsWith('http://127.0.0.1') ||\n        origin.startsWith('http://localhost')),\n  );\n\nexport const whitelistTarget = (url: string) =>\n  new RegExp(/^(?:(?:http|https):\\/\\/(?:\\w+.)?)(githubusercontent.com|jsbin.com|)\\/(?:.*)/g).test(\n    url,\n  );\n", "import {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n  decompressFromBase64,\n} from 'lz-string';\n\nexport const compress = compressToEncodedURIComponent;\nexport const decompress = (compressed: string, isJSON = true) => {\n  const decoded = decompressFromEncodedURIComponent(compressed);\n  if (decoded) {\n    if (!isJSON) return decoded;\n    try {\n      if (JSON.parse(decoded)) {\n        return decoded;\n      }\n    } catch {\n      //\n    }\n  }\n  // for backward compatibility\n  return decompressFromBase64(compressed);\n};\n", "import type { Config } from '../models';\r\nimport { allowedOrigin } from './allowed-origin';\r\n\r\nconst dpasteGetUrl = 'https://dpaste.com/';\r\nconst dpastePostUrl = 'https://dpaste.com/api/v2/';\r\nconst apiUrl = 'https://api2.livecodes.io/share';\r\n\r\ntype ConfigWithResult = Partial<Config & { result: string }>;\r\ninterface ShareService {\r\n  getProject: (id: string) => Promise<ConfigWithResult>;\r\n  shareProject: (config: ConfigWithResult) => Promise<string>;\r\n}\r\n\r\nconst dpasteService = {\r\n  getProject: async (id: string): Promise<ConfigWithResult> => {\r\n    try {\r\n      const res = await fetch(dpasteGetUrl + id + '.txt');\r\n      if (!res.ok) return {};\r\n      return JSON.parse(await res.text());\r\n    } catch (error) {\r\n      return {};\r\n    }\r\n  },\r\n  shareProject: async (config: ConfigWithResult): Promise<string> => {\r\n    try {\r\n      const res = await fetch(dpastePostUrl, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          'User-Agent': 'LiveCodes / https://livecodes.io/',\r\n        },\r\n        body: `content=${encodeURIComponent(JSON.stringify(config))}&title=${encodeURIComponent(\r\n          config.title || '',\r\n        )}&syntax=json&expiry_days=365`,\r\n      });\r\n      if (!res.ok) return '';\r\n      const url = await res.text();\r\n      return url.replace(dpasteGetUrl, '');\r\n    } catch (error) {\r\n      return '';\r\n    }\r\n  },\r\n};\r\n\r\nconst apiService = {\r\n  getProject: async (id: string): Promise<ConfigWithResult> => {\r\n    // for backward compatibility\r\n    if (id.length < 11) return dpasteService.getProject(id);\r\n\r\n    if (!allowedOrigin()) return {};\r\n    try {\r\n      const res = await fetch(apiUrl + '?id=' + id);\r\n      if (!res.ok) return {};\r\n      return JSON.parse(await res.text());\r\n    } catch (error) {\r\n      return {};\r\n    }\r\n  },\r\n  shareProject: async (config: ConfigWithResult): Promise<string> => {\r\n    if (!allowedOrigin()) return '';\r\n    try {\r\n      const res = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify(config),\r\n      });\r\n      if (!res.ok) return '';\r\n      return res.text();\r\n    } catch (error) {\r\n      return '';\r\n    }\r\n  },\r\n};\r\n\r\nexport const shareService: ShareService = allowedOrigin() ? apiService : dpasteService;\r\n", "import type { LanguageSpecs } from '../../models';\r\nimport { compileInCompiler } from '../../compiler';\r\nimport { cherryCljsBaseUrl } from '../../vendors';\r\nimport { parenFormatter } from '../commonlisp';\r\n\r\nexport const clojurescript: LanguageSpecs = {\r\n  name: 'clojurescript',\r\n  title: 'CLJS (cherry)',\r\n  longTitle: 'ClojureScript (cherry)',\r\n  formatter: {\r\n    factory: parenFormatter,\r\n  },\r\n  compiler: {\r\n    url: cherryCljsBaseUrl + 'lib/cherry.umd.js',\r\n    factory:\r\n      () =>\r\n      async (code, { config, options }) => {\r\n        const compiled = (self as any).CherryCljs.compileString(code);\r\n        return code.includes('#jsx')\r\n          ? compileInCompiler(compiled, 'jsx', config, options)\r\n          : compiled;\r\n      },\r\n    imports: {\r\n      'cherry-cljs': cherryCljsBaseUrl + 'index.js',\r\n      'cherry-cljs/cljs.core.js': cherryCljsBaseUrl + 'cljs.core.js',\r\n    },\r\n  },\r\n  extensions: ['cljs', 'clj', 'cljc', 'edn', 'clojure'],\r\n  editor: 'script',\r\n  editorLanguage: 'clojure',\r\n};\r\n", "import type { ContentConfig, Config, UserConfig, EditorConfig, FormatterConfig } from '../models';\r\nimport { cloneObject } from '../utils';\r\nimport { defaultConfig } from './default-config';\r\nimport { upgradeConfig } from './upgrade-config';\r\nimport { validateConfig } from './validate-config';\r\n\r\nlet appConfig = defaultConfig;\r\nexport const getConfig = (): Config => cloneObject(appConfig);\r\n\r\nexport const setConfig = (newConfig: Config) => {\r\n  appConfig = cloneObject(newConfig);\r\n};\r\n\r\nexport const getContentConfig = (config: Config | ContentConfig): ContentConfig =>\r\n  cloneObject({\r\n    title: config.title,\r\n    description: config.description,\r\n    tags: config.tags,\r\n    activeEditor: config.activeEditor,\r\n    languages: config.languages,\r\n    markup: config.markup,\r\n    style: config.style,\r\n    script: config.script,\r\n    stylesheets: config.stylesheets,\r\n    scripts: config.scripts,\r\n    cssPreset: config.cssPreset,\r\n    processors: config.processors,\r\n    customSettings: config.customSettings,\r\n    imports: config.imports,\r\n    types: config.types,\r\n    tests: config.tests,\r\n    version: config.version,\r\n  });\r\n\r\nexport const getUserConfig = (config: Config | UserConfig): UserConfig => ({\r\n  autoupdate: config.autoupdate,\r\n  autosave: config.autosave,\r\n  delay: config.delay,\r\n  formatOnsave: config.formatOnsave,\r\n  recoverUnsaved: config.recoverUnsaved,\r\n  welcome: config.welcome,\r\n  showSpacing: config.showSpacing,\r\n  theme: config.theme,\r\n  ...getEditorConfig(config),\r\n  ...getFormatterConfig(config),\r\n});\r\n\r\nexport const getEditorConfig = (config: Config | UserConfig): EditorConfig => ({\r\n  editor: config.editor ?? ((config as Config).readonly === true ? 'codejar' : undefined),\r\n  fontFamily: config.fontFamily,\r\n  fontSize: config.fontSize,\r\n  useTabs: config.useTabs,\r\n  tabSize: config.tabSize,\r\n  lineNumbers: config.lineNumbers,\r\n  wordWrap: config.wordWrap,\r\n  closeBrackets: config.closeBrackets,\r\n  emmet: config.emmet,\r\n  editorMode: config.editorMode,\r\n});\r\n\r\nexport const getFormatterConfig = (config: Config | UserConfig): FormatterConfig => ({\r\n  useTabs: config.useTabs,\r\n  tabSize: config.tabSize,\r\n  semicolons: config.semicolons,\r\n  singleQuote: config.singleQuote,\r\n  trailingComma: config.trailingComma,\r\n});\r\n\r\nexport const upgradeAndValidate = (config: Partial<Config>) =>\r\n  validateConfig(upgradeConfig(config as any));\r\n", "import {\n  fontAnonymousProUrl,\n  fontCascadiaCodeUrl,\n  fontCodeNewRomanUrl,\n  fontComicMonoUrl,\n  fontCourierPrimeUrl,\n  fontDECTerminalModernUrl,\n  fontDejaVuMonoUrl,\n  fontFantasqueUrl,\n  fontFiraCodeUrl,\n  fontFixedsysUrl,\n  fontHackUrl,\n  fontHermitUrl,\n  fontIBMPlexMonoUrl,\n  fontInconsolataUrl,\n  fontIosevkaUrl,\n  fontJetbrainsMonoUrl,\n  fontMenloUrl,\n  fontMonofurUrl,\n  fontMonoidUrl,\n  fontNotoUrl,\n  fontNovaMonoUrl,\n  fontOpenDyslexicUrl,\n  fontProFontWindowsUrl,\n  fontRobotoMonoUrl,\n  fontSFMonoUrl,\n  fontSourceCodeProUrl,\n  fontSpaceMonoUrl,\n  fontSudoVarUrl,\n  fontUbuntuMonoUrl,\n  fontVictorMonoUrl,\n} from '../vendors';\n\nexport interface Font {\n  id: string;\n  name: string;\n  label?: string;\n  url: string;\n}\n\nexport const fonts: Font[] = [\n  {\n    id: 'anonymous-pro',\n    name: 'Anonymous Pro',\n    url: fontAnonymousProUrl,\n  },\n  {\n    id: 'cascadia-code',\n    name: 'Cascadia Code',\n    url: fontCascadiaCodeUrl,\n  },\n  {\n    id: 'comic-mono',\n    name: 'Code New Roman',\n    url: fontCodeNewRomanUrl,\n  },\n  {\n    id: 'comic-mono',\n    name: 'Comic Mono',\n    url: fontComicMonoUrl,\n  },\n  {\n    id: 'courier-prime',\n    name: 'Courier Prime',\n    url: fontCourierPrimeUrl,\n  },\n  {\n    id: 'dec-terminal-modern',\n    name: 'DEC Terminal Modern',\n    url: fontDECTerminalModernUrl,\n  },\n  {\n    id: 'dejavu-mono',\n    name: 'DejaVu Mono',\n    url: fontDejaVuMonoUrl,\n  },\n  {\n    id: 'fantasque-sans-mono',\n    name: 'TypoPRO Fantasque Sans Mono',\n    label: 'Fantasque Sans Mono',\n    url: fontFantasqueUrl,\n  },\n  {\n    id: 'fira-code',\n    name: 'Fira Code',\n    url: fontFiraCodeUrl,\n  },\n  {\n    id: 'fixedsys',\n    name: 'Fixedsys 62',\n    label: 'Fixedsys',\n    url: fontFixedsysUrl,\n  },\n  {\n    id: 'hack',\n    name: 'Hack',\n    url: fontHackUrl,\n  },\n  {\n    id: 'hermit',\n    name: 'Hermit',\n    url: fontHermitUrl,\n  },\n  {\n    id: 'ibm-plex-mono',\n    name: 'IBM Plex Mono',\n    url: fontIBMPlexMonoUrl,\n  },\n  {\n    id: 'inconsolata',\n    name: 'Inconsolata',\n    url: fontInconsolataUrl,\n  },\n  {\n    id: 'iosevka',\n    name: 'Iosevka',\n    url: fontIosevkaUrl,\n  },\n  {\n    id: 'jetbrains-mono',\n    name: 'JetBrains Mono',\n    url: fontJetbrainsMonoUrl,\n  },\n  {\n    id: 'menlo',\n    name: 'Menlo',\n    url: fontMenloUrl,\n  },\n  {\n    id: 'monofur',\n    name: 'Monofur',\n    url: fontMonofurUrl,\n  },\n  {\n    id: 'monoid',\n    name: 'TypoPRO Monoid',\n    label: 'Monoid',\n    url: fontMonoidUrl,\n  },\n  {\n    id: 'noto-sans-mono',\n    name: 'Noto Sans Mono',\n    url: fontNotoUrl,\n  },\n  {\n    id: 'nova-mono',\n    name: 'Nova Mono',\n    url: fontNovaMonoUrl,\n  },\n  {\n    id: 'opendyslexic',\n    name: 'OpenDyslexic',\n    url: fontOpenDyslexicUrl,\n  },\n  {\n    id: 'profontwindows',\n    name: 'ProFontWindows',\n    label: 'ProFont',\n    url: fontProFontWindowsUrl,\n  },\n  {\n    id: 'roboto-mono',\n    name: 'Roboto Mono',\n    url: fontRobotoMonoUrl,\n  },\n  {\n    id: 'sf-mono',\n    name: 'SF Mono',\n    url: fontSFMonoUrl,\n  },\n  {\n    id: 'source-code-pro',\n    name: 'Source Code Pro',\n    url: fontSourceCodeProUrl,\n  },\n  {\n    id: 'space-mono',\n    name: 'Space Mono',\n    url: fontSpaceMonoUrl,\n  },\n  {\n    id: 'sudo-var',\n    name: 'Sudo Var',\n    url: fontSudoVarUrl,\n  },\n  {\n    id: 'ubuntu-mono',\n    name: 'Ubuntu Mono',\n    url: fontUbuntuMonoUrl,\n  },\n  {\n    id: 'victor-mono',\n    name: 'Victor Mono',\n    url: fontVictorMonoUrl,\n  },\n];\n\nexport const getFontFamily = (font: string | undefined) => {\n  const defaultFonts =\n    'Consolas, ' + // windows\n    '\"Roboto Mono\", ' + // android\n    '\"Ubuntu Mono\", ' + // ubuntu\n    'ui-monospace, ' + // SF Mono on mac & ios\n    'monospace';\n  if (!font) return defaultFonts;\n  const fontName = fonts.find((f) => [f.id, f.name, f.label].includes(font))?.name;\n  return fontName ? `\"${fontName}\", ${defaultFonts}` : defaultFonts;\n};\n", "export const getToolbarElement = () => document.querySelector('#toolbar') as HTMLElement;\r\nexport const getProjectTitleElement = () => document.querySelector('#project-title') as HTMLElement;\r\nexport const getEditorContainerElement = () =>\r\n  document.querySelector('#editor-container') as HTMLElement;\r\nexport const getEditorsElement = () => document.querySelector('#editors') as HTMLElement;\r\nexport const getMarkupElement = () => document.querySelector('#markup') as HTMLElement;\r\nexport const getStyleElement = () => document.querySelector('#style') as HTMLElement;\r\nexport const getScriptElement = () => document.querySelector('#script') as HTMLElement;\r\nexport const getOutputElement = () => document.querySelector('#output') as HTMLElement;\r\nexport const getResultElement = () => document.querySelector('#result') as HTMLElement;\r\nexport const getResultIFrameElement = () =>\r\n  document.querySelector('#result > iframe') as HTMLIFrameElement;\r\nexport const getGutterElement = () =>\r\n  document.querySelector('#editor-container .gutter') as HTMLElement;\r\nexport const getLogoLink = () => document.querySelector('#logo a') as HTMLAnchorElement;\r\nexport const getRunButton = () => document.querySelector('#run-button') as HTMLElement;\r\nexport const getCodeRunButton = () => document.querySelector('#code-run-button') as HTMLElement;\r\nexport const getEditorToolbar = () => document.querySelector('#editor-tools') as HTMLElement;\r\nexport const getCopyButton = () => document.querySelector('#editor-tools #copy-btn') as HTMLElement;\r\nexport const getUndoButton = () => document.querySelector('#editor-tools #undo-btn') as HTMLElement;\r\nexport const getRedoButton = () => document.querySelector('#editor-tools #redo-btn') as HTMLElement;\r\nexport const getFormatButton = () =>\r\n  document.querySelector('#editor-tools #format-btn') as HTMLElement;\r\nexport const getEditorModeNode = () => document.querySelector<HTMLElement>('#editor-mode');\r\nexport const getEditorStatus = () =>\r\n  document.querySelector('#editor-tools #editor-status') as HTMLElement;\r\nexport const getExternalResourcesBtn = () =>\r\n  document.querySelector('#editor-tools #external-resources-btn') as HTMLElement;\r\nexport const getExternalResourcesMark = () =>\r\n  document.querySelector('#editor-tools #external-resources-mark') as HTMLElement;\r\nexport const getResultButton = () => document.querySelector('#result-button') as HTMLElement;\r\nexport const getFullscreenButton = () =>\r\n  document.querySelector('#fullscreen-button') as HTMLElement;\r\nexport const getEditorTitles = () =>\r\n  document.querySelectorAll<HTMLElement>('.editor-title:not(.hidden)');\r\nexport const getEditorDivs = () => document.querySelectorAll<HTMLElement>('#editors > .editor');\r\nexport const getToolspaneElement = () =>\r\n  document.querySelector('#output #tools-pane') as HTMLElement;\r\nexport const getToolspaneBar = () =>\r\n  document.querySelector('#output #tools-pane-bar') as HTMLElement;\r\nexport const getToolspaneButtons = () =>\r\n  document.querySelector('#tools-pane-buttons') as HTMLElement;\r\nexport const getToolspaneTitles = () => document.querySelector<HTMLElement>('#tools-pane-titles');\r\nexport const getToolspaneLoader = () => document.querySelector<HTMLElement>('#tools-pane-loading');\r\nexport const getZoomButtonValue = () =>\r\n  document.querySelector<HTMLElement>('#zoom-button #zoom-value');\r\nexport const getModalSaveButton = () =>\r\n  document.querySelector('#modal #prompt-save-btn') as HTMLElement;\r\nexport const getModalDoNotSaveButton = () =>\r\n  document.querySelector('#modal #prompt-donot-save-btn') as HTMLElement;\r\nexport const getModalCancelButton = () =>\r\n  document.querySelector('#modal #prompt-cancel-btn') as HTMLElement;\r\n\r\nexport const getModalRecoverButton = () =>\r\n  document.querySelector('#modal #prompt-recover-btn') as HTMLElement;\r\nexport const getModalSavePreviousButton = () =>\r\n  document.querySelector('#modal #prompt-save-previous-btn') as HTMLElement;\r\nexport const getModalCancelRecoverButton = () =>\r\n  document.querySelector('#modal #prompt-cancel-recover-btn') as HTMLElement;\r\nexport const getModalUnsavedName = () =>\r\n  document.querySelector('#modal #unsaved-project-name') as HTMLElement;\r\nexport const getModalUnsavedLastModified = () =>\r\n  document.querySelector('#modal #unsaved-project-last-modified') as HTMLElement;\r\nexport const getModalDisableRecoverCheckbox = () =>\r\n  document.querySelector('#modal #disable-recover-checkbox') as HTMLInputElement;\r\n\r\nexport const getLanguageMenuLinks = () =>\r\n  document.querySelectorAll<HTMLElement>('#select-editor .language-item a');\r\n\r\nexport const getLanguageMenuButtons = () =>\r\n  document.querySelectorAll<HTMLElement>('#select-editor .language-menu-button');\r\n\r\nexport const getstyleMenu = () =>\r\n  document.querySelector<HTMLElement>('#style-selector .dropdown-menu');\r\n\r\nexport const getSettingToggles = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#settings-menu input');\r\n\r\nexport const getCssPresetLinks = () =>\r\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\r\n\r\nexport const getSettingsMenuScroller = () =>\r\n  document.querySelector<HTMLElement>('#settings-menu-container');\r\nexport const getSettingsButton = () => document.querySelector<HTMLElement>('#settings-button');\r\n\r\nexport const getExportJSONLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-json');\r\n\r\nexport const getExportResultLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-result');\r\n\r\nexport const getExportSourceLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-src');\r\n\r\nexport const getExportGithubGistLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-githubGist');\r\n\r\nexport const getExportCodepenLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-codepen');\r\n\r\nexport const getExportJsfiddleLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-jsfiddle');\r\n\r\nexport const getLoginLink = () => document.querySelector<HTMLAnchorElement>('#login-link');\r\n\r\nexport const getLogoutLink = () => document.querySelector<HTMLAnchorElement>('#logout-link');\r\n\r\nexport const getNewLink = () => document.querySelector<HTMLAnchorElement>('#new-link');\r\n\r\nexport const getOpenLink = () => document.querySelector<HTMLAnchorElement>('#open-link');\r\n\r\nexport const getSaveLink = () => document.querySelector<HTMLAnchorElement>('#save-link');\r\n\r\nexport const getForkLink = () => document.querySelector<HTMLAnchorElement>('#fork-link');\r\n\r\nexport const getSaveAsTemplateLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#template-link');\r\n\r\nexport const getExternalResourcesLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#external-resources-link');\r\n\r\nexport const getCustomSettingsLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#custom-settings-link');\r\n\r\nexport const getShareLink = () => document.querySelector<HTMLAnchorElement>('#share-link');\r\n\r\nexport const getEmbedLink = () => document.querySelector<HTMLAnchorElement>('#embed-link');\r\n\r\nexport const getEditorSettingsLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#editor-settings-link');\r\n\r\nexport const getDeployLink = () => document.querySelector<HTMLAnchorElement>('#deploy-link');\r\n\r\nexport const getSyncLink = () => document.querySelector<HTMLAnchorElement>('#sync-link');\r\n\r\nexport const getSyncIndicator = () => document.querySelector<HTMLAnchorElement>('#sync-indicator');\r\n\r\nexport const getImportLink = () => document.querySelector<HTMLAnchorElement>('#import-link');\r\n\r\nexport const getBackupLink = () => document.querySelector<HTMLAnchorElement>('#backup-link');\r\n\r\nexport const getBroadcastLink = () => document.querySelector<HTMLAnchorElement>('#broadcast-link');\r\n\r\nexport const getWelcomeLink = () => document.querySelector<HTMLAnchorElement>('#welcome-link');\r\n\r\nexport const getAboutLink = () => document.querySelector<HTMLAnchorElement>('#about-link');\r\n\r\nexport const getAutoupdateToggle = () =>\r\n  document.querySelector('#settings-menu input#autoupdate') as HTMLInputElement;\r\n\r\nexport const getDelayValue = () =>\r\n  document.querySelector('#settings-menu #delay-value') as HTMLElement;\r\n\r\nexport const getDelayRange = () =>\r\n  document.querySelector('#settings-menu input#delay-range') as HTMLInputElement;\r\n\r\nexport const getAutosaveToggle = () =>\r\n  document.querySelector('#settings-menu input#autosave') as HTMLInputElement;\r\n\r\nexport const getAutosyncToggle = () =>\r\n  document.querySelector('#settings-menu input#autosync') as HTMLInputElement;\r\n\r\nexport const getFormatOnsaveToggle = () =>\r\n  document.querySelector('#settings-menu input#formatOnsave') as HTMLInputElement;\r\n\r\nexport const getProcessorToggles = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#style-selector input');\r\n\r\nexport const getEmmetToggle = () =>\r\n  document.querySelector('#settings-menu input#emmet') as HTMLInputElement;\r\n\r\nexport const getThemeToggle = () =>\r\n  document.querySelector('#settings-menu input#theme') as HTMLInputElement;\r\n\r\nexport const getShowWelcomeToggle = () =>\r\n  document.querySelector('#settings-menu input#welcome') as HTMLInputElement;\r\n\r\nexport const getRecoverToggle = () =>\r\n  document.querySelector('#settings-menu input#recover-unsaved') as HTMLInputElement;\r\n\r\nexport const getSpacingToggle = () =>\r\n  document.querySelector('#settings-menu input#show-spacing') as HTMLInputElement;\r\n\r\nexport const getCSSPresetLinks = () =>\r\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\r\n\r\nexport const getProjectInfoLink = () =>\r\n  document.querySelector('#settings-menu #info-link') as HTMLInputElement;\r\n\r\nexport const getAssetsLink = () =>\r\n  document.querySelector('#settings-menu #assets-link') as HTMLInputElement;\r\n\r\nexport const getSnippetsLink = () =>\r\n  document.querySelector('#settings-menu #snippets-link') as HTMLInputElement;\r\n\r\nexport const getInfoTitleInput = () =>\r\n  document.querySelector('#info-container input#title-input') as HTMLInputElement;\r\n\r\nexport const getInfoDescription = () =>\r\n  document.querySelector('#info-container #description-textarea') as HTMLTextAreaElement;\r\n\r\nexport const getInfoTagsInput = () =>\r\n  document.querySelector('#info-container input#tags-input') as HTMLInputElement;\r\n\r\nexport const getSaveInfoButton = () =>\r\n  document.querySelector<HTMLElement>('#info-container #info-save-btn');\r\n\r\nexport const getExternalResourcesTextareas = () =>\r\n  document.querySelectorAll<HTMLTextAreaElement>('#resources-container textarea');\r\n\r\nexport const getExternalResourcesCssPresetInputs = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#resources-container input[type=\"radio\"]');\r\n\r\nexport const getLoadResourcesButton = () =>\r\n  document.querySelector<HTMLElement>('#resources-container #resources-load-btn');\r\n\r\nexport const getCustomSettingsEditor = () =>\r\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-editor');\r\n\r\nexport const getLoadCustomSettingsButton = () =>\r\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-load-btn');\r\n\r\nexport const getTestEditor = () =>\r\n  document.querySelector<HTMLElement>('#test-editor-container #test-editor');\r\n\r\nexport const getLoadTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-editor-container #test-load-btn');\r\n\r\nexport const getEditTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #edit-tests-btn');\r\n\r\nexport const getRunTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #run-tests-btn');\r\n\r\nexport const getWatchTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #watch-tests-btn');\r\n\r\nexport const getUrlImportForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector<HTMLFormElement>('#url-import-form');\r\nexport const getUrlImportButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#url-import-btn') as HTMLButtonElement;\r\nexport const getUrlImportInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#code-url') as HTMLInputElement;\r\nexport const getCodeImportInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#local-code-input') as HTMLInputElement;\r\n\r\nexport const getImportJsonUrlForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url-import-form') as HTMLInputElement;\r\nexport const getImportJsonUrlButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url-import-btn') as HTMLInputElement;\r\nexport const getImportJsonUrlInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url') as HTMLInputElement;\r\n\r\nexport const getBulkImportJsonUrlForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url-import-form') as HTMLInputElement;\r\nexport const getBulkImportJsonUrlButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url-import-btn') as HTMLInputElement;\r\nexport const getBulkImportJsonUrlInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url') as HTMLInputElement;\r\nexport const getLinkToSavedProjects = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#link-to-saved-projects') as HTMLAnchorElement;\r\n\r\nexport const getImportFileInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#file-input') as HTMLInputElement;\r\n\r\nexport const getImportFileInputLabel = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('.file-input-label') as HTMLInputElement;\r\n\r\nexport const getBulkImportFileInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-file-input') as HTMLInputElement;\r\n\r\nexport const getNewRepoForm = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector<HTMLFormElement>('#new-repo-form');\r\nexport const getNewRepoButton = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-btn') as HTMLButtonElement;\r\nexport const getNewRepoNameInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-name') as HTMLInputElement;\r\nexport const getNewRepoNameError = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-name-error') as HTMLElement;\r\nexport const getNewRepoMessageInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-message') as HTMLInputElement;\r\nexport const getNewRepoCommitSource = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-source') as HTMLInputElement;\r\nexport const getNewRepoAutoSync = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-autosync') as HTMLInputElement;\r\n\r\nexport const getExistingRepoForm = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector<HTMLFormElement>('#existing-repo-form');\r\nexport const getExistingRepoButton = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-btn') as HTMLButtonElement;\r\nexport const getExistingRepoNameInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-name') as HTMLInputElement;\r\nexport const getExistingRepoMessageInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-message') as HTMLInputElement;\r\nexport const getExistingRepoCommitSource = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-source') as HTMLInputElement;\r\nexport const getExistingRepoAutoSync = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-autosync') as HTMLInputElement;\r\n\r\nexport const getStarterTemplatesTab = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector<HTMLElement>(\r\n    '#templates-tabs [data-target=\"templates-starter\"]',\r\n  );\r\nexport const getStarterTemplatesList = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector<HTMLElement>('#starter-templates-list');\r\nexport const getUserTemplatesScreen = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector('#templates-user .modal-screen') as HTMLElement;\r\n\r\nexport const getBulkImportButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#bulk-import-button') as HTMLElement;\r\n\r\nexport const getExportAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#export-all-button') as HTMLElement;\r\n\r\nexport const getDeleteAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#delete-all-button') as HTMLElement;\r\n\r\nexport const getAddAssetButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-add-asset-button') as HTMLElement;\r\n\r\nexport const getAssetsDeleteAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-delete-all-button') as HTMLElement;\r\n\r\nexport const getAssetsButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-button') as HTMLElement;\r\n\r\nexport const getAssetDataUrlFileInput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-data-url-file-input') as HTMLInputElement;\r\n\r\nexport const getAssetDataUrlOutput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#data-url-output') as HTMLElement;\r\n\r\nexport const getAssetGHPagesFileInput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input') as HTMLInputElement;\r\n\r\nexport const getAssetGHPagesFileInputLabel = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input-label') as HTMLElement;\r\n\r\nexport const getAssetGHPagesFileInputButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input-button') as HTMLElement;\r\n\r\nexport const getAssetGHPagesOutput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#gh-pages-output') as HTMLElement;\r\n\r\nexport const getSyncStatus = (syncContainer: HTMLElement | undefined) =>\r\n  (syncContainer || document).querySelector<HTMLElement>('#sync-status');\r\n\r\nexport const getStartSyncBtns = (syncContainer: HTMLElement | undefined) =>\r\n  (syncContainer || document).querySelectorAll<HTMLButtonElement>('.start-sync-btn');\r\n\r\nexport const getBackupForm = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelector('#backup-form') as HTMLFormElement;\r\n\r\nexport const getBackupBtn = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelector('#backup-btn') as HTMLButtonElement;\r\n\r\nexport const getBackupCheckedInputs = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelectorAll<HTMLInputElement>('#backup input[type=\"checkbox\"]:checked');\r\n\r\nexport const getAddSnippetButton = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-add-snippet-button') as HTMLElement;\r\n\r\nexport const getSnippetsDeleteAllButton = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-delete-all-button') as HTMLElement;\r\n\r\nexport const getSnippetLanguageSelect = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#language-select') as HTMLSelectElement;\r\n\r\nexport const getAddSnippetEditor = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-editor') as HTMLElement;\r\n\r\nexport const getSnippetTitleInput = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-title-input') as HTMLInputElement;\r\n\r\nexport const getSnippetDescriptionArea = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-description-textarea') as HTMLTextAreaElement;\r\n\r\nexport const getSaveSnippetBtn = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-save-btn') as HTMLButtonElement;\r\n\r\nexport const getSnippetsBtn = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-button') as HTMLButtonElement;\r\n\r\nexport const getBroadcastStatusLabel = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-status') as HTMLElement;\r\n\r\nexport const getBroadcastForm = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-form') as HTMLFormElement;\r\n\r\nexport const getBroadcastServerUrlInput = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-server-url') as HTMLInputElement;\r\n\r\nexport const getBroadcastSourceCheckbox = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-source') as HTMLInputElement;\r\n\r\nexport const getBroadcastBtn = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-btn') as HTMLButtonElement;\r\n\r\nexport const getBroadcastChannelUrlSection = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-channel-url-section') as HTMLElement;\r\n\r\nexport const getBroadcastChannelUrl = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-channel-url') as HTMLAnchorElement;\r\n\r\nexport const getBroadcastStatusBtn = () =>\r\n  document.querySelector('#broadcast-status-btn') as HTMLElement | null;\r\n\r\nexport const getQrCodeContainer = () => document.querySelector('#qrcode-container') as HTMLElement;\r\n\r\nexport const getEditorSettingsFormatLink = (editorSettingsContainer: HTMLElement) =>\r\n  editorSettingsContainer.querySelector('#editor-settings-format-link') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkNew = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-new') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkOpen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-open') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkImport = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-import') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkDefaultTemplateLi = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('.default-template-li') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkNoDefaultTemplate = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#no-default-template') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkLoadDefault = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-load-default') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkRecentOpen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-recent-open') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkTemplates = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-templates') as HTMLAnchorElement;\r\n\r\nexport const getModalShowWelcomeCheckbox = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #show-welcome-checkbox') as HTMLInputElement;\r\n\r\nexport const getModalWelcomeRecover = (welcomeContainer = document) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recover') as HTMLElement;\r\n\r\nexport const getModalWelcomeScreen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-screen-container .modal-screen') as HTMLElement;\r\n\r\nexport const getModalWelcomeRecent = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recent') as HTMLElement;\r\n\r\nexport const getModalWelcomeRecentList = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recent-list') as HTMLElement;\r\n\r\nexport const getModalWelcomeTemplateList = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-template-list') as HTMLElement;\r\n", "/* eslint-disable import/no-internal-modules */\nimport type { createEventsManager } from '../events';\nimport type { createModal } from '../modal';\nimport type { EditorOptions, FormatFn, UserConfig } from '../models';\nimport type { createEditor } from '../editor/create-editor';\nimport { editorSettingsScreen } from '../html';\nimport { getEditorConfig, getFormatterConfig } from '../config/config';\nimport { defaultConfig } from '../config/default-config';\nimport { fonts, getFontFamily } from '../editor/fonts';\nimport { getEditorSettingsFormatLink } from './selectors';\n\nexport const createEditorSettingsUI = async ({\n  baseUrl,\n  modal,\n  eventsManager,\n  scrollToSelector,\n  deps,\n}: {\n  baseUrl: string;\n  modal: ReturnType<typeof createModal>;\n  eventsManager: ReturnType<typeof createEventsManager>;\n  scrollToSelector: string;\n  deps: {\n    getUserConfig: () => UserConfig;\n    createEditor: typeof createEditor;\n    getFormatFn: () => Promise<FormatFn>;\n    changeSettings: (newConfig: Partial<UserConfig>) => void;\n  };\n}) => {\n  const userConfig = deps.getUserConfig();\n\n  const div = document.createElement('div');\n  div.innerHTML = editorSettingsScreen;\n  const editorSettingsContainer = div.firstChild as HTMLElement;\n  modal.show(editorSettingsContainer, { isAsync: true, scrollToSelector });\n\n  const previewContainer = editorSettingsContainer.querySelector<HTMLElement>(\n    '#editor-settings-preview-container',\n  );\n  const form = editorSettingsContainer.querySelector<HTMLFormElement>('#editor-settings-form');\n  if (!previewContainer || !form) return;\n\n  interface FormField {\n    title: string;\n    name: keyof UserConfig;\n    options: Array<{ label?: string; value: string; checked?: boolean }>;\n    help?: string;\n  }\n  const formFields: FormField[] = [\n    {\n      title: 'Editor',\n      name: 'editor',\n      options: [\n        { label: 'Default', value: '' },\n        { label: 'Monaco', value: 'monaco' },\n        { label: 'CodeMirror', value: 'codemirror' },\n        { label: 'CodeJar', value: 'codejar' },\n      ],\n      help: `${process.env.DOCS_BASE_URL}features/editor-settings#code-editor`,\n    },\n    {\n      title: 'Font Family',\n      name: 'fontFamily',\n      options: [\n        { label: 'Default', value: '' },\n        ...fonts.map((font) => ({ label: font.label || font.name, value: font.name })),\n      ],\n    },\n    {\n      title: 'Font Size',\n      name: 'fontSize',\n      options: [\n        { label: '10', value: '10' },\n        { label: '11', value: '11' },\n        { label: '12', value: '12' },\n        { label: '13', value: '13' },\n        { label: '14', value: '14', checked: true },\n        { label: '15', value: '15' },\n        { label: '16', value: '16' },\n        { label: '17', value: '17' },\n        { label: '18', value: '18' },\n        { label: '19', value: '19' },\n        { label: '20', value: '20' },\n        { label: '22', value: '22' },\n        { label: '24', value: '24' },\n        { label: '26', value: '26' },\n      ],\n    },\n    {\n      title: 'Indentation',\n      name: 'useTabs',\n      options: [\n        { label: 'Spaces', value: 'false' },\n        { label: 'Tabs', value: 'true' },\n      ],\n    },\n    {\n      title: 'Tab Size',\n      name: 'tabSize',\n      options: [\n        { label: '1', value: '1' },\n        { label: '2', value: '2', checked: true },\n        { label: '3', value: '3' },\n        { label: '4', value: '4' },\n        { label: '5', value: '5' },\n        { label: '6', value: '6' },\n      ],\n    },\n    {\n      title: 'Show line numbers',\n      name: 'lineNumbers',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Word-wrap',\n      name: 'wordWrap',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Auto-close brackets and quotes',\n      name: 'closeBrackets',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Enable Emmet *',\n      name: 'emmet',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Editor Mode *',\n      name: 'editorMode',\n      options: [\n        { label: 'Default', value: '' },\n        { label: 'Vim', value: 'vim' },\n        { label: 'Emacs', value: 'emacs' },\n      ],\n      help: `${process.env.DOCS_BASE_URL}features/editor-settings#editor-modes`,\n    },\n    {\n      title: 'Format: Use Semicolons',\n      name: 'semicolons',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Format: Use Single Quotes',\n      name: 'singleQuote',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Format: Use Trailing Commas',\n      name: 'trailingComma',\n      options: [{ value: 'true' }],\n    },\n  ];\n\n  const editorOptions: EditorOptions = {\n    baseUrl,\n    container: previewContainer,\n    editorId: 'editorSettings',\n    getLanguageExtension: () => 'jsx',\n    isEmbed: false,\n    language: 'jsx',\n    mapLanguage: () => 'typescript',\n    readonly: false,\n    theme: userConfig.theme,\n    value: editorContent,\n    ...getEditorConfig(userConfig),\n    ...getFormatterConfig(userConfig),\n    getFormatterConfig: () => getFormatterConfig(deps.getUserConfig()),\n    getFontFamily,\n  };\n  let codeEditor = editorOptions.editor;\n\n  const initializeEditor = async (options: EditorOptions) => {\n    const ed = await deps.createEditor(options);\n    deps.getFormatFn().then((fn) => {\n      setTimeout(() => {\n        editor.registerFormatter(fn);\n        editor.format();\n      }, 500);\n    });\n\n    getEditorSettingsFormatLink(editorSettingsContainer).onclick = (ev) => {\n      ev.preventDefault();\n      ed.format();\n    };\n    return ed;\n  };\n\n  formFields.forEach((field) => {\n    const title = document.createElement('label');\n    title.innerHTML = field.title.replace(\n      '*',\n      `<a href=\"#codejar-info\" class=\"hint--top\" data-hint=\"Not available in CodeJar\" style=\"text-decoration: none;\">*</a>`,\n    );\n    title.dataset.name = field.name;\n    form.appendChild(title);\n\n    if (field.help) {\n      const helpLink: HTMLAnchorElement = document.createElement('a');\n      helpLink.href = field.help;\n      helpLink.target = '_blank';\n      helpLink.classList.add('help-link');\n      helpLink.title = 'Click for info...';\n      title.appendChild(helpLink);\n\n      const helpIcon: HTMLImageElement = document.createElement('img');\n      helpIcon.src = baseUrl + 'assets/icons/info.svg';\n      helpLink.appendChild(helpIcon);\n    }\n\n    const fieldContainer = document.createElement('div');\n    fieldContainer.classList.add('input-container');\n    form.appendChild(fieldContainer);\n\n    const name = `editor-settings-${field.name}`;\n    const optionValue = String(\n      (editorOptions as any)[field.name] ?? (defaultConfig as any)[field.name] ?? '',\n    );\n\n    if (field.options.length > 4) {\n      const select = document.createElement('select');\n      select.name = name;\n      fieldContainer.appendChild(select);\n      field.options.forEach((option) => {\n        const optionEl = document.createElement('option');\n        optionEl.text = option.label || '';\n        optionEl.value = option.value;\n        optionEl.selected = optionValue === option.value || option.checked === true;\n        select.appendChild(optionEl);\n      });\n      return;\n    }\n\n    field.options.forEach((option) => {\n      const id = `${name}-${option.value}`;\n      const isCheckBox = !option.label && option.value === 'true';\n\n      const optionContainer = document.createElement('span');\n      fieldContainer.appendChild(optionContainer);\n\n      const input = document.createElement('input');\n      input.type = isCheckBox ? 'checkbox' : 'radio';\n      input.name = name;\n      input.id = id;\n      input.value = option.value;\n      input.checked = optionValue === option.value;\n      optionContainer.appendChild(input);\n\n      if (isCheckBox) {\n        input.classList.add('switch');\n      } else {\n        const label = document.createElement('label');\n        label.classList.add('radio-label');\n        label.htmlFor = id;\n        label.innerHTML = option.label || '';\n        optionContainer.appendChild(label);\n      }\n    });\n  });\n\n  let editor = await initializeEditor(editorOptions);\n\n  const updateOptions = async (init?: boolean) => {\n    const formData = Array.from(new FormData(form)).reduce(\n      (acc, [name, value]) => ({\n        ...acc,\n        [name.replace('editor-settings-', '')]:\n          value === 'true'\n            ? true\n            : value === 'false'\n            ? false\n            : value === ''\n            ? undefined\n            : !isNaN(Number(value))\n            ? Number(value)\n            : value,\n      }),\n      {} as EditorOptions,\n    );\n\n    const booleanFields = formFields\n      .filter(\n        (field) =>\n          field.options.length === 1 &&\n          !field.options[0].label &&\n          field.options[0].value === 'true',\n      )\n      .map((field) => field.name);\n\n    booleanFields.forEach((key) => {\n      if (!(key in formData)) {\n        (formData as any)[key] = false;\n      }\n    });\n\n    if (formData.editor === codeEditor) {\n      editor.changeSettings(formData);\n    } else {\n      const value = editor.getValue();\n      editor.destroy();\n      editor = await initializeEditor({\n        ...editorOptions,\n        ...getEditorConfig(formData as any),\n        value,\n      });\n    }\n\n    if (!init) {\n      deps.changeSettings(formData);\n      codeEditor = formData.editor;\n    }\n  };\n\n  eventsManager.addEventListener(form, 'change', () => updateOptions());\n  updateOptions(true);\n};\n\nconst editorContent = `\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App(props) {\n  const [count, setCount] = useState(0);\n  // increment on click!\n  const onClick = () => setCount(count + 1);\n  return (\n    <div className=\"container\">\n      <h1>Hello, {props.name}!</h1>\n      <img\n        alt=\"a long alt attribute value that describes this image in details so that we can demonstrate word-wrap\"\n        className=\"logo\"\n        src=\"https://livecodes.io/livecodes/assets/templates/react.svg\"\n      />\n      <p>You clicked {count === 0 ? 'zero' : count} times.</p>\n      <button onClick={onClick}>Click me</button>\n    </div>\n  );\n}\n\nReactDOM.render(<App name=\"React\" />, document.querySelector('#app'));\n`.trimStart();\n"],
  "mappings": "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KAAM,gBACN,IAAKC,EACP,EACA,CACE,GAAI,aACJ,KAAM,iBACN,IAAKC,EACP,EACA,CACE,GAAI,aACJ,KAAM,aACN,IAAKC,EACP,EACA,CACE,GAAI,gBACJ,KAAM,gBACN,IAAKC,EACP,EACA,CACE,GAAI,sBACJ,KAAM,sBACN,IAAKC,EACP,EACA,CACE,GAAI,cACJ,KAAM,cACN,IAAKC,EACP,EACA,CACE,GAAI,sBACJ,KAAM,8BACN,MAAO,sBACP,IAAKC,EACP,EACA,CACE,GAAI,YACJ,KAAM,YACN,IAAKC,EACP,EACA,CACE,GAAI,WACJ,KAAM,cACN,MAAO,WACP,IAAKC,EACP,EACA,CACE,GAAI,OACJ,KAAM,OACN,IAAKC,EACP,EACA,CACE,GAAI,SACJ,KAAM,SACN,IAAKC,EACP,EACA,CACE,GAAI,gBACJ,KAAM,gBACN,IAAKC,EACP,EACA,CACE,GAAI,cACJ,KAAM,cACN,IAAKC,EACP,EACA,CACE,GAAI,UACJ,KAAM,UACN,IAAKC,EACP,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,IAAKC,EACP,EACA,CACE,GAAI,QACJ,KAAM,QACN,IAAKC,EACP,EACA,CACE,GAAI,UACJ,KAAM,UACN,IAAKC,EACP,EACA,CACE,GAAI,SACJ,KAAM,iBACN,MAAO,SACP,IAAKC,EACP,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,IAAKC,EACP,EACA,CACE,GAAI,YACJ,KAAM,YACN,IAAKC,EACP,EACA,CACE,GAAI,eACJ,KAAM,eACN,IAAKC,EACP,EACA,CACE,GAAI,iBACJ,KAAM,iBACN,MAAO,UACP,IAAKC,EACP,EACA,CACE,GAAI,cACJ,KAAM,cACN,IAAKC,EACP,EACA,CACE,GAAI,UACJ,KAAM,UACN,IAAKC,EACP,EACA,CACE,GAAI,kBACJ,KAAM,kBACN,IAAKC,EACP,EACA,CACE,GAAI,aACJ,KAAM,aACN,IAAKC,EACP,EACA,CACE,GAAI,WACJ,KAAM,WACN,IAAKC,EACP,EACA,CACE,GAAI,cACJ,KAAM,cACN,IAAKC,EACP,EACA,CACE,GA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",
  "names": ["require_lz_string", "__commonJSMin", "exports", "module", "LZString", "f", "keyStrBase64", "keyStrUriSafe", "baseReverseDic", "getBaseValue", "alphabet", "character", "i", "input", "res", "a", "index", "compressed", "uncompressed", "buf", "TotalLen", "current_value", "result", "c", "bitsPerChar", "getCharFromInt", "value", "context_dictionary", "context_dictionaryToCreate", "context_c", "context_wc", "context_w", "context_enlargeIn", "context_dictSize", "context_numBits", "context_data", "context_data_val", "context_data_position", "ii", "length", "resetValue", "getNextValue", "dictionary", "next", "enlargeIn", "dictSize", "numBits", "entry", "w", "bits", "resb", "maxpower", "power", "data", "replaceValues", "str", "resultTemplate", "result_default", "appHTML", "app_default", "settingsMenuHTML", "settings_menu_default", "languageInfo", "language_info_default", "customSettingsScreen", "custom_settings_default", "testEditorScreen", "test_editor_default", "importScreen", "import_default", "deployScreen", "deploy_default", "syncScreen", "sync_default", "backupScreen", "backup_default", "broadcastScreen", "broadcast_default", "welcomeScreen", "welcome_default", "aboutScreen", "about_default", "infoScreen", "project_info_default", "resourcesScreen", "external_resources_default", "loginScreen", "login_default", "savePromptScreen", "save_prompt_default", "recoverPromptScreen", "recover_prompt_default", "templatesScreen", "templates_default", "openScreen", "open_default", "assetsScreen", "assets_default", "addAssetScreen", "add_asset_default", "snippetsScreen", "snippets_default", "addSnippetScreen", "add_snippet_default", "shareScreen", "share_default", "embedScreen", "embed_default", "editorSettingsScreen", "editor_settings_default", "resultPopupHTML", "result_popup_default", "escapeCode", "code", "slash", "getLanguageCustomSettings", "language", "config", "defaultConfig", "moduleCDNs", "npmCDNs", "ghCDNs", "modulesService", "moduleName", "isModule", "defaultCDN", "moduleUrl", "getCdnUrl", "path", "cdn", "getAppCDN", "testModule", "preferredCDN", "cdns", "modName", "post", "i", "TEMPLATES", "pattern", "template", "getUrl", "getModuleUrl", "modulesService", "vendorsBaseUrl", "artTemplateUrl", "getUrl", "assemblyscriptLoaderUrl", "getUrl", "astroBaseUrl", "getUrl", "babelUrl", "getUrl", "brythonBaseUrl", "getUrl", "cherryCljsBaseUrl", "getUrl", "clioBaseUrl", "getUrl", "dotUrl", "getUrl", "ejsUrl", "etaUrl", "getUrl", "fontAnonymousProUrl", "getUrl", "fontCascadiaCodeUrl", "fontCodeNewRomanUrl", "fontComicMonoUrl", "fontCourierPrimeUrl", "fontDECTerminalModernUrl", "fontDejaVuMonoUrl", "fontFantasqueUrl", "fontFiraCodeUrl", "fontFixedsysUrl", "fontHackUrl", "fontHermitUrl", "fontIBMPlexMonoUrl", "fontInconsolataUrl", "fontIosevkaUrl", "fontJetbrainsMonoUrl", "fontMenloUrl", "fontMonofurUrl", "fontMonoidUrl", "fontNotoUrl", "fontNovaMonoUrl", "fontOpenDyslexicUrl", "fontProFontWindowsUrl", "fontRobotoMonoUrl", "fontSFMonoUrl", "fontSourceCodeProUrl", "fontSpaceMonoUrl", "fontSudoVarUrl", "fontUbuntuMonoUrl", "fontVictorMonoUrl", "go2jsBaseUrl", "getUrl", "handlebarsBaseUrl", "getUrl", "imbaBaseUrl", "getUrl", "liquidJsUrl", "getUrl", "malinaVersion", "malinaUrl", "getUrl", "markedUrl", "mjmlUrl", "getUrl", "mustacheUrl", "getUrl", "nunjucksBaseUrl", "getUrl", "opalBaseUrl", "parinferUrl", "prettierBaseUrl", "getUrl", "prettierPhpUrl", "riotBaseUrl", "getUrl", "sqlFormatterUrl", "getUrl", "sqljsBaseUrl", "stencilUrl", "twigUrl", "getUrl", "typescriptUrl", "uniterUrl", "vue3CdnUrl", "getUrl", "vue2CdnUrl", "vueSfcLoaderCdnBaseUrl", "lightningcss", "vendorsBaseUrl", "_config", "baseUrl", "postcss", "vendorsBaseUrl", "_config", "baseUrl", "autoprefixer", "vendorsBaseUrl", "config", "getLanguageCustomSettings", "cssnano", "nanoPlugins", "postcssPlugins", "plugin", "processor", "opts", "postcssPresetEnv", "vendorsBaseUrl", "config", "getLanguageCustomSettings", "purgecss", "_baseUrl", "options", "tokencss", "customSettings", "extendTokens", "base", "tokens", "result", "key", "tokensConfig", "cssModules", "_cssFileName", "json", "_outputFileName", "addClasses", "removeClasses", "unocss", "vendorsBaseUrl", "_config", "baseUrl", "windicss", "vendorsBaseUrl", "_config", "baseUrl", "prettierUrl", "prettierBaseUrl", "parserPlugins", "prettierPhpUrl", "vendorsBaseUrl", "babel", "parserPlugins", "babelUrl", "code", "config", "getLanguageCustomSettings", "css", "parserPlugins", "code", "haml", "vendorsBaseUrl", "_config", "baseUrl", "html", "parserPlugins", "code", "javascript", "parserPlugins", "code", "jsx", "parserPlugins", "tsx", "parserPlugins", "less", "parserPlugins", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "markdown", "parserPlugins", "markedUrl", "code", "config", "getLanguageCustomSettings", "compileInCompiler", "content", "language", "config", "options", "worker", "resolve", "handler", "ev", "message", "runOutsideWorker", "code", "config", "worker", "resolve", "mdx", "remarkGfm", "vendorsBaseUrl", "compiled", "getLanguageCustomSettings", "jsx", "str", "result", "escapeCode", "js", "compileInCompiler", "parserPlugins", "pug", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "scss", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "svelte", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "stylus", "vendorsBaseUrl", "code", "typescriptOptions", "typescript", "parserPlugins", "typescriptUrl", "code", "config", "language", "getLanguageCustomSettings", "loaderCdnUrl", "vueSfcLoaderCdnBaseUrl", "vue", "parserPlugins", "_config", "baseUrl", "vue3CdnUrl", "loaderCdnUrl", "vueSfcLoaderCdnBaseUrl", "vue2", "parserPlugins", "_config", "baseUrl", "vue2CdnUrl", "stencil", "parserPlugins", "stencilUrl", "code", "config", "getLanguageCustomSettings", "vendorsBaseUrl", "livescript", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "assemblyscriptUrl", "vendorsBaseUrl", "assemblyscript", "parserPlugins", "_config", "baseUrl", "assemblyscriptLoaderUrl", "brythonUrl", "brythonBaseUrl", "stdlibUrl", "getImports", "code", "requireMap", "arr", "mod", "opalBaseUrl", "ruby", "config", "autoloadStdlib", "options", "getLanguageCustomSettings", "compiled", "imports", "stdlib", "php", "parserPlugins", "code", "uniterUrl", "luaFmtUrl", "vendorsBaseUrl", "parenFormatter", "url", "parinferUrl", "value", "solid", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "solidTsx", "parserPlugins", "liquid", "parserPlugins", "liquidJsUrl", "_config", "baseUrl", "ejs", "parserPlugins", "ejsUrl", "_config", "baseUrl", "url", "handlebarsBaseUrl", "runtimeUrl", "handlebars", "parserPlugins", "_config", "baseUrl", "dot", "parserPlugins", "dotUrl", "_config", "baseUrl", "url", "nunjucksBaseUrl", "runtimeUrl", "nunjucks", "parserPlugins", "_config", "baseUrl", "go", "go2jsBaseUrl", "code", "formatted", "err", "resolve", "jsCode", "formatterUrl", "vendorsBaseUrl", "compilerCdnUrl", "riotBaseUrl", "cdnUrl", "riot", "parserPlugins", "_config", "baseUrl", "scriptType", "sql", "sqlFormatterUrl", "value", "sqljsBaseUrl", "_config", "baseUrl", "reactNativeWebUrl", "vendorsBaseUrl", "reactNative", "parserPlugins", "code", "config", "language", "typescriptOptions", "getLanguageCustomSettings", "reactNativeTsx", "parserPlugins", "code", "config", "language", "typescriptOptions", "getLanguageCustomSettings", "reactNativeWebUrl", "twig", "parserPlugins", "twigUrl", "_config", "baseUrl", "compilerURL", "astroBaseUrl", "astro", "parserPlugins", "_config", "baseUrl", "malina", "parserPlugins", "_config", "baseUrl", "malinaVersion", "cdnUrl", "vendorsBaseUrl", "clio", "clioBaseUrl", "_config", "baseUrl", "runOutsideWorker", "code", "baseUrl", "config", "diagramsCompiler", "diagrams", "parserPlugins", "imba", "imbaBaseUrl", "_config", "baseUrl", "mustache", "parserPlugins", "mustacheUrl", "_config", "baseUrl", "artTemplate", "parserPlugins", "artTemplateUrl", "_config", "baseUrl", "civetUrl", "vendorsBaseUrl", "flow", "parserPlugins", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "mjml", "parserPlugins", "mjmlUrl", "code", "config", "html", "errors", "getLanguageCustomSettings", "err", "sucrase", "parserPlugins", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "eta", "parserPlugins", "etaUrl", "_config", "baseUrl", "allowedOrigin", "origin", "import_lz_string", "dpasteGetUrl", "dpastePostUrl", "apiUrl", "dpasteService", "id", "res", "config", "apiService", "allowedOrigin", "shareService", "clojurescript", "parenFormatter", "cherryCljsBaseUrl", "code", "config", "options", "compiled", "compileInCompiler", "getEditorConfig", "config", "getFormatterConfig", "fonts", "fontAnonymousProUrl", "fontCascadiaCodeUrl", "fontCodeNewRomanUrl", "fontComicMonoUrl", "fontCourierPrimeUrl", "fontDECTerminalModernUrl", "fontDejaVuMonoUrl", "fontFantasqueUrl", "fontFiraCodeUrl", "fontFixedsysUrl", "fontHackUrl", "fontHermitUrl", "fontIBMPlexMonoUrl", "fontInconsolataUrl", "fontIosevkaUrl", "fontJetbrainsMonoUrl", "fontMenloUrl", "fontMonofurUrl", "fontMonoidUrl", "fontNotoUrl", "fontNovaMonoUrl", "fontOpenDyslexicUrl", "fontProFontWindowsUrl", "fontRobotoMonoUrl", "fontSFMonoUrl", "fontSourceCodeProUrl", "fontSpaceMonoUrl", "fontSudoVarUrl", "fontUbuntuMonoUrl", "fontVictorMonoUrl", "getFontFamily", "font", "defaultFonts", "fontName", "f", "getEditorSettingsFormatLink", "editorSettingsContainer", "createEditorSettingsUI", "baseUrl", "modal", "eventsManager", "scrollToSelector", "deps", "userConfig", "div", "editorSettingsScreen", "editorSettingsContainer", "previewContainer", "form", "formFields", "fonts", "font", "editorOptions", "editorContent", "getEditorConfig", "getFormatterConfig", "getFontFamily", "codeEditor", "initializeEditor", "options", "ed", "fn", "editor", "getEditorSettingsFormatLink", "ev", "field", "title", "helpLink", "helpIcon", "fieldContainer", "name", "optionValue", "defaultConfig", "select", "option", "optionEl", "id", "isCheckBox", "optionContainer", "input", "label", "updateOptions", "init", "formData", "acc", "value", "key"]
}
