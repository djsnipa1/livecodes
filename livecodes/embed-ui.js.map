{
  "version": 3,
  "sources": ["../../src/livecodes/config/default-config.ts", "../../src/livecodes/html/index.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/services/permanent-url.ts", "../../src/livecodes/UI/embed-ui.ts"],
  "sourcesContent": ["import type { Config } from '../models';\r\n\r\nexport const defaultConfig: Config = {\r\n  title: 'Untitled Project',\r\n  description: '',\r\n  tags: [],\r\n  autoupdate: true,\r\n  autosave: false,\r\n  delay: 1500,\r\n  formatOnsave: false,\r\n  mode: 'full',\r\n  theme: 'dark',\r\n  recoverUnsaved: true,\r\n  showSpacing: false,\r\n  welcome: true,\r\n  readonly: false,\r\n  allowLangChange: true,\r\n  activeEditor: undefined,\r\n  languages: undefined,\r\n  markup: {\r\n    language: 'html',\r\n    content: '',\r\n  },\r\n  style: {\r\n    language: 'css',\r\n    content: '',\r\n  },\r\n  script: {\r\n    language: 'javascript',\r\n    content: '',\r\n  },\r\n  stylesheets: [],\r\n  scripts: [],\r\n  cssPreset: '',\r\n  imports: {},\r\n  types: {},\r\n  tests: {\r\n    language: 'typescript',\r\n    content: '',\r\n  },\r\n  tools: {\r\n    enabled: 'all',\r\n    active: '',\r\n    status: '',\r\n  },\r\n  zoom: 1,\r\n  processors: [],\r\n  customSettings: {},\r\n  editor: undefined,\r\n  fontFamily: undefined,\r\n  fontSize: undefined,\r\n  useTabs: false,\r\n  tabSize: 2,\r\n  lineNumbers: true,\r\n  wordWrap: false,\r\n  closeBrackets: true,\r\n  semicolons: true,\r\n  singleQuote: false,\r\n  trailingComma: true,\r\n  emmet: true,\r\n  editorMode: undefined,\r\n  version: process.env.VERSION as string,\r\n};\r\n", "// @ts-ignore\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport resultTemplateRaw from './sandbox/v6/result.html';\r\n// @ts-ignore\r\nimport appHTMLRaw from './app.html';\r\n// @ts-ignore\r\nimport settingsMenuHTMLRaw from './settings-menu.html';\r\n// @ts-ignore\r\nimport languageInfoRaw from './language-info.html';\r\n// @ts-ignore\r\nimport customSettingsScreenRaw from './custom-settings.html';\r\n// @ts-ignore\r\nimport testEditorScreenRaw from './test-editor.html';\r\n// @ts-ignore\r\nimport importScreenRaw from './import.html';\r\n// @ts-ignore\r\nimport deployScreenRaw from './deploy.html';\r\n// @ts-ignore\r\nimport syncScreenRaw from './sync.html';\r\n// @ts-ignore\r\nimport backupScreenRaw from './backup.html';\r\n// @ts-ignore\r\nimport broadcastScreenRaw from './broadcast.html';\r\n// @ts-ignore\r\nimport welcomeScreenRaw from './welcome.html';\r\n// @ts-ignore\r\nimport aboutScreenRaw from './about.html';\r\n// @ts-ignore\r\nimport infoScreenRaw from './project-info.html';\r\n// @ts-ignore\r\nimport resourcesScreenRaw from './external-resources.html';\r\n// @ts-ignore\r\nimport loginScreenRaw from './login.html';\r\n// @ts-ignore\r\nimport savePromptScreenRaw from './save-prompt.html';\r\n// @ts-ignore\r\nimport recoverPromptScreenRaw from './recover-prompt.html';\r\n// @ts-ignore\r\nimport templatesScreenRaw from './templates.html';\r\n// @ts-ignore\r\nimport openScreenRaw from './open.html';\r\n// @ts-ignore\r\nimport assetsScreenRaw from './assets.html';\r\n// @ts-ignore\r\nimport addAssetScreenRaw from './add-asset.html';\r\n// @ts-ignore\r\nimport snippetsScreenRaw from './snippets.html';\r\n// @ts-ignore\r\nimport addSnippetScreenRaw from './add-snippet.html';\r\n// @ts-ignore\r\nimport shareScreenRaw from './share.html';\r\n// @ts-ignore\r\nimport embedScreenRaw from './embed.html';\r\n// @ts-ignore\r\nimport editorSettingsScreenRaw from './editor-settings.html';\r\n// @ts-ignore\r\nimport resultPopupHTMLRaw from './result-popup.html';\r\n\r\nconst replaceValues = (str: string) =>\r\n  str\r\n    .replace(/{{APP_VERSION}}/g, process.env.VERSION || '')\r\n    .replace(/{{SDK_VERSION}}/g, process.env.SDK_VERSION || '')\r\n    .replace(/{{COMMIT_SHA}}/g, process.env.GIT_COMMIT || '')\r\n    .replace(/{{REPO_URL}}/g, process.env.REPO_URL || '')\r\n    .replace(/{{DOCS_BASE_URL}}/g, process.env.DOCS_BASE_URL || '');\r\n\r\nconst resultTemplate = replaceValues(resultTemplateRaw);\r\nconst appHTML = replaceValues(appHTMLRaw);\r\nconst settingsMenuHTML = replaceValues(settingsMenuHTMLRaw);\r\nconst languageInfo = replaceValues(languageInfoRaw);\r\nconst customSettingsScreen = replaceValues(customSettingsScreenRaw);\r\nconst testEditorScreen = replaceValues(testEditorScreenRaw);\r\nconst importScreen = replaceValues(importScreenRaw);\r\nconst deployScreen = replaceValues(deployScreenRaw);\r\nconst syncScreen = replaceValues(syncScreenRaw);\r\nconst backupScreen = replaceValues(backupScreenRaw);\r\nconst broadcastScreen = replaceValues(broadcastScreenRaw);\r\nconst welcomeScreen = replaceValues(welcomeScreenRaw);\r\nconst aboutScreen = replaceValues(aboutScreenRaw);\r\nconst infoScreen = replaceValues(infoScreenRaw);\r\nconst resourcesScreen = replaceValues(resourcesScreenRaw);\r\nconst loginScreen = replaceValues(loginScreenRaw);\r\nconst savePromptScreen = replaceValues(savePromptScreenRaw);\r\nconst recoverPromptScreen = replaceValues(recoverPromptScreenRaw);\r\nconst templatesScreen = replaceValues(templatesScreenRaw);\r\nconst openScreen = replaceValues(openScreenRaw);\r\nconst assetsScreen = replaceValues(assetsScreenRaw);\r\nconst addAssetScreen = replaceValues(addAssetScreenRaw);\r\nconst snippetsScreen = replaceValues(snippetsScreenRaw);\r\nconst addSnippetScreen = replaceValues(addSnippetScreenRaw);\r\nconst shareScreen = replaceValues(shareScreenRaw);\r\nconst embedScreen = replaceValues(embedScreenRaw);\r\nconst editorSettingsScreen = replaceValues(editorSettingsScreenRaw);\r\nconst resultPopupHTML = replaceValues(resultPopupHTMLRaw);\r\n\r\nexport {\r\n  resultTemplate,\r\n  appHTML,\r\n  settingsMenuHTML,\r\n  languageInfo,\r\n  customSettingsScreen,\r\n  testEditorScreen,\r\n  importScreen,\r\n  deployScreen,\r\n  syncScreen,\r\n  backupScreen,\r\n  broadcastScreen,\r\n  welcomeScreen,\r\n  aboutScreen,\r\n  infoScreen,\r\n  resourcesScreen,\r\n  loginScreen,\r\n  savePromptScreen,\r\n  recoverPromptScreen,\r\n  templatesScreen,\r\n  openScreen,\r\n  assetsScreen,\r\n  addAssetScreen,\r\n  snippetsScreen,\r\n  addSnippetScreen,\r\n  shareScreen,\r\n  embedScreen,\r\n  editorSettingsScreen,\r\n  resultPopupHTML,\r\n};\r\n", "import type { Config, Language, Processor, WorkerMessageEvent } from '../models';\r\n\r\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\r\n  let timeout: any;\r\n\r\n  return (...args: unknown[]) => {\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\r\n  };\r\n};\r\n\r\nexport const decodeHTML = (html: string) => {\r\n  const txt = document.createElement('textarea');\r\n  txt.innerHTML = html;\r\n  return txt.value;\r\n};\r\n\r\nexport const encodeHTML = (html: string) =>\r\n  html\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/'/g, '&#39;')\r\n    .replace(/\"/g, '&#34;');\r\n\r\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\nexport const escapeCode = (code: string, slash = true) =>\r\n  code\r\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\r\n    .replace(/`/g, '\\\\`')\r\n    .replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const pipe = (...fns: Function[]) =>\r\n  fns.reduce(\r\n    (f, g) =>\r\n      (...args: any) =>\r\n        g(f(...args)),\r\n  );\r\n\r\n// replace non-alphanumeric with underscore\r\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\r\n\r\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n// added safari (on mac & ios): monaco editor is broken on safari\r\nexport const isMobile = () => {\r\n  let mobile = false;\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n        a,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4),\r\n      )\r\n    ) {\r\n      mobile = true;\r\n    }\r\n  })(userAgent || navigator.vendor || (window as any).opera);\r\n\r\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\r\n\r\n  return mobile || safari;\r\n};\r\n\r\nexport const isRelativeUrl = (url?: string) =>\r\n  !url?.startsWith('http') && !url?.startsWith('data:');\r\n\r\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\r\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\r\n\r\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\r\n\r\nexport const objectMap = (\r\n  obj: Record<string, any>,\r\n  fn: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\r\n\r\nexport const objectFilter = (\r\n  obj: Record<string, any>,\r\n  predicate: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\r\n    const textarea = document.createElement('textarea');\r\n    textarea.textContent = text;\r\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('Copy to clipboard failed.', ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const stringToValidJson = (str: string) =>\r\n  str\r\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\r\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\r\n    })\r\n    .replace(\r\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\r\n      function quoteNonQuoted(matchedStr) {\r\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\r\n      },\r\n    )\r\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\r\n\r\nexport const stringify = (obj: any, pretty = false) => {\r\n  try {\r\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\r\n  } catch {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\r\n\r\nexport const downloadFile = (filename: string, extension: string, content: string) => {\r\n  const a = document.createElement('a');\r\n  a.style.display = 'none';\r\n  a.href = content;\r\n  a.download = safeName(filename) + '.' + extension;\r\n  a.click();\r\n  a.remove();\r\n};\r\n\r\nexport const loadScript = (url: string, name?: string) =>\r\n  new Promise((resolve, reject) => {\r\n    if (name && (globalThis as any)[name]) {\r\n      return resolve((globalThis as any)[name]);\r\n    }\r\n\r\n    // if running in web worker\r\n    if (typeof (globalThis as any).importScripts === 'function') {\r\n      (globalThis as any).importScripts(url);\r\n      if (name && (globalThis as any)[name]) {\r\n        return resolve((globalThis as any)[name]);\r\n      }\r\n      return resolve(globalThis);\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.src = url;\r\n    script.async = true;\r\n    const removeEventListeners = () => {\r\n      script.removeEventListener('load', onLoad);\r\n      script.removeEventListener('error', onError);\r\n    };\r\n    const onLoad = () => {\r\n      removeEventListeners();\r\n      if (!name) {\r\n        return resolve('loaded: ' + url);\r\n      }\r\n      const i = setInterval(() => {\r\n        if ((window as any)[name]) {\r\n          clearInterval(i);\r\n          return resolve((window as any)[name]);\r\n        }\r\n      }, 5);\r\n    };\r\n    const onError = () => {\r\n      removeEventListeners();\r\n      reject('failed to load: ' + url);\r\n    };\r\n    script.addEventListener('load', onLoad);\r\n    script.addEventListener('error', onError);\r\n    document.head.appendChild(script);\r\n  });\r\n\r\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\r\n  if (id && document.getElementById(id)) return;\r\n  const stylesheet = document.createElement('link');\r\n  stylesheet.rel = 'stylesheet';\r\n  stylesheet.href = url;\r\n  stylesheet.id = id || 'styles-' + getRandomString();\r\n  document.head.insertBefore(\r\n    stylesheet,\r\n    insertBefore ? document.querySelector(insertBefore) : null,\r\n  );\r\n};\r\n\r\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\r\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\r\n\r\nexport const getDate = () => {\r\n  let date = new Date();\r\n  const offset = date.getTimezoneOffset();\r\n  date = new Date(date.getTime() - offset * 60 * 1000);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\r\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\r\n  fetch(input, init).then(handleFetchError);\r\n\r\nexport const blobToBase64 = (file: Blob): Promise<string> =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\r\n  const CHUNK_SZ = 0x8000;\r\n  const c = [];\r\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\r\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\r\n  }\r\n  return btoa(c.join(''));\r\n};\r\n\r\nexport const base64ToUint8Array = (str: string) =>\r\n  new Uint8Array(\r\n    atob(str)\r\n      .split('')\r\n      .map((c) => c.charCodeAt(0)),\r\n  );\r\n\r\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (a.byteLength !== b.byteLength) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < a.byteLength; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getWorkerDataURL = (url: string) => {\r\n  const content = `importScripts(\"${url}\");`;\r\n  return 'data:text/javascript;base64,' + btoa(content);\r\n};\r\n\r\nexport const removeComments = (src: string) =>\r\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\r\n\r\nexport const removeStrings = (src: string) =>\r\n  src\r\n    .replace(/'[^\\n']*'/gm, \"''\")\r\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\r\n    .replace(/`[^`]*`/gm, '``');\r\n\r\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\r\n\r\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\r\n  ...(config.customSettings as any)[language],\r\n});\r\n\r\nexport const getValidUrl = (url?: string) => {\r\n  if (!url) return null;\r\n  let validUrl = null;\r\n  if (url.startsWith('http') || url.startsWith('data:')) {\r\n    try {\r\n      validUrl = new URL(url).href;\r\n    } catch {\r\n      try {\r\n        validUrl = new URL(decodeURIComponent(url)).href;\r\n      } catch {\r\n        //\r\n      }\r\n    }\r\n  }\r\n  return validUrl;\r\n};\r\n\r\nexport const runOrContinue =\r\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\r\n  async (x: T): Promise<T> => {\r\n    try {\r\n      const result = await fn(x);\r\n      return result;\r\n    } catch (error) {\r\n      if (typeof catchFn === 'function') {\r\n        catchFn(error);\r\n      }\r\n      return x;\r\n    }\r\n  };\r\n\r\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\r\n\r\nexport const isInIframe = () => {\r\n  try {\r\n    return window.self !== window.top;\r\n  } catch {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\r\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\r\n\r\nexport const hideOnClickOutside = (element: HTMLElement) => {\r\n  const hideElement = () => {\r\n    element.style.display = 'none';\r\n    removeListeners();\r\n    (window as any).watchingEscape = false;\r\n  };\r\n\r\n  const outsideClickListener = (event: MouseEvent) => {\r\n    if (!element.contains(event.target as Node) && isVisible(element)) {\r\n      hideElement();\r\n    }\r\n  };\r\n\r\n  const escapeListener = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      hideElement();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const isVisible = (elem: HTMLElement) =>\r\n    !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\r\n\r\n  const removeListeners = () => {\r\n    document.removeEventListener('click', outsideClickListener);\r\n    document.removeEventListener('keydown', escapeListener);\r\n  };\r\n\r\n  document.addEventListener('click', outsideClickListener);\r\n  document.addEventListener('keydown', escapeListener);\r\n  (window as any).watchingEscape = true;\r\n\r\n  return {\r\n    clear: () => removeListeners(),\r\n  };\r\n};\r\n\r\nexport const callWorker = async <T = string, K = unknown>(\r\n  worker: Worker,\r\n  message: { method: T; args?: any },\r\n) =>\r\n  new Promise<K>((resolve) => {\r\n    const messageId = getRandomString();\r\n\r\n    const handler = (event: WorkerMessageEvent<T, K>) => {\r\n      const received = event.data;\r\n\r\n      if (received.method === message.method && received.messageId === messageId) {\r\n        worker.removeEventListener('message', handler);\r\n        resolve(received.data as K);\r\n      }\r\n    };\r\n    worker.addEventListener('message', handler);\r\n\r\n    worker.postMessage({\r\n      ...message,\r\n      messageId,\r\n    });\r\n  });\r\n\r\nexport const toCamelCase = (str: string) =>\r\n  str\r\n    .replace(/[-_.]+/g, ' ')\r\n    .trim()\r\n    .replace(/^([A-Z])|\\s+(\\w)/g, function (_match, p1, p2) {\r\n      if (p2) return p2.toUpperCase();\r\n      return p1.toLowerCase();\r\n    });\r\n\r\nexport const removeDuplicates = (arr: any[] | undefined) => Array.from(new Set(arr));\r\n", "type SDKFile = 'esm' | 'umd' | 'react' | 'vue' | 'types';\r\n\r\nconst sdkFiles: Record<SDKFile, string> = {\r\n  esm: 'livecodes.js',\r\n  umd: 'livecodes.umd.js',\r\n  react: 'react.js',\r\n  vue: 'vue.js',\r\n  types: 'index.d.ts',\r\n};\r\n\r\nexport const permanentUrlService = {\r\n  getAppUrl: () => `https://v${process.env.VERSION}.livecodes.io/`,\r\n  getSDKUrl: (file: SDKFile = 'esm') =>\r\n    `https://cdn.jsdelivr.net/npm/livecodes@${process.env.SDK_VERSION}/${sdkFiles[file]}`,\r\n};\r\n", "/* eslint-disable import/no-internal-modules */\r\nimport type { createEventsManager } from '../events';\r\nimport type { createModal } from '../modal';\r\nimport type { CodeEditor, ContentConfig, EditorId } from '../models';\r\nimport type { createNotifications } from '../notifications';\r\nimport { defaultConfig } from '../config/default-config';\r\nimport { embedScreen } from '../html';\r\nimport { cloneObject, copyToClipboard, encodeHTML, escapeCode, indentCode } from '../utils/utils';\r\nimport { permanentUrlService } from '../services/permanent-url';\r\n\r\nexport const createEmbedUI = async ({\r\n  baseUrl,\r\n  config,\r\n  editorLanguages,\r\n  modal,\r\n  notifications,\r\n  eventsManager,\r\n  createEditorFn,\r\n  getUrlFn,\r\n}: {\r\n  baseUrl: string;\r\n  config: ContentConfig;\r\n  editorLanguages: { [key in EditorId]: string };\r\n  modal: ReturnType<typeof createModal>;\r\n  notifications: ReturnType<typeof createNotifications>;\r\n  eventsManager: ReturnType<typeof createEventsManager>;\r\n  createEditorFn: (container: HTMLElement) => Promise<CodeEditor>;\r\n  getUrlFn: (permanentUrl?: boolean) => Promise<string>;\r\n}) => {\r\n  const title = config.title;\r\n  const activeEditor = config.activeEditor || 'markup';\r\n\r\n  const div = document.createElement('div');\r\n  div.innerHTML = embedScreen;\r\n  const embedContainer = div.firstChild as HTMLElement;\r\n  modal.show(embedContainer, { isAsync: true });\r\n\r\n  const previewContainer = embedContainer.querySelector<HTMLElement>('#embed-preview-container');\r\n  const form = embedContainer.querySelector<HTMLFormElement>('#embed-form');\r\n  const codeArea = embedContainer.querySelector<HTMLFormElement>('#embed-code');\r\n  const copyBtn = embedContainer.querySelector<HTMLFormElement>('#embed-copy-btn');\r\n  if (!previewContainer || !form || !codeArea || !copyBtn) return;\r\n\r\n  interface FormField {\r\n    title: string;\r\n    name:\r\n      | 'type'\r\n      | 'theme'\r\n      | 'loading'\r\n      | 'preview'\r\n      | 'lite'\r\n      | 'readonly'\r\n      | 'mode'\r\n      | 'view'\r\n      | 'activeEditor'\r\n      | 'permanentUrl'\r\n      | 'tools'\r\n      | 'activeTool';\r\n    options: Array<{ label?: string; value: string; checked?: boolean }>;\r\n    help?: string;\r\n  }\r\n  const formFields: FormField[] = [\r\n    {\r\n      title: 'Theme',\r\n      name: 'theme',\r\n      options: [\r\n        { label: 'Dark', value: 'dark', checked: true },\r\n        { label: 'Light', value: 'light' },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Loading',\r\n      name: 'loading',\r\n      options: [\r\n        { label: 'Lazy', value: 'lazy', checked: true },\r\n        { label: 'On-click', value: 'click' },\r\n        { label: 'Eager', value: 'eager' },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Show Result Preview',\r\n      name: 'preview',\r\n      options: [{ value: 'true', checked: false }],\r\n      help: `${process.env.DOCS_BASE_URL}features/embeds#result-page-preview`,\r\n    },\r\n    {\r\n      title: 'Lite Mode',\r\n      name: 'lite',\r\n      options: [{ value: 'true', checked: false }],\r\n      help: `${process.env.DOCS_BASE_URL}features/lite`,\r\n    },\r\n    {\r\n      title: 'Read only',\r\n      name: 'readonly',\r\n      options: [{ value: 'true', checked: false }],\r\n    },\r\n    {\r\n      title: 'Display Mode',\r\n      name: 'mode',\r\n      options: [\r\n        { label: 'Full', value: 'full', checked: true },\r\n        { label: 'Editor', value: 'editor' },\r\n        { label: 'Code Block', value: 'codeblock' },\r\n        { label: 'Result', value: 'result' },\r\n      ],\r\n      help: `${process.env.DOCS_BASE_URL}features/display-modes`,\r\n    },\r\n    {\r\n      title: 'Default View',\r\n      name: 'view',\r\n      options: [\r\n        { label: 'Split', value: 'split', checked: true },\r\n        { label: 'Editor', value: 'editor' },\r\n        { label: 'Result', value: 'result' },\r\n      ],\r\n      help: `${process.env.DOCS_BASE_URL}features/default-view`,\r\n    },\r\n    {\r\n      title: 'Active Editor',\r\n      name: 'activeEditor',\r\n      options: [\r\n        { label: editorLanguages.markup, value: 'markup', checked: activeEditor === 'markup' },\r\n        { label: editorLanguages.style, value: 'style', checked: activeEditor === 'style' },\r\n        { label: editorLanguages.script, value: 'script', checked: activeEditor === 'script' },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Tools',\r\n      name: 'tools',\r\n      options: [\r\n        { label: 'Closed', value: 'closed', checked: true },\r\n        { label: 'Open', value: 'open' },\r\n        { label: 'Full', value: 'full' },\r\n        { label: 'None', value: 'none' },\r\n      ],\r\n      help: `${process.env.DOCS_BASE_URL}features/tools-pane`,\r\n    },\r\n    {\r\n      title: 'Active Tool',\r\n      name: 'activeTool',\r\n      options: [\r\n        { label: 'Console', value: 'console', checked: true },\r\n        { label: 'Compiled', value: 'compiled' },\r\n        { label: 'Tests', value: 'tests' },\r\n      ].filter((option) => (option.value === 'tests' && !config.tests?.content ? false : true)),\r\n      help: `${process.env.DOCS_BASE_URL}features/tools-pane`,\r\n    },\r\n    {\r\n      title: 'Permanent URL',\r\n      name: 'permanentUrl',\r\n      options: [{ value: 'true', checked: true }],\r\n      help: `${process.env.DOCS_BASE_URL}features/permanent-url`,\r\n    },\r\n    {\r\n      title: 'Embed Type',\r\n      name: 'type',\r\n      options: [\r\n        { label: 'Script (CDN)', value: 'cdn', checked: true },\r\n        { label: 'Script (npm)', value: 'npm' },\r\n        { label: 'React', value: 'react' },\r\n        { label: 'Vue', value: 'vue' },\r\n        { label: 'Iframe', value: 'iframe' },\r\n        { label: 'HTML', value: 'html' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  formFields.forEach((field) => {\r\n    const title = document.createElement('label');\r\n    title.innerHTML = field.title;\r\n    form.appendChild(title);\r\n\r\n    if (field.help) {\r\n      const helpLink: HTMLAnchorElement = document.createElement('a');\r\n      helpLink.href = field.help;\r\n      helpLink.target = '_blank';\r\n      helpLink.classList.add('help-link');\r\n      helpLink.title = 'Click for info...';\r\n      title.appendChild(helpLink);\r\n\r\n      const helpIcon: HTMLImageElement = document.createElement('img');\r\n      helpIcon.src = baseUrl + 'assets/icons/info.svg';\r\n      helpLink.appendChild(helpIcon);\r\n    }\r\n\r\n    const fieldContainer = document.createElement('div');\r\n    fieldContainer.classList.add('input-container');\r\n    form.appendChild(fieldContainer);\r\n\r\n    field.options.forEach((option) => {\r\n      const name = `embed-${field.name}`;\r\n      const id = `${name}-${option.value}`;\r\n      const isCheckBox = !option.label && option.value === 'true';\r\n\r\n      const optionContainer = document.createElement('span');\r\n      fieldContainer.appendChild(optionContainer);\r\n\r\n      const input = document.createElement('input');\r\n      input.type = isCheckBox ? 'checkbox' : 'radio';\r\n      input.name = name;\r\n      input.id = id;\r\n      input.value = option.value;\r\n      input.checked = option.checked || false;\r\n      optionContainer.appendChild(input);\r\n\r\n      if (isCheckBox) {\r\n        input.classList.add('switch');\r\n      } else {\r\n        const label = document.createElement('label') as HTMLLabelElement;\r\n        label.classList.add('radio-label');\r\n        label.htmlFor = id;\r\n        label.innerHTML = option.label || '';\r\n        optionContainer.appendChild(label);\r\n      }\r\n    });\r\n  });\r\n\r\n  type FormData = {\r\n    [key in FormField['name']]?: string | boolean;\r\n  };\r\n\r\n  const editor = await createEditorFn(codeArea);\r\n  const livecodesUrl = 'https://livecodes.io';\r\n  const sdkUrl = permanentUrlService.getSDKUrl('umd');\r\n  let shareUrl = await getUrlFn(true);\r\n  let urlObj = new URL(shareUrl);\r\n  let appUrl = urlObj.origin + urlObj.pathname;\r\n\r\n  const previewIframe: HTMLIFrameElement = document.createElement('iframe');\r\n  previewIframe.id = 'embed-preview-iframe';\r\n  previewContainer.innerHTML = '';\r\n  previewContainer.appendChild(previewIframe);\r\n\r\n  const getContainerId = () => 'livecodes-' + (Math.random() + 1).toString(36).substring(2);\r\n\r\n  const getContainerHtml = (id: string) =>\r\n    `\r\n<div id=\"${id}\">\r\n  <span>Open the project <a href=\"${shareUrl}\" target=\"_blank\">${title}</a> in <a href=\"${livecodesUrl}\" target=\"_blank\">LiveCodes</a>.</span>\r\n</div>\r\n`.trimStart();\r\n\r\n  const getOptions = (data: FormData) => {\r\n    const config = {\r\n      ...(data.mode !== defaultConfig.mode ? { mode: data.mode } : {}),\r\n      ...(data.theme !== defaultConfig.theme ? { theme: data.theme } : {}),\r\n      ...(data.tools !== 'closed' || data.activeTool !== 'console'\r\n        ? {\r\n            tools: {\r\n              enabled: data.tools === 'none' ? [] : 'all',\r\n              status: data.tools,\r\n              active: data.activeTool,\r\n            },\r\n          }\r\n        : {}),\r\n      ...(data.readonly ? { readonly: data.readonly } : {}),\r\n      ...(data.mode !== 'result' && data.activeEditor !== activeEditor\r\n        ? { activeEditor: data.activeEditor }\r\n        : {}),\r\n    };\r\n    const importId = urlObj.searchParams.get('x');\r\n    return {\r\n      ...(appUrl !== 'https://livecodes.io/' ? { appUrl } : {}),\r\n      ...(Object.keys(config).length > 0 ? { config } : {}),\r\n      ...(importId ? { import: importId } : {}),\r\n      ...(data.lite ? { lite: data.lite } : {}),\r\n      ...(data.loading !== 'lazy' ? { loading: data.loading } : {}),\r\n      ...(data.loading === 'click' && data.preview ? { params: { preview: true } } : {}),\r\n      ...(data.view && data.view !== 'split' ? { view: data.view } : {}),\r\n    };\r\n  };\r\n\r\n  const getIframeUrl = (data: FormData) => {\r\n    const iframeUrl = new URL(shareUrl);\r\n    iframeUrl.searchParams.set(data.lite ? 'lite' : 'embed', 'true');\r\n\r\n    if (data.loading && data.loading !== 'lazy') {\r\n      iframeUrl.searchParams.set('loading', String(data.loading));\r\n    }\r\n    if (data.loading === 'click' && data.preview) {\r\n      iframeUrl.searchParams.set('preview', 'true');\r\n    }\r\n    if (data.view && data.view !== 'split') {\r\n      iframeUrl.searchParams.set('view', String(data.view));\r\n    }\r\n    if (data.mode !== 'result' && data.activeEditor && data.activeEditor !== activeEditor) {\r\n      iframeUrl.searchParams.set('activeEditor', String(data.activeEditor));\r\n    }\r\n    if (data.mode && data.mode !== defaultConfig.mode) {\r\n      iframeUrl.searchParams.set('mode', String(data.mode));\r\n    }\r\n    if (data.theme && data.theme !== defaultConfig.theme) {\r\n      iframeUrl.searchParams.set('theme', String(data.theme));\r\n    }\r\n    if (data.tools && (data.tools !== 'closed' || data.activeTool !== 'console')) {\r\n      iframeUrl.searchParams.set(\r\n        data.tools === 'none' ? 'tools' : String(data.activeTool),\r\n        String(data.tools),\r\n      );\r\n    }\r\n    if (data.readonly !== undefined) {\r\n      iframeUrl.searchParams.set('readonly', String(data.readonly));\r\n    }\r\n    return decodeURIComponent(iframeUrl.href);\r\n  };\r\n\r\n  const codeTemlates = {\r\n    cdn: (data: FormData) => {\r\n      const containerId = getContainerId();\r\n      const containerHtml = getContainerHtml(containerId);\r\n      const options = getOptions(data);\r\n      const formatted = JSON.stringify(options, null, 2);\r\n      const indented = indentCode(formatted, 2);\r\n      return `\r\n${containerHtml}\r\n<script src=\"${sdkUrl}\"></script>\r\n<script>\r\n  const options = ${indented};\r\n  livecodes.createPlayground(\"#${containerId}\", options);\r\n</script>\r\n`.trimStart();\r\n    },\r\n    npm(data: FormData) {\r\n      const containerId = getContainerId();\r\n      const containerHtml = getContainerHtml(containerId);\r\n      const options = getOptions(data);\r\n      const formatted = JSON.stringify(options, null, 2);\r\n      const indented = indentCode(formatted, 2);\r\n      return `\r\n${containerHtml}\r\n<script type=\"module\">\r\n  import { createPlayground } from \"livecodes\";\r\n  const options = ${indented};\r\n  createPlayground(\"#${containerId}\", options);\r\n</script>\r\n`.trimStart();\r\n    },\r\n    react(data: FormData) {\r\n      const options = getOptions(data);\r\n      const formatted = JSON.stringify(options, null, 2);\r\n      const indented = indentCode(formatted, 2);\r\n      return `\r\nimport LiveCodes from \"livecodes/react\";\r\nexport default function App() {\r\n  const options = ${indented};\r\n  return <LiveCodes {...options}></LiveCodes>;\r\n}\r\n`.trimStart();\r\n    },\r\n    vue(data: FormData) {\r\n      const options = getOptions(data);\r\n      const formatted = JSON.stringify(options, null, 2);\r\n      const indented = indentCode(formatted, 2);\r\n      return `\r\n<script setup>\r\n  import LiveCodes from 'livecodes/vue';\r\n  const options = ${indented};\r\n</script>\r\n\r\n<template>\r\n  <LiveCodes v-bind=\"options\" />\r\n</template>\r\n`.trimStart();\r\n    },\r\n    iframe: (data: FormData) => {\r\n      const iframeUrl = getIframeUrl(data);\r\n      const nonEmbeddedUrl = new URL(iframeUrl);\r\n      nonEmbeddedUrl.searchParams.delete('embed');\r\n      nonEmbeddedUrl.searchParams.delete('lite');\r\n      const projectUrl = decodeURIComponent(nonEmbeddedUrl.href);\r\n      return `\r\n<iframe title=\"${title}\" scrolling=\"no\" loading=\"lazy\" style=\"height:300px; width: 100%; border:1px solid black; border-radius:5px;\" src=\"${iframeUrl}\">\r\n  See the project <a href=\"${projectUrl}\" target=\"_blank\">${title}</a> on <a href=\"${livecodesUrl}\" target=\"_blank\">LiveCodes</a>.\r\n</iframe>\r\n`.trimStart();\r\n    },\r\n    html: (data: FormData) => {\r\n      const { import: _, ...options } = getOptions(data);\r\n      const projectConfig = {\r\n        ...cloneObject<ContentConfig>(config),\r\n        ...options.config,\r\n      };\r\n      (Object.keys(projectConfig) as Array<keyof ContentConfig>).forEach((key) => {\r\n        if (\r\n          JSON.stringify(projectConfig[key]) === JSON.stringify(defaultConfig[key]) ||\r\n          (key === 'activeEditor' && projectConfig.activeEditor === 'markup') ||\r\n          ['markup', 'style', 'script'].includes(key)\r\n        ) {\r\n          delete projectConfig[key];\r\n        }\r\n      });\r\n      if (Object.keys(projectConfig).length > 0) {\r\n        options.config = projectConfig;\r\n      }\r\n      const optionsAttr = escapeCode(JSON.stringify(options).replace(/'/g, '&#39;'));\r\n      return `\r\n<div class=\"livecodes\" style=\"height: 300px;\" data-options='${optionsAttr}'>\r\n<pre data-lang=\"${config.markup.language}\">${escapeCode(\r\n        encodeHTML(config.markup.content || ''),\r\n      )}</pre>\r\n<pre data-lang=\"${config.style.language}\">${escapeCode(\r\n        encodeHTML(config.style.content || ''),\r\n      )}</pre>\r\n<pre data-lang=\"${config.script.language}\">${escapeCode(\r\n        encodeHTML(config.script.content || ''),\r\n      )}</pre>\r\n</div>\r\n<script defer src=\"${sdkUrl}\" data-prefill></script>\r\n`.trimStart();\r\n    },\r\n  };\r\n\r\n  const previousSelections: FormData = {\r\n    preview: false,\r\n    view: 'split',\r\n    tools: 'closed',\r\n    activeTool: 'console',\r\n  };\r\n\r\n  const generateCode = async () => {\r\n    const formData = Array.from(new FormData(form)).reduce(\r\n      (acc, [name, value]) => ({\r\n        ...acc,\r\n        [name.replace('embed-', '')]: value === 'true' ? true : value,\r\n      }),\r\n      {} as FormData,\r\n    );\r\n\r\n    shareUrl = await getUrlFn(Boolean(formData.permanentUrl));\r\n    urlObj = new URL(shareUrl);\r\n    appUrl = urlObj.origin + urlObj.pathname;\r\n\r\n    const previewInput = document.querySelector<HTMLInputElement>('input[name=\"embed-preview\"]')!;\r\n    if (formData.loading !== 'click') {\r\n      previewInput.checked = false;\r\n      previewInput.disabled = true;\r\n      formData.preview = false;\r\n    } else {\r\n      previewInput.disabled = false;\r\n    }\r\n\r\n    const viewInputs = document.querySelectorAll<HTMLInputElement>('input[name=\"embed-view\"]');\r\n    if (formData.mode !== 'full') {\r\n      previousSelections.view = formData.view || previousSelections.view;\r\n      delete formData.view;\r\n      viewInputs.forEach((input) => {\r\n        input.checked = false;\r\n        input.disabled = true;\r\n      });\r\n    } else {\r\n      viewInputs.forEach((input) => {\r\n        if (input.value === (formData.view || previousSelections.view)) {\r\n          input.checked = true;\r\n        }\r\n        input.disabled = false;\r\n        if (input.checked) {\r\n          formData.view = input.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    const toolsInputs = document.querySelectorAll<HTMLInputElement>('input[name=\"embed-tools\"]');\r\n    const activeToolInputs = document.querySelectorAll<HTMLInputElement>(\r\n      'input[name=\"embed-activeTool\"]',\r\n    );\r\n    if (formData.lite) {\r\n      previousSelections.tools = formData.tools || previousSelections.tools;\r\n      delete formData.tools;\r\n      toolsInputs.forEach((input) => {\r\n        input.checked = false;\r\n        input.disabled = true;\r\n      });\r\n    } else {\r\n      toolsInputs.forEach((input) => {\r\n        if (input.value === (formData.tools || previousSelections.tools)) {\r\n          input.checked = true;\r\n        }\r\n        input.disabled = false;\r\n        if (input.checked) {\r\n          formData.tools = input.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (formData.lite || formData.tools === 'none') {\r\n      previousSelections.activeTool = formData.activeTool || previousSelections.activeTool;\r\n      delete formData.activeTool;\r\n      activeToolInputs.forEach((input) => {\r\n        input.checked = false;\r\n        input.disabled = true;\r\n      });\r\n    } else {\r\n      activeToolInputs.forEach((input) => {\r\n        if (input.value === (formData.activeTool || previousSelections.activeTool)) {\r\n          input.checked = true;\r\n        }\r\n        input.disabled = false;\r\n        if (input.checked) {\r\n          formData.activeTool = input.value;\r\n        }\r\n      });\r\n    }\r\n\r\n    const activeEditorInputs = document.querySelectorAll<HTMLInputElement>(\r\n      'input[name=\"embed-activeEditor\"]',\r\n    );\r\n    activeEditorInputs.forEach((input) => {\r\n      if (formData.mode === 'result') {\r\n        input.checked = input.value === activeEditor;\r\n        input.disabled = true;\r\n        delete formData.activeEditor;\r\n      } else {\r\n        input.disabled = false;\r\n      }\r\n    });\r\n\r\n    previewIframe.src = getIframeUrl(formData);\r\n    const embedType = (formData as any).type;\r\n    const code = (codeTemlates as any)[embedType]?.(formData);\r\n    const embedTypeLanguage = embedType === 'react' ? 'jsx' : 'html';\r\n    if (editor.getLanguage() !== embedTypeLanguage) {\r\n      editor.setLanguage(embedTypeLanguage, code);\r\n    } else {\r\n      editor.setValue(code);\r\n    }\r\n  };\r\n\r\n  eventsManager.addEventListener(form, 'change', generateCode);\r\n\r\n  eventsManager.addEventListener(copyBtn, 'click', async () => {\r\n    if (copyToClipboard(editor.getValue())) {\r\n      notifications.success('Code copied to clipboard');\r\n    } else {\r\n      notifications.error('Failed to copy to clipboard');\r\n    }\r\n  });\r\n\r\n  generateCode();\r\n};\r\n"],
  "mappings": "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",
  "names": ["defaultConfig", "replaceValues", "str", "resultTemplate", "result_default", "appHTML", "app_default", "settingsMenuHTML", "settings_menu_default", "languageInfo", "language_info_default", "customSettingsScreen", "custom_settings_default", "testEditorScreen", "test_editor_default", "importScreen", "import_default", "deployScreen", "deploy_default", "syncScreen", "sync_default", "backupScreen", "backup_default", "broadcastScreen", "broadcast_default", "welcomeScreen", "welcome_default", "aboutScreen", "about_default", "infoScreen", "project_info_default", "resourcesScreen", "external_resources_default", "loginScreen", "login_default", "savePromptScreen", "save_prompt_default", "recoverPromptScreen", "recover_prompt_default", "templatesScreen", "templates_default", "openScreen", "open_default", "assetsScreen", "assets_default", "addAssetScreen", "add_asset_default", "snippetsScreen", "snippets_default", "addSnippetScreen", "add_snippet_default", "shareScreen", "share_default", "embedScreen", "embed_default", "editorSettingsScreen", "editor_settings_default", "resultPopupHTML", "result_popup_default", "encodeHTML", "html", "escapeCode", "code", "slash", "cloneObject", "x", "copyToClipboard", "text", "textarea", "ex", "indentCode", "code", "spaces", "skipFirstLine", "sdkFiles", "permanentUrlService", "file", "createEmbedUI", "baseUrl", "config", "editorLanguages", "modal", "notifications", "eventsManager", "createEditorFn", "getUrlFn", "title", "activeEditor", "div", "embedScreen", "embedContainer", "previewContainer", "form", "codeArea", "copyBtn", "option", "field", "helpLink", "helpIcon", "fieldContainer", "name", "id", "isCheckBox", "optionContainer", "input", "label", "editor", "livecodesUrl", "sdkUrl", "permanentUrlService", "shareUrl", "urlObj", "appUrl", "previewIframe", "getContainerId", "getContainerHtml", "getOptions", "data", "defaultConfig", "importId", "getIframeUrl", "iframeUrl", "codeTemlates", "containerId", "containerHtml", "options", "formatted", "indented", "indentCode", "nonEmbeddedUrl", "projectUrl", "_", "projectConfig", "cloneObject", "key", "escapeCode", "encodeHTML", "previousSelections", "generateCode", "formData", "acc", "value", "previewInput", "viewInputs", "toolsInputs", "activeToolInputs", "embedType", "code", "embedTypeLanguage", "copyToClipboard"]
}
