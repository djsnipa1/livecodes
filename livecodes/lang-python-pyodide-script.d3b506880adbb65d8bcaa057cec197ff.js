"use strict";(()=>{var u=["jspm","skypack"],f=["unpkg","jsdelivr","fastly.jsdelivr"],x=["fastly.jsdelivr.gh","jsdelivr.gh","statically"],n={getModuleUrl:(t,{isModule:s=!0,defaultCDN:e="jspm"}={})=>{t=t.replace(/#nobundle/g,"");let o=m(t,s,e);return o||(s?"https://jspm.dev/"+t:"https://cdn.jsdelivr.net/npm/"+t)},getUrl:(t,s)=>t.startsWith("http")?t:m(t,!1,s||U())||t,cdnLists:{npm:f,module:u,gh:x},checkCDNs:async(t,s)=>{let e=[s,...n.cdnLists.npm].filter(Boolean);for(let o of e)try{if((await fetch(n.getUrl(t,o),{method:"HEAD"})).ok)return o}catch{}return n.cdnLists.npm[0]}},U=()=>{if(globalThis.appCDN)return globalThis.appCDN;try{return new URL(location.href).searchParams.get("appCDN")||n.cdnLists.npm[0]}catch{return n.cdnLists.npm[0]}},m=(t,s,e)=>{let o=s&&t.startsWith("unpkg:")?"?module":"";t.startsWith("gh:")?t=t.replace("gh",x[0]):t.includes(":")||(t=(e||(s?u[0]:f[0]))+":"+t);for(let c of j){let[i,l]=c;if(i.test(t))return t.replace(i,l)+o}return null},j=[[/^(jspm:)(.+)/i,"https://jspm.dev/$2"],[/^(npm:)(.+)/i,"https://jspm.dev/$2"],[/^(node:)(.+)/i,"https://jspm.dev/$2"],[/^(skypack:)(.+)/i,"https://cdn.skypack.dev/$2"],[/^(jsdelivr:)(.+)/i,"https://cdn.jsdelivr.net/npm/$2"],[/^(fastly.jsdelivr:)(.+)/i,"https://fastly.jsdelivr.net/npm/$2"],[/^(jsdelivr.gh:)(.+)/i,"https://cdn.jsdelivr.net/gh/$2"],[/^(fastly.jsdelivr.gh:)(.+)/i,"https://fastly.jsdelivr.net/gh/$2"],[/^(statically:)(.+)/i,"https://cdn.statically.io/gh/$2"],[/^(esm.run:)(.+)/i,"https://esm.run/$2"],[/^(esm.sh:)(.+)/i,"https://esm.sh/$2"],[/^(esbuild:)(.+)/i,"https://esbuild.vercel.app/$2"],[/^(bundle.run:)(.+)/i,"https://bundle.run/$2"],[/^(unpkg:)(.+)/i,"https://unpkg.com/$2"],[/^(bundlejs:)(.+)/i,"https://deno.bundlejs.com/?file&q=$2"],[/^(bundle:)(.+)/i,"https://deno.bundlejs.com/?file&q=$2"],[/^(deno:)(.+)/i,"https://deno.bundlejs.com/?file&q=https://deno.land/x/$2/mod.ts"],[/^(https:\/\/deno\.land\/.+)/i,"https://deno.bundlejs.com/?file&q=$1"],[/^(github:|https:\/\/github\.com\/)(.[^\/]+?)\/(.[^\/]+?)\/(?!releases\/)(?:(?:blob|raw)\/)?(.+?\/.+)/i,"https://deno.bundlejs.com/?file&q=https://cdn.jsdelivr.net/gh/$2/$3@$4"],[/^(gist\.github:)(.+?\/[0-9a-f]+\/raw\/(?:[0-9a-f]+\/)?.+)$/i,"https://gist.githack.com/$2"],[/^(gitlab:|https:\/\/gitlab\.com\/)([^\/]+.*\/[^\/]+)\/(?:raw|blob)\/(.+?)(?:\?.*)?$/i,"https://deno.bundlejs.com/?file&q=https://gl.githack.com/$2/raw/$3"],[/^(bitbucket:|https:\/\/bitbucket\.org\/)([^\/]+\/[^\/]+)\/(?:raw|src)\/(.+?)(?:\?.*)?$/i,"https://deno.bundlejs.com/?file&q=https://bb.githack.com/$2/raw/$3"],[/^(bitbucket:)snippets\/([^\/]+\/[^\/]+)\/revisions\/([^\/\#\?]+)(?:\?[^#]*)?(?:\#file-(.+?))$/i,"https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4"],[/^(bitbucket:)snippets\/([^\/]+\/[^\/\#\?]+)(?:\?[^#]*)?(?:\#file-(.+?))$/i,"https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3"],[/^(bitbucket:)\!api\/2.0\/snippets\/([^\/]+\/[^\/]+\/[^\/]+)\/files\/(.+?)(?:\?.*)?$/i,"https://bb.githack.com/!api/2.0/snippets/$2/files/$3"],[/^(api\.bitbucket:)2.0\/snippets\/([^\/]+\/[^\/]+\/[^\/]+)\/files\/(.+?)(?:\?.*)?$/i,"https://bb.githack.com/!api/2.0/snippets/$2/files/$3"],[/^(rawgit:)(.+?\/[0-9a-f]+\/raw\/(?:[0-9a-f]+\/)?.+)$/i,"https://gist.githack.com/$2"],[/^(rawgit:|https:\/\/raw\.githubusercontent\.com)(\/[^\/]+\/[^\/]+|[0-9A-Za-z-]+\/[0-9a-f]+\/raw)\/(.+)/i,"https://deno.bundlejs.com/?file&q=https://raw.githack.com/$2/$3"]];var{getUrl:h,getModuleUrl:k}=n;var g="0.6.64",C=h(`malinajs@${g}/malina.js`);var p=h("https://cdn.jsdelivr.net/pyodide/v0.24.0/full/");if(livecodes.pyodideLoading===void 0){let t=document.createElement("script");t.src=`${p}pyodide.js`,document.head.append(t)}window.addEventListener("load",async()=>{parent.postMessage({type:"loading",payload:!0},"*");let t="";document.querySelectorAll('script[type="text/python"]').forEach(r=>t+=r.innerHTML+`
`);async function e(){livecodes.pyodideLoading!==!1&&(livecodes.pyodide=await loadPyodide({indexURL:p}),await livecodes.pyodide.loadPackage("micropip"),livecodes.micropip=livecodes.pyodide.pyimport("micropip"),livecodes.pyodideLoading=!1)}async function o(){if(livecodes.pyodideState)try{livecodes.pyodide.pyodide_py._state.restore_state(livecodes.pyodideState)}catch{livecodes.pyodideLoading=!0,await e()}}async function c(r){let b=[...livecodes.pyodide.pyodide_py.code.find_imports(r)].filter(a=>!(a in livecodes.pyodide.loadedPackages));for(let a of b)try{await livecodes.micropip.install(a)}catch{}}async function i(r){await l,await o(),await c(r);try{livecodes.pyodideState=livecodes.pyodide.pyodide_py._state.save_state(),await livecodes.pyodide.runPythonAsync(r)}catch(d){console.log(d)}}let l=e();await i(t),parent.postMessage({type:"loading",payload:!1},"*")});})();
