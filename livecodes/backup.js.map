{
  "version": 3,
  "sources": ["../../src/livecodes/html/index.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/services/modules.ts", "../../src/livecodes/vendors.ts", "../../src/livecodes/UI/selectors.ts", "../../src/livecodes/UI/backup.ts"],
  "sourcesContent": ["// @ts-ignore\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport resultTemplateRaw from './sandbox/v6/result.html';\r\n// @ts-ignore\r\nimport appHTMLRaw from './app.html';\r\n// @ts-ignore\r\nimport settingsMenuHTMLRaw from './settings-menu.html';\r\n// @ts-ignore\r\nimport languageInfoRaw from './language-info.html';\r\n// @ts-ignore\r\nimport customSettingsScreenRaw from './custom-settings.html';\r\n// @ts-ignore\r\nimport testEditorScreenRaw from './test-editor.html';\r\n// @ts-ignore\r\nimport importScreenRaw from './import.html';\r\n// @ts-ignore\r\nimport deployScreenRaw from './deploy.html';\r\n// @ts-ignore\r\nimport syncScreenRaw from './sync.html';\r\n// @ts-ignore\r\nimport backupScreenRaw from './backup.html';\r\n// @ts-ignore\r\nimport broadcastScreenRaw from './broadcast.html';\r\n// @ts-ignore\r\nimport welcomeScreenRaw from './welcome.html';\r\n// @ts-ignore\r\nimport aboutScreenRaw from './about.html';\r\n// @ts-ignore\r\nimport infoScreenRaw from './project-info.html';\r\n// @ts-ignore\r\nimport resourcesScreenRaw from './external-resources.html';\r\n// @ts-ignore\r\nimport loginScreenRaw from './login.html';\r\n// @ts-ignore\r\nimport savePromptScreenRaw from './save-prompt.html';\r\n// @ts-ignore\r\nimport recoverPromptScreenRaw from './recover-prompt.html';\r\n// @ts-ignore\r\nimport templatesScreenRaw from './templates.html';\r\n// @ts-ignore\r\nimport openScreenRaw from './open.html';\r\n// @ts-ignore\r\nimport assetsScreenRaw from './assets.html';\r\n// @ts-ignore\r\nimport addAssetScreenRaw from './add-asset.html';\r\n// @ts-ignore\r\nimport snippetsScreenRaw from './snippets.html';\r\n// @ts-ignore\r\nimport addSnippetScreenRaw from './add-snippet.html';\r\n// @ts-ignore\r\nimport shareScreenRaw from './share.html';\r\n// @ts-ignore\r\nimport embedScreenRaw from './embed.html';\r\n// @ts-ignore\r\nimport editorSettingsScreenRaw from './editor-settings.html';\r\n// @ts-ignore\r\nimport resultPopupHTMLRaw from './result-popup.html';\r\n\r\nconst replaceValues = (str: string) =>\r\n  str\r\n    .replace(/{{APP_VERSION}}/g, process.env.VERSION || '')\r\n    .replace(/{{SDK_VERSION}}/g, process.env.SDK_VERSION || '')\r\n    .replace(/{{COMMIT_SHA}}/g, process.env.GIT_COMMIT || '')\r\n    .replace(/{{REPO_URL}}/g, process.env.REPO_URL || '')\r\n    .replace(/{{DOCS_BASE_URL}}/g, process.env.DOCS_BASE_URL || '');\r\n\r\nconst resultTemplate = replaceValues(resultTemplateRaw);\r\nconst appHTML = replaceValues(appHTMLRaw);\r\nconst settingsMenuHTML = replaceValues(settingsMenuHTMLRaw);\r\nconst languageInfo = replaceValues(languageInfoRaw);\r\nconst customSettingsScreen = replaceValues(customSettingsScreenRaw);\r\nconst testEditorScreen = replaceValues(testEditorScreenRaw);\r\nconst importScreen = replaceValues(importScreenRaw);\r\nconst deployScreen = replaceValues(deployScreenRaw);\r\nconst syncScreen = replaceValues(syncScreenRaw);\r\nconst backupScreen = replaceValues(backupScreenRaw);\r\nconst broadcastScreen = replaceValues(broadcastScreenRaw);\r\nconst welcomeScreen = replaceValues(welcomeScreenRaw);\r\nconst aboutScreen = replaceValues(aboutScreenRaw);\r\nconst infoScreen = replaceValues(infoScreenRaw);\r\nconst resourcesScreen = replaceValues(resourcesScreenRaw);\r\nconst loginScreen = replaceValues(loginScreenRaw);\r\nconst savePromptScreen = replaceValues(savePromptScreenRaw);\r\nconst recoverPromptScreen = replaceValues(recoverPromptScreenRaw);\r\nconst templatesScreen = replaceValues(templatesScreenRaw);\r\nconst openScreen = replaceValues(openScreenRaw);\r\nconst assetsScreen = replaceValues(assetsScreenRaw);\r\nconst addAssetScreen = replaceValues(addAssetScreenRaw);\r\nconst snippetsScreen = replaceValues(snippetsScreenRaw);\r\nconst addSnippetScreen = replaceValues(addSnippetScreenRaw);\r\nconst shareScreen = replaceValues(shareScreenRaw);\r\nconst embedScreen = replaceValues(embedScreenRaw);\r\nconst editorSettingsScreen = replaceValues(editorSettingsScreenRaw);\r\nconst resultPopupHTML = replaceValues(resultPopupHTMLRaw);\r\n\r\nexport {\r\n  resultTemplate,\r\n  appHTML,\r\n  settingsMenuHTML,\r\n  languageInfo,\r\n  customSettingsScreen,\r\n  testEditorScreen,\r\n  importScreen,\r\n  deployScreen,\r\n  syncScreen,\r\n  backupScreen,\r\n  broadcastScreen,\r\n  welcomeScreen,\r\n  aboutScreen,\r\n  infoScreen,\r\n  resourcesScreen,\r\n  loginScreen,\r\n  savePromptScreen,\r\n  recoverPromptScreen,\r\n  templatesScreen,\r\n  openScreen,\r\n  assetsScreen,\r\n  addAssetScreen,\r\n  snippetsScreen,\r\n  addSnippetScreen,\r\n  shareScreen,\r\n  embedScreen,\r\n  editorSettingsScreen,\r\n  resultPopupHTML,\r\n};\r\n", "import type { Config, Language, Processor, WorkerMessageEvent } from '../models';\r\n\r\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\r\n  let timeout: any;\r\n\r\n  return (...args: unknown[]) => {\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\r\n  };\r\n};\r\n\r\nexport const decodeHTML = (html: string) => {\r\n  const txt = document.createElement('textarea');\r\n  txt.innerHTML = html;\r\n  return txt.value;\r\n};\r\n\r\nexport const encodeHTML = (html: string) =>\r\n  html\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/'/g, '&#39;')\r\n    .replace(/\"/g, '&#34;');\r\n\r\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\nexport const escapeCode = (code: string, slash = true) =>\r\n  code\r\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\r\n    .replace(/`/g, '\\\\`')\r\n    .replace(/<\\/script>/g, '<\\\\/script>');\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const pipe = (...fns: Function[]) =>\r\n  fns.reduce(\r\n    (f, g) =>\r\n      (...args: any) =>\r\n        g(f(...args)),\r\n  );\r\n\r\n// replace non-alphanumeric with underscore\r\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\r\n\r\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\r\n// added safari (on mac & ios): monaco editor is broken on safari\r\nexport const isMobile = () => {\r\n  let mobile = false;\r\n  const userAgent = navigator.userAgent.toLowerCase();\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\r\n        a,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4),\r\n      )\r\n    ) {\r\n      mobile = true;\r\n    }\r\n  })(userAgent || navigator.vendor || (window as any).opera);\r\n\r\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\r\n\r\n  return mobile || safari;\r\n};\r\n\r\nexport const isRelativeUrl = (url?: string) =>\r\n  !url?.startsWith('http') && !url?.startsWith('data:');\r\n\r\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\r\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\r\n\r\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\r\n\r\nexport const objectMap = (\r\n  obj: Record<string, any>,\r\n  fn: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\r\n\r\nexport const objectFilter = (\r\n  obj: Record<string, any>,\r\n  predicate: (value: any, key: string, index: number) => any,\r\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\r\n\r\nexport const copyToClipboard = (text: string) => {\r\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\r\n    const textarea = document.createElement('textarea');\r\n    textarea.textContent = text;\r\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('Copy to clipboard failed.', ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const stringToValidJson = (str: string) =>\r\n  str\r\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\r\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\r\n    })\r\n    .replace(\r\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\r\n      function quoteNonQuoted(matchedStr) {\r\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\r\n      },\r\n    )\r\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\r\n\r\nexport const stringify = (obj: any, pretty = false) => {\r\n  try {\r\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\r\n  } catch {\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\r\n\r\nexport const downloadFile = (filename: string, extension: string, content: string) => {\r\n  const a = document.createElement('a');\r\n  a.style.display = 'none';\r\n  a.href = content;\r\n  a.download = safeName(filename) + '.' + extension;\r\n  a.click();\r\n  a.remove();\r\n};\r\n\r\nexport const loadScript = (url: string, name?: string) =>\r\n  new Promise((resolve, reject) => {\r\n    if (name && (globalThis as any)[name]) {\r\n      return resolve((globalThis as any)[name]);\r\n    }\r\n\r\n    // if running in web worker\r\n    if (typeof (globalThis as any).importScripts === 'function') {\r\n      (globalThis as any).importScripts(url);\r\n      if (name && (globalThis as any)[name]) {\r\n        return resolve((globalThis as any)[name]);\r\n      }\r\n      return resolve(globalThis);\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.src = url;\r\n    script.async = true;\r\n    const removeEventListeners = () => {\r\n      script.removeEventListener('load', onLoad);\r\n      script.removeEventListener('error', onError);\r\n    };\r\n    const onLoad = () => {\r\n      removeEventListeners();\r\n      if (!name) {\r\n        return resolve('loaded: ' + url);\r\n      }\r\n      const i = setInterval(() => {\r\n        if ((window as any)[name]) {\r\n          clearInterval(i);\r\n          return resolve((window as any)[name]);\r\n        }\r\n      }, 5);\r\n    };\r\n    const onError = () => {\r\n      removeEventListeners();\r\n      reject('failed to load: ' + url);\r\n    };\r\n    script.addEventListener('load', onLoad);\r\n    script.addEventListener('error', onError);\r\n    document.head.appendChild(script);\r\n  });\r\n\r\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\r\n  if (id && document.getElementById(id)) return;\r\n  const stylesheet = document.createElement('link');\r\n  stylesheet.rel = 'stylesheet';\r\n  stylesheet.href = url;\r\n  stylesheet.id = id || 'styles-' + getRandomString();\r\n  document.head.insertBefore(\r\n    stylesheet,\r\n    insertBefore ? document.querySelector(insertBefore) : null,\r\n  );\r\n};\r\n\r\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\r\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\r\n\r\nexport const getDate = () => {\r\n  let date = new Date();\r\n  const offset = date.getTimezoneOffset();\r\n  date = new Date(date.getTime() - offset * 60 * 1000);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\r\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\r\n  fetch(input, init).then(handleFetchError);\r\n\r\nexport const blobToBase64 = (file: Blob): Promise<string> =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\r\n  const CHUNK_SZ = 0x8000;\r\n  const c = [];\r\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\r\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\r\n  }\r\n  return btoa(c.join(''));\r\n};\r\n\r\nexport const base64ToUint8Array = (str: string) =>\r\n  new Uint8Array(\r\n    atob(str)\r\n      .split('')\r\n      .map((c) => c.charCodeAt(0)),\r\n  );\r\n\r\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (a.byteLength !== b.byteLength) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < a.byteLength; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getWorkerDataURL = (url: string) => {\r\n  const content = `importScripts(\"${url}\");`;\r\n  return 'data:text/javascript;base64,' + btoa(content);\r\n};\r\n\r\nexport const removeComments = (src: string) =>\r\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\r\n\r\nexport const removeStrings = (src: string) =>\r\n  src\r\n    .replace(/'[^\\n']*'/gm, \"''\")\r\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\r\n    .replace(/`[^`]*`/gm, '``');\r\n\r\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\r\n\r\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\r\n  ...(config.customSettings as any)[language],\r\n});\r\n\r\nexport const getValidUrl = (url?: string) => {\r\n  if (!url) return null;\r\n  let validUrl = null;\r\n  if (url.startsWith('http') || url.startsWith('data:')) {\r\n    try {\r\n      validUrl = new URL(url).href;\r\n    } catch {\r\n      try {\r\n        validUrl = new URL(decodeURIComponent(url)).href;\r\n      } catch {\r\n        //\r\n      }\r\n    }\r\n  }\r\n  return validUrl;\r\n};\r\n\r\nexport const runOrContinue =\r\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\r\n  async (x: T): Promise<T> => {\r\n    try {\r\n      const result = await fn(x);\r\n      return result;\r\n    } catch (error) {\r\n      if (typeof catchFn === 'function') {\r\n        catchFn(error);\r\n      }\r\n      return x;\r\n    }\r\n  };\r\n\r\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\r\n\r\nexport const isInIframe = () => {\r\n  try {\r\n    return window.self !== window.top;\r\n  } catch {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\r\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\r\n\r\nexport const hideOnClickOutside = (element: HTMLElement) => {\r\n  const hideElement = () => {\r\n    element.style.display = 'none';\r\n    removeListeners();\r\n    (window as any).watchingEscape = false;\r\n  };\r\n\r\n  const outsideClickListener = (event: MouseEvent) => {\r\n    if (!element.contains(event.target as Node) && isVisible(element)) {\r\n      hideElement();\r\n    }\r\n  };\r\n\r\n  const escapeListener = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      hideElement();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const isVisible = (elem: HTMLElement) =>\r\n    !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\r\n\r\n  const removeListeners = () => {\r\n    document.removeEventListener('click', outsideClickListener);\r\n    document.removeEventListener('keydown', escapeListener);\r\n  };\r\n\r\n  document.addEventListener('click', outsideClickListener);\r\n  document.addEventListener('keydown', escapeListener);\r\n  (window as any).watchingEscape = true;\r\n\r\n  return {\r\n    clear: () => removeListeners(),\r\n  };\r\n};\r\n\r\nexport const callWorker = async <T = string, K = unknown>(\r\n  worker: Worker,\r\n  message: { method: T; args?: any },\r\n) =>\r\n  new Promise<K>((resolve) => {\r\n    const messageId = getRandomString();\r\n\r\n    const handler = (event: WorkerMessageEvent<T, K>) => {\r\n      const received = event.data;\r\n\r\n      if (received.method === message.method && received.messageId === messageId) {\r\n        worker.removeEventListener('message', handler);\r\n        resolve(received.data as K);\r\n      }\r\n    };\r\n    worker.addEventListener('message', handler);\r\n\r\n    worker.postMessage({\r\n      ...message,\r\n      messageId,\r\n    });\r\n  });\r\n\r\nexport const toCamelCase = (str: string) =>\r\n  str\r\n    .replace(/[-_.]+/g, ' ')\r\n    .trim()\r\n    .replace(/^([A-Z])|\\s+(\\w)/g, function (_match, p1, p2) {\r\n      if (p2) return p2.toUpperCase();\r\n      return p1.toLowerCase();\r\n    });\r\n\r\nexport const removeDuplicates = (arr: any[] | undefined) => Array.from(new Set(arr));\r\n", "import type { CDN } from '../models';\r\n\r\ndeclare const globalThis: { appCDN: CDN };\r\n\r\nconst moduleCDNs: CDN[] = ['jspm', 'skypack'];\r\nconst npmCDNs: CDN[] = ['unpkg', 'jsdelivr'];\r\nconst ghCDNs: CDN[] = ['jsdelivr.gh', 'statically'];\r\n\r\nexport const modulesService = {\r\n  getModuleUrl: (\r\n    moduleName: string,\r\n    { isModule = true, defaultCDN = 'jspm' }: { isModule?: boolean; defaultCDN?: CDN } = {},\r\n  ) => {\r\n    moduleName = moduleName.replace(/#nobundle/g, '');\r\n\r\n    const moduleUrl = getCdnUrl(moduleName, isModule, defaultCDN);\r\n    if (moduleUrl) {\r\n      return moduleUrl;\r\n    }\r\n\r\n    return isModule\r\n      ? 'https://jspm.dev/' + moduleName\r\n      : 'https://cdn.jsdelivr.net/npm/' + moduleName;\r\n  },\r\n\r\n  getUrl: (path: string, cdn?: CDN) =>\r\n    path.startsWith('http') ? path : getCdnUrl(path, false, cdn || getAppCDN()) || path,\r\n\r\n  cdnLists: { npm: npmCDNs, module: moduleCDNs, gh: ghCDNs },\r\n\r\n  checkCDNs: async (testModule: string, preferredCDN?: CDN) => {\r\n    const cdns: CDN[] = [preferredCDN, ...modulesService.cdnLists.npm].filter(Boolean) as CDN[];\r\n    for (const cdn of cdns) {\r\n      try {\r\n        const res = await fetch(modulesService.getUrl(testModule, cdn), {\r\n          method: 'HEAD',\r\n        });\r\n        if (res.ok) return cdn;\r\n      } catch {\r\n        // continue;\r\n      }\r\n    }\r\n    // fall back to first\r\n    return modulesService.cdnLists.npm[0];\r\n  },\r\n};\r\n\r\nexport const getAppCDN = (): CDN => {\r\n  if (globalThis.appCDN) return globalThis.appCDN;\r\n  try {\r\n    const url = new URL(location.href);\r\n    return (url.searchParams.get('appCDN') as CDN) || modulesService.cdnLists.npm[0];\r\n  } catch {\r\n    return modulesService.cdnLists.npm[0] as CDN;\r\n  }\r\n};\r\n\r\nconst getCdnUrl = (modName: string, isModule: boolean, defaultCDN?: CDN) => {\r\n  const post = isModule && modName.startsWith('unpkg:') ? '?module' : '';\r\n  if (modName.startsWith('gh:')) {\r\n    modName = modName.replace('gh', ghCDNs[0]);\r\n  } else if (!modName.includes(':')) {\r\n    const prefix = defaultCDN || (isModule ? moduleCDNs[0] : npmCDNs[0]);\r\n    modName = prefix + ':' + modName;\r\n  }\r\n  for (const i of TEMPLATES) {\r\n    const [pattern, template] = i;\r\n    if (pattern.test(modName)) {\r\n      return modName.replace(pattern, template) + post;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// based on https://github.com/neoascetic/rawgithack/blob/master/web/rawgithack.js\r\nconst TEMPLATES: Array<[RegExp, string]> = [\r\n  [/^(jspm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(npm:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(node:)(.+)/i, 'https://jspm.dev/$2'],\r\n\r\n  [/^(skypack:)(.+)/i, 'https://cdn.skypack.dev/$2'],\r\n\r\n  [/^(jsdelivr:)(.+)/i, 'https://cdn.jsdelivr.net/npm/$2'],\r\n\r\n  [/^(jsdelivr.gh:)(.+)/i, 'https://cdn.jsdelivr.net/gh/$2'],\r\n\r\n  [/^(statically:)(.+)/i, 'https://cdn.statically.io/gh/$2'],\r\n\r\n  [/^(esm.run:)(.+)/i, 'https://esm.run/$2'],\r\n\r\n  [/^(esm.sh:)(.+)/i, 'https://esm.sh/$2'],\r\n\r\n  [/^(esbuild:)(.+)/i, 'https://esbuild.vercel.app/$2'],\r\n\r\n  [/^(bundle.run:)(.+)/i, 'https://bundle.run/$2'],\r\n\r\n  [/^(unpkg:)(.+)/i, 'https://unpkg.com/$2'],\r\n\r\n  [/^(bundlejs:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(bundle:)(.+)/i, 'https://deno.bundlejs.com/?file&q=$2'],\r\n\r\n  [/^(deno:)(.+)/i, 'https://deno.bundlejs.com/?file&q=https://deno.land/x/$2/mod.ts'],\r\n\r\n  [/^(https:\\/\\/deno\\.land\\/.+)/i, 'https://deno.bundlejs.com/?file&q=$1'],\r\n\r\n  [\r\n    /^(github:|https:\\/\\/github\\.com\\/)(.[^\\/]+?)\\/(.[^\\/]+?)\\/(?!releases\\/)(?:(?:blob|raw)\\/)?(.+?\\/.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://cdn.jsdelivr.net/gh/$2/$3@$4',\r\n  ],\r\n\r\n  [/^(gist\\.github:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n\r\n  [\r\n    /^(gitlab:|https:\\/\\/gitlab\\.com\\/)([^\\/]+.*\\/[^\\/]+)\\/(?:raw|blob)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://gl.githack.com/$2/raw/$3',\r\n  ],\r\n  [\r\n    /^(bitbucket:|https:\\/\\/bitbucket\\.org\\/)([^\\/]+\\/[^\\/]+)\\/(?:raw|src)\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://deno.bundlejs.com/?file&q=https://bb.githack.com/$2/raw/$3',\r\n  ],\r\n\r\n  // snippet file URL from web interface, with revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/]+)\\/revisions\\/([^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4',\r\n  ],\r\n  // snippet file URL from web interface, no revision\r\n  [\r\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3',\r\n  ],\r\n  // snippet file URLs from REST API\r\n  [\r\n    /^(bitbucket:)\\!api\\/2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n  [\r\n    /^(api\\.bitbucket:)2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\r\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\r\n  ],\r\n\r\n  [/^(rawgit:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\r\n  [\r\n    /^(rawgit:|https:\\/\\/raw\\.githubusercontent\\.com)(\\/[^\\/]+\\/[^\\/]+|[0-9A-Za-z-]+\\/[0-9a-f]+\\/raw)\\/(.+)/i,\r\n    'https://deno.bundlejs.com/?file&q=https://raw.githack.com/$2/$3',\r\n  ],\r\n];\r\n", "// eslint-disable-next-line import/no-internal-modules\r\nimport { modulesService } from './services/modules';\r\n\r\nconst { getUrl, getModuleUrl } = modulesService;\r\n\r\nexport const vendorsBaseUrl = // 'http://127.0.0.1:8081/';\r\n  /* @__PURE__ */ getUrl('@live-codes/browser-compilers@0.7.4/dist/');\r\n\r\nexport const acornUrl = /* @__PURE__ */ getUrl('acorn@8.8.2/dist/acorn.js');\r\n\r\nexport const artTemplateUrl = /* @__PURE__ */ getUrl('art-template@4.13.2/lib/template-web.js');\r\n\r\nexport const asciidocUrl = /* @__PURE__ */ getUrl(\r\n  '@asciidoctor/core@2.2.6/dist/browser/asciidoctor.js',\r\n);\r\n\r\nexport const assemblyscriptLoaderUrl = /* @__PURE__ */ getUrl(\r\n  '@assemblyscript/loader@0.27.5/umd/index.js',\r\n);\r\n\r\nexport const astringUrl = /* @__PURE__ */ getUrl('astring@1.8.1/dist/astring.min.js');\r\n\r\nexport const astroBaseUrl = /* @__PURE__ */ getUrl('@hatemhosny/astro-internal@0.0.4/');\r\n\r\nexport const astroWasmURL = /* @__PURE__ */ getUrl('@astrojs/compiler@0.9.2/astro.wasm');\r\n\r\nexport const autoCompleteUrl = /* @__PURE__ */ getUrl(\r\n  '@tarekraafat/autocomplete.js@10.2.6/dist/autoComplete.js',\r\n);\r\n\r\nexport const babelUrl = /* @__PURE__ */ getUrl('@babel/standalone@7.22.4/babel.js');\r\n\r\nexport const biwaschemeUrl = /* @__PURE__ */ getUrl('biwascheme@0.8.0/release/biwascheme.js');\r\n\r\nexport const blocklyCdnBaseUrl = /* @__PURE__ */ getUrl('blockly@9.3.3/');\r\n\r\nexport const brythonBaseUrl = /* @__PURE__ */ getUrl('brython@3.11.2/');\r\n\r\nexport const chaiUrl = /* @__PURE__ */ getModuleUrl('chai@4.3.6');\r\n\r\nexport const chaiTypesUrl = /* @__PURE__ */ getUrl('@types/chai@4.2.22/index.d.ts');\r\n\r\nexport const cherryCljsBaseUrl = /* @__PURE__ */ getUrl('cherry-cljs@0.0.4/');\r\n\r\nexport const cjs2esUrl = /* @__PURE__ */ getUrl('cjs2es@1.1.1/dist/cjs2es.browser.js');\r\n\r\nexport const clioBaseUrl = /* @__PURE__ */ getUrl(\r\n  '@live-codes/clio-browser-compiler@0.0.3/public/build/',\r\n);\r\n\r\nexport const coffeeScriptUrl = /* @__PURE__ */ getUrl(\r\n  'coffeescript@2.7.0/lib/coffeescript-browser-compiler-legacy/coffeescript.js',\r\n);\r\n\r\nexport const cppWasmBaseUrl = /* @__PURE__ */ getUrl('@chriskoch/cpp-wasm@1.0.2');\r\n\r\nexport const csstreeUrl = /* @__PURE__ */ getUrl('css-tree@1.1.3/dist/csstree.js');\r\n\r\nexport const cytoscapeSvgUrl = /* @__PURE__ */ getUrl('cytoscape-svg@0.4.0/cytoscape-svg.js');\r\n\r\nexport const cytoscapeUrl = /* @__PURE__ */ getUrl('cytoscape@3.25.0/dist/cytoscape.min.js');\r\n\r\nexport const dotUrl = /* @__PURE__ */ getUrl('dot@1.1.3/doT.js');\r\n\r\nexport const ejsUrl = /* @__PURE__ */ getUrl('ejs@3.1.9/ejs.js');\r\n\r\nexport const elkjsBaseUrl = /* @__PURE__ */ getUrl('elkjs@0.8.2/lib/');\r\n\r\nexport const emmetMonacoUrl = /* @__PURE__ */ getUrl('emmet-monaco-es@5.0.0/dist/emmet-monaco.js');\r\n\r\nexport const esModuleShimsPath = 'es-module-shims@1.4.4/dist/es-module-shims.js';\r\n\r\nexport const etaUrl = /* @__PURE__ */ getUrl('eta@2.2.0/dist/eta.umd.js');\r\n\r\nexport const flexSearchUrl = /* @__PURE__ */ getUrl('flexsearch@0.7.21/dist/flexsearch.bundle.js');\r\n\r\nexport const fontAnonymousProUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/anonymous-pro@4.5.9/index.css',\r\n);\r\n\r\nexport const fontCascadiaCodeUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/cascadia-code@4.2.1/index.css',\r\n);\r\n\r\nexport const fontCodeNewRomanUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/code-new-roman-2',\r\n);\r\n\r\nexport const fontComicMonoUrl = /* @__PURE__ */ getUrl('comic-mono@0.0.1/index.css');\r\n\r\nexport const fontCourierPrimeUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/courier-prime@4.5.9/index.css',\r\n);\r\n\r\nexport const fontDECTerminalModernUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/dec-terminal-modern',\r\n);\r\n\r\nexport const fontDejaVuMonoUrl = /* @__PURE__ */ getUrl('@fontsource/dejavu-mono@4.5.4/index.css');\r\n\r\nexport const fontFantasqueUrl = /* @__PURE__ */ getUrl(\r\n  '@typopro/web-fantasque-sans-mono@3.7.5/TypoPRO-FantasqueSansMono.css',\r\n);\r\n\r\nexport const fontFiraCodeUrl = /* @__PURE__ */ getUrl('firacode@6.2.0/distr/fira_code.css');\r\n\r\nexport const fontFixedsysUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/fixedsys-62');\r\n\r\nexport const fontHackUrl = /* @__PURE__ */ getUrl('hack-font@3.3.0/build/web/hack.css');\r\n\r\nexport const fontHermitUrl = /* @__PURE__ */ getUrl('typeface-hermit@0.0.44/index.css');\r\n\r\nexport const fontIBMPlexMonoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap',\r\n);\r\n\r\nexport const fontInconsolataUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Inconsolata&display=swap',\r\n);\r\n\r\nexport const fontIosevkaUrl = /* @__PURE__ */ getUrl('@fontsource/iosevka@4.5.4/index.css');\r\n\r\nexport const fontJetbrainsMonoUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/jetbrains-mono@4.5.11/index.css',\r\n);\r\n\r\nexport const fontMenloUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/menlo');\r\n\r\nexport const fontMonofurUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/monofur');\r\n\r\nexport const fontMonoidUrl = /* @__PURE__ */ getUrl('@typopro/web-monoid@3.7.5/TypoPRO-Monoid.css');\r\n\r\nexport const fontNotoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Noto+Sans+Mono&display=swap',\r\n);\r\n\r\nexport const fontNovaMonoUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.googleapis.com/css2?family=Nova+Mono&display=swap',\r\n);\r\n\r\nexport const fontOpenDyslexicUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/opendyslexic@4.5.4/index.css',\r\n);\r\n\r\nexport const fontProFontWindowsUrl = /* @__PURE__ */ getUrl(\r\n  'https://fonts.cdnfonts.com/css/profontwindows',\r\n);\r\n\r\nexport const fontRobotoMonoUrl = /* @__PURE__ */ getUrl('@fontsource/roboto-mono@4.5.8/index.css');\r\n\r\nexport const fontSFMonoUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/sf-mono');\r\n\r\nexport const fontSourceCodeProUrl = /* @__PURE__ */ getUrl(\r\n  '@fontsource/source-code-pro@4.5.12/index.css',\r\n);\r\n\r\nexport const fontSpaceMonoUrl = /* @__PURE__ */ getUrl('@fontsource/space-mono@4.5.10/index.css');\r\n\r\nexport const fontSudoVarUrl = /* @__PURE__ */ getUrl('https://fonts.cdnfonts.com/css/sudo-var');\r\n\r\nexport const fontUbuntuMonoUrl = /* @__PURE__ */ getUrl('@fontsource/ubuntu-mono@4.5.11/index.css');\r\n\r\nexport const fontVictorMonoUrl = /* @__PURE__ */ getUrl('victormono@1.5.4/dist/index.css');\r\n\r\nexport const fscreenUrl = /* @__PURE__ */ getUrl('fscreen@1.2.0/dist/fscreen.esm.js');\r\n\r\nexport const githubMarkdownCss = /* @__PURE__ */ getUrl(\r\n  'github-markdown-css@5.1.0/github-markdown.css',\r\n);\r\n\r\nexport const go2jsBaseUrl = /* @__PURE__ */ getUrl('@live-codes/go2js@0.4.0/build/');\r\n\r\nexport const graphreCdnUrl = /* @__PURE__ */ getUrl('graphre@0.1.3/dist/graphre.js');\r\n\r\nexport const handlebarsBaseUrl = /* @__PURE__ */ getUrl('handlebars@4.7.7/dist/');\r\n\r\nexport const highlightjsUrl = /* @__PURE__ */ getModuleUrl('highlight.js@11.5.1');\r\n\r\nexport const hintCssUrl = /* @__PURE__ */ getUrl('hint.css@2.7.0/hint.css');\r\n\r\nexport const hpccJsCdnUrl = /* @__PURE__ */ getUrl('@hpcc-js/wasm@2.13.0/dist/index.js');\r\n\r\nexport const imbaBaseUrl = /* @__PURE__ */ getUrl('imba@2.0.0-alpha.229/dist/');\r\n\r\nexport const jestLiteUrl = /* @__PURE__ */ getUrl('jest-lite@1.0.0-alpha.4/dist/core.js');\r\n\r\nexport const jestTypesUrl = /* @__PURE__ */ getUrl('@types/jest@27.4.1/index.d.ts');\r\n\r\nexport const jsclUrl = /* @__PURE__ */ getUrl(\r\n  'gh:jscl-project/jscl-project.github.io@efd3aecdba496d132ed650b7b5be976fd0ca278f/jscl.js',\r\n);\r\n\r\nexport const jsZipUrl = /* @__PURE__ */ getUrl('jszip@3.10.1/dist/jszip.js');\r\n\r\nexport const juliaWasmBaseUrl = /* @__PURE__ */ getUrl('@chriskoch/julia-wasm@1.0.4');\r\n\r\nexport const liquidJsUrl = /* @__PURE__ */ getUrl('liquidjs@10.8.2/dist/liquid.browser.min.js');\r\n\r\nexport const localforageUrl = /* @__PURE__ */ getUrl('localforage@1.10.0/dist/localforage.js');\r\n\r\nexport const luaUrl = /* @__PURE__ */ getUrl('fengari-web@0.1.4/dist/fengari-web.js');\r\n\r\nexport const lunaObjViewerStylesUrl = /* @__PURE__ */ getUrl(\r\n  'luna-object-viewer@0.2.0/luna-object-viewer.css',\r\n);\r\n\r\nexport const lunaConsoleStylesUrl = /* @__PURE__ */ getUrl('luna-console@0.2.1/luna-console.css');\r\n\r\nexport const malinaVersion = '0.6.64';\r\nexport const malinaUrl = /* @__PURE__ */ getUrl(`malinajs@${malinaVersion}/malina.js`);\r\n\r\nexport const markedUrl = /* @__PURE__ */ getUrl('marked@5.0.4/marked.min.js');\r\n\r\nexport const mermaidCdnUrl = /* @__PURE__ */ getUrl('mermaid@10.2.2/dist/mermaid.esm.mjs');\r\n\r\nexport const mjmlUrl = /* @__PURE__ */ getUrl('mjml-browser@4.14.1/lib/index.js');\r\n\r\nexport const monacoEmacsUrl = /* @__PURE__ */ getUrl('monaco-emacs@0.3.0/dist/monaco-emacs.js');\r\n\r\nexport const monacoVimUrl = /* @__PURE__ */ getUrl('monaco-vim@0.4.0/dist/monaco-vim.js');\r\n\r\nexport const mustacheUrl = /* @__PURE__ */ getUrl('mustache@4.2.0/mustache.js');\r\n\r\nexport const nomnomlCdnUrl = /* @__PURE__ */ getUrl('nomnoml@1.6.1/dist/nomnoml.js');\r\n\r\nexport const normalizeCssUrl = /* @__PURE__ */ getUrl('normalize.css@8.0.1/normalize.css');\r\n\r\nexport const nunjucksBaseUrl = /* @__PURE__ */ getUrl('nunjucks@3.2.4/browser/');\r\n\r\nexport const opalBaseUrl = /* @__PURE__ */ getUrl('https://cdn.opalrb.com/opal/1.7.3/');\r\n\r\nexport const parinferUrl = /* @__PURE__ */ getUrl('parinfer@3.13.1/parinfer.js');\r\n\r\nexport const pintoraUrl = /* @__PURE__ */ getUrl(\r\n  '@pintora/standalone@0.6.2/lib/pintora-standalone.umd.js',\r\n);\r\n\r\nexport const plotlyCdnUrl = /* @__PURE__ */ getUrl('plotly.js@2.23.2/dist/plotly.js');\r\n\r\nexport const postcssImportUrlUrl = /* @__PURE__ */ getUrl(\r\n  '@live-codes/postcss-import-url@0.1.2/dist/postcss-import-url.js',\r\n);\r\n\r\nexport const prettierBaseUrl = /* @__PURE__ */ getUrl('prettier@2.5.1/');\r\n\r\nexport const prettierPhpUrl = /* @__PURE__ */ getUrl('@prettier/plugin-php@0.18.0/standalone.js');\r\n\r\nexport const prismBaseUrl = /* @__PURE__ */ getUrl('prismjs@1.26.0/components/');\r\n\r\nexport const pyodideBaseUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.jsdelivr.net/pyodide/v0.23.2/full/',\r\n);\r\n\r\nexport const qrcodeUrl = /* @__PURE__ */ getUrl('qrcode-generator@1.4.4/qrcode.js');\r\n\r\nexport const quillEditorCdnBaseUrl = /* @__PURE__ */ getUrl('quill@2.0.0-dev.4/dist/');\r\n\r\nexport const quillHtmlEditUrl = /* @__PURE__ */ getUrl(\r\n  'quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js',\r\n);\r\n\r\nexport const quillBlotFormaterUrl = /* @__PURE__ */ getUrl(\r\n  'quill-blot-formatter@1.0.5/dist/quill-blot-formatter.min.js',\r\n);\r\n\r\nexport const quillBetterTableBaseUrl = /* @__PURE__ */ getUrl('quill-better-table@1.2.10/dist/');\r\n\r\nexport const requireUrl = /* @__PURE__ */ getUrl('requirejs@2.3.6/require.js');\r\n\r\nexport const reasonCompilerUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v9.1.2/compiler.js',\r\n);\r\n\r\nexport const reasonReactUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v9.1.2/%40rescript/react/cmij.js',\r\n);\r\n\r\nexport const reasonStdLibBaseUrl = /* @__PURE__ */ getUrl('@rescript/std@9.1.3/lib/es6/');\r\n\r\nexport const rescriptCompilerUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v10.1.2/compiler.js',\r\n);\r\n\r\nexport const rescriptReactUrl = /* @__PURE__ */ getUrl(\r\n  'https://cdn.rescript-lang.org/v10.1.2/%40rescript/react/cmij.js',\r\n);\r\n\r\nexport const rescriptStdLibBaseUrl = /* @__PURE__ */ getUrl('@rescript/std@10.1.2/lib/es6/');\r\n\r\nexport const resetCssUrl = /* @__PURE__ */ getUrl('reset-css@5.0.1/reset.css');\r\n\r\nexport const riotBaseUrl = /* @__PURE__ */ getUrl('riot@7.1.0/');\r\n\r\nexport const snackbarUrl = /* @__PURE__ */ getUrl('@snackbar/core@1.7.0/dist/snackbar.css');\r\n\r\nexport const spacingJsUrl = /* @__PURE__ */ getUrl('spacingjs@1.0.7/dist/bundle.js');\r\n\r\nexport const sqlFormatterUrl = /* @__PURE__ */ getUrl(\r\n  'sql-formatter@12.2.1/dist/sql-formatter.min.js',\r\n);\r\n\r\nexport const sqljsBaseUrl = /* @__PURE__ */ getUrl('sql.js@1.8.0/dist/');\r\n\r\nexport const stencilUrl = /* @__PURE__ */ getUrl('@stencil/core@3.2.2/compiler/stencil.js');\r\n\r\nexport const stylisUrl = /* @__PURE__ */ getUrl('stylis@4.2.0/dist/umd/stylis.js');\r\n\r\nexport const svgbobWasmCdnUrl = /* @__PURE__ */ getUrl('svgbob-wasm@0.4.1-a0/svgbob_wasm_bg.wasm');\r\n\r\nexport const tagifyBaseUrl = /* @__PURE__ */ getUrl('@yaireo/tagify@4.9.6/dist/');\r\n\r\nexport const tailwindcssUrl = /* @__PURE__ */ getUrl(\r\n  '@mhsdesign/jit-browser-tailwindcss@0.3.0/dist/cdn.min.js',\r\n);\r\n\r\nexport const tauPrologBaseUrl = /* @__PURE__ */ getUrl('tau-prolog@0.3.4/modules/');\r\n\r\nexport const tealUrl = /* @__PURE__ */ getUrl(\r\n  'gh:teal-language/tl@d2fc36b5ff9a52d7265e63eb74cce70fd1cdbcb2/tl.lua',\r\n);\r\n\r\nexport const twigUrl = /* @__PURE__ */ getUrl('twig@1.16.0/twig.min.js');\r\n\r\nexport const typescriptUrl = /* @__PURE__ */ getUrl('typescript@5.1.3/lib/typescript.js');\r\n\r\nexport const uniterUrl = /* @__PURE__ */ getUrl('uniter@2.18.0/dist/uniter.js');\r\n\r\nexport const vegaCdnUrl = /* @__PURE__ */ getUrl('vega@5.25.0/build/vega.js');\r\n\r\nexport const vegaLiteCdnUrl = /* @__PURE__ */ getUrl('vega-lite@5.9.3/build/vega-lite.js');\r\n\r\nexport const vue3CdnUrl = /* @__PURE__ */ getUrl('vue@3');\r\n\r\nexport const vue2CdnUrl = /* @__PURE__ */ getUrl('vue@2');\r\n\r\nexport const vueSfcLoaderCdnBaseUrl = /* @__PURE__ */ getUrl('vue3-sfc-loader@0.8.4/dist/');\r\n\r\nexport const wabtjsUrl = /* @__PURE__ */ getUrl('wabt@1.0.32/index.js');\r\n\r\nexport const waveDromBaseUrl = /* @__PURE__ */ getUrl('wavedrom@3.2.0/');\r\n\r\nexport const webRBaseUrl = /* @__PURE__ */ getUrl('@r-wasm/webr@0.1.1/dist/');\r\n", "export const getToolbarElement = () => document.querySelector('#toolbar') as HTMLElement;\r\nexport const getProjectTitleElement = () => document.querySelector('#project-title') as HTMLElement;\r\nexport const getEditorContainerElement = () =>\r\n  document.querySelector('#editor-container') as HTMLElement;\r\nexport const getEditorsElement = () => document.querySelector('#editors') as HTMLElement;\r\nexport const getMarkupElement = () => document.querySelector('#markup') as HTMLElement;\r\nexport const getStyleElement = () => document.querySelector('#style') as HTMLElement;\r\nexport const getScriptElement = () => document.querySelector('#script') as HTMLElement;\r\nexport const getOutputElement = () => document.querySelector('#output') as HTMLElement;\r\nexport const getResultElement = () => document.querySelector('#result') as HTMLElement;\r\nexport const getResultIFrameElement = () =>\r\n  document.querySelector('#result > iframe') as HTMLIFrameElement;\r\nexport const getGutterElement = () =>\r\n  document.querySelector('#editor-container .gutter') as HTMLElement;\r\nexport const getLogoLink = () => document.querySelector('#logo a') as HTMLAnchorElement;\r\nexport const getRunButton = () => document.querySelector('#run-button') as HTMLElement;\r\nexport const getCodeRunButton = () => document.querySelector('#code-run-button') as HTMLElement;\r\nexport const getEditorToolbar = () => document.querySelector('#editor-tools') as HTMLElement;\r\nexport const getCopyButton = () => document.querySelector('#editor-tools #copy-btn') as HTMLElement;\r\nexport const getUndoButton = () => document.querySelector('#editor-tools #undo-btn') as HTMLElement;\r\nexport const getRedoButton = () => document.querySelector('#editor-tools #redo-btn') as HTMLElement;\r\nexport const getFormatButton = () =>\r\n  document.querySelector('#editor-tools #format-btn') as HTMLElement;\r\nexport const getEditorModeNode = () => document.querySelector<HTMLElement>('#editor-mode');\r\nexport const getEditorStatus = () =>\r\n  document.querySelector('#editor-tools #editor-status') as HTMLElement;\r\nexport const getExternalResourcesBtn = () =>\r\n  document.querySelector('#editor-tools #external-resources-btn') as HTMLElement;\r\nexport const getExternalResourcesMark = () =>\r\n  document.querySelector('#editor-tools #external-resources-mark') as HTMLElement;\r\nexport const getResultButton = () => document.querySelector('#result-button') as HTMLElement;\r\nexport const getFullscreenButton = () =>\r\n  document.querySelector('#fullscreen-button') as HTMLElement;\r\nexport const getEditorTitles = () =>\r\n  document.querySelectorAll<HTMLElement>('.editor-title:not(.hidden)');\r\nexport const getEditorDivs = () => document.querySelectorAll<HTMLElement>('#editors > .editor');\r\nexport const getToolspaneElement = () =>\r\n  document.querySelector('#output #tools-pane') as HTMLElement;\r\nexport const getToolspaneBar = () =>\r\n  document.querySelector('#output #tools-pane-bar') as HTMLElement;\r\nexport const getToolspaneButtons = () =>\r\n  document.querySelector('#tools-pane-buttons') as HTMLElement;\r\nexport const getToolspaneTitles = () => document.querySelector<HTMLElement>('#tools-pane-titles');\r\nexport const getToolspaneLoader = () => document.querySelector<HTMLElement>('#tools-pane-loading');\r\nexport const getZoomButtonValue = () =>\r\n  document.querySelector<HTMLElement>('#zoom-button #zoom-value');\r\nexport const getModalSaveButton = () =>\r\n  document.querySelector('#modal #prompt-save-btn') as HTMLElement;\r\nexport const getModalDoNotSaveButton = () =>\r\n  document.querySelector('#modal #prompt-donot-save-btn') as HTMLElement;\r\nexport const getModalCancelButton = () =>\r\n  document.querySelector('#modal #prompt-cancel-btn') as HTMLElement;\r\n\r\nexport const getModalRecoverButton = () =>\r\n  document.querySelector('#modal #prompt-recover-btn') as HTMLElement;\r\nexport const getModalSavePreviousButton = () =>\r\n  document.querySelector('#modal #prompt-save-previous-btn') as HTMLElement;\r\nexport const getModalCancelRecoverButton = () =>\r\n  document.querySelector('#modal #prompt-cancel-recover-btn') as HTMLElement;\r\nexport const getModalUnsavedName = () =>\r\n  document.querySelector('#modal #unsaved-project-name') as HTMLElement;\r\nexport const getModalUnsavedLastModified = () =>\r\n  document.querySelector('#modal #unsaved-project-last-modified') as HTMLElement;\r\nexport const getModalDisableRecoverCheckbox = () =>\r\n  document.querySelector('#modal #disable-recover-checkbox') as HTMLInputElement;\r\n\r\nexport const getLanguageMenuLinks = () =>\r\n  document.querySelectorAll<HTMLElement>('#select-editor .language-item a');\r\n\r\nexport const getLanguageMenuButtons = () =>\r\n  document.querySelectorAll<HTMLElement>('#select-editor .language-menu-button');\r\n\r\nexport const getstyleMenu = () =>\r\n  document.querySelector<HTMLElement>('#style-selector .dropdown-menu');\r\n\r\nexport const getSettingToggles = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#settings-menu input');\r\n\r\nexport const getCssPresetLinks = () =>\r\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\r\n\r\nexport const getSettingsMenuScroller = () =>\r\n  document.querySelector<HTMLElement>('#settings-menu-container');\r\nexport const getSettingsButton = () => document.querySelector<HTMLElement>('#settings-button');\r\n\r\nexport const getExportJSONLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-json');\r\n\r\nexport const getExportResultLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-result');\r\n\r\nexport const getExportSourceLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-src');\r\n\r\nexport const getExportGithubGistLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-githubGist');\r\n\r\nexport const getExportCodepenLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-codepen');\r\n\r\nexport const getExportJsfiddleLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-jsfiddle');\r\n\r\nexport const getLoginLink = () => document.querySelector<HTMLAnchorElement>('#login-link');\r\n\r\nexport const getLogoutLink = () => document.querySelector<HTMLAnchorElement>('#logout-link');\r\n\r\nexport const getNewLink = () => document.querySelector<HTMLAnchorElement>('#new-link');\r\n\r\nexport const getOpenLink = () => document.querySelector<HTMLAnchorElement>('#open-link');\r\n\r\nexport const getSaveLink = () => document.querySelector<HTMLAnchorElement>('#save-link');\r\n\r\nexport const getForkLink = () => document.querySelector<HTMLAnchorElement>('#fork-link');\r\n\r\nexport const getSaveAsTemplateLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#template-link');\r\n\r\nexport const getExternalResourcesLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#external-resources-link');\r\n\r\nexport const getCustomSettingsLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#custom-settings-link');\r\n\r\nexport const getShareLink = () => document.querySelector<HTMLAnchorElement>('#share-link');\r\n\r\nexport const getEmbedLink = () => document.querySelector<HTMLAnchorElement>('#embed-link');\r\n\r\nexport const getEditorSettingsLink = () =>\r\n  document.querySelector<HTMLAnchorElement>('#editor-settings-link');\r\n\r\nexport const getDeployLink = () => document.querySelector<HTMLAnchorElement>('#deploy-link');\r\n\r\nexport const getSyncLink = () => document.querySelector<HTMLAnchorElement>('#sync-link');\r\n\r\nexport const getSyncIndicator = () => document.querySelector<HTMLAnchorElement>('#sync-indicator');\r\n\r\nexport const getImportLink = () => document.querySelector<HTMLAnchorElement>('#import-link');\r\n\r\nexport const getBackupLink = () => document.querySelector<HTMLAnchorElement>('#backup-link');\r\n\r\nexport const getBroadcastLink = () => document.querySelector<HTMLAnchorElement>('#broadcast-link');\r\n\r\nexport const getWelcomeLink = () => document.querySelector<HTMLAnchorElement>('#welcome-link');\r\n\r\nexport const getAboutLink = () => document.querySelector<HTMLAnchorElement>('#about-link');\r\n\r\nexport const getAutoupdateToggle = () =>\r\n  document.querySelector('#settings-menu input#autoupdate') as HTMLInputElement;\r\n\r\nexport const getDelayValue = () =>\r\n  document.querySelector('#settings-menu #delay-value') as HTMLElement;\r\n\r\nexport const getDelayRange = () =>\r\n  document.querySelector('#settings-menu input#delay-range') as HTMLInputElement;\r\n\r\nexport const getAutosaveToggle = () =>\r\n  document.querySelector('#settings-menu input#autosave') as HTMLInputElement;\r\n\r\nexport const getAutosyncToggle = () =>\r\n  document.querySelector('#settings-menu input#autosync') as HTMLInputElement;\r\n\r\nexport const getFormatOnsaveToggle = () =>\r\n  document.querySelector('#settings-menu input#formatOnsave') as HTMLInputElement;\r\n\r\nexport const getProcessorToggles = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#style-selector input');\r\n\r\nexport const getEmmetToggle = () =>\r\n  document.querySelector('#settings-menu input#emmet') as HTMLInputElement;\r\n\r\nexport const getThemeToggle = () =>\r\n  document.querySelector('#settings-menu input#theme') as HTMLInputElement;\r\n\r\nexport const getShowWelcomeToggle = () =>\r\n  document.querySelector('#settings-menu input#welcome') as HTMLInputElement;\r\n\r\nexport const getRecoverToggle = () =>\r\n  document.querySelector('#settings-menu input#recover-unsaved') as HTMLInputElement;\r\n\r\nexport const getSpacingToggle = () =>\r\n  document.querySelector('#settings-menu input#show-spacing') as HTMLInputElement;\r\n\r\nexport const getCSSPresetLinks = () =>\r\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\r\n\r\nexport const getProjectInfoLink = () =>\r\n  document.querySelector('#settings-menu #info-link') as HTMLInputElement;\r\n\r\nexport const getAssetsLink = () =>\r\n  document.querySelector('#settings-menu #assets-link') as HTMLInputElement;\r\n\r\nexport const getSnippetsLink = () =>\r\n  document.querySelector('#settings-menu #snippets-link') as HTMLInputElement;\r\n\r\nexport const getInfoTitleInput = () =>\r\n  document.querySelector('#info-container input#title-input') as HTMLInputElement;\r\n\r\nexport const getInfoDescription = () =>\r\n  document.querySelector('#info-container #description-textarea') as HTMLTextAreaElement;\r\n\r\nexport const getInfoTagsInput = () =>\r\n  document.querySelector('#info-container input#tags-input') as HTMLInputElement;\r\n\r\nexport const getSaveInfoButton = () =>\r\n  document.querySelector<HTMLElement>('#info-container #info-save-btn');\r\n\r\nexport const getExternalResourcesTextareas = () =>\r\n  document.querySelectorAll<HTMLTextAreaElement>('#resources-container textarea');\r\n\r\nexport const getExternalResourcesCssPresetInputs = () =>\r\n  document.querySelectorAll<HTMLInputElement>('#resources-container input[type=\"radio\"]');\r\n\r\nexport const getLoadResourcesButton = () =>\r\n  document.querySelector<HTMLElement>('#resources-container #resources-load-btn');\r\n\r\nexport const getCustomSettingsEditor = () =>\r\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-editor');\r\n\r\nexport const getLoadCustomSettingsButton = () =>\r\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-load-btn');\r\n\r\nexport const getTestEditor = () =>\r\n  document.querySelector<HTMLElement>('#test-editor-container #test-editor');\r\n\r\nexport const getLoadTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-editor-container #test-load-btn');\r\n\r\nexport const getEditTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #edit-tests-btn');\r\n\r\nexport const getRunTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #run-tests-btn');\r\n\r\nexport const getWatchTestsButton = () =>\r\n  document.querySelector<HTMLElement>('#test-container #watch-tests-btn');\r\n\r\nexport const getUrlImportForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector<HTMLFormElement>('#url-import-form');\r\nexport const getUrlImportButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#url-import-btn') as HTMLButtonElement;\r\nexport const getUrlImportInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#code-url') as HTMLInputElement;\r\nexport const getCodeImportInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#local-code-input') as HTMLInputElement;\r\n\r\nexport const getImportJsonUrlForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url-import-form') as HTMLInputElement;\r\nexport const getImportJsonUrlButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url-import-btn') as HTMLInputElement;\r\nexport const getImportJsonUrlInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#json-url') as HTMLInputElement;\r\n\r\nexport const getBulkImportJsonUrlForm = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url-import-form') as HTMLInputElement;\r\nexport const getBulkImportJsonUrlButton = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url-import-btn') as HTMLInputElement;\r\nexport const getBulkImportJsonUrlInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-json-url') as HTMLInputElement;\r\nexport const getLinkToSavedProjects = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#link-to-saved-projects') as HTMLAnchorElement;\r\n\r\nexport const getImportFileInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#file-input') as HTMLInputElement;\r\n\r\nexport const getImportFileInputLabel = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('.file-input-label') as HTMLInputElement;\r\n\r\nexport const getBulkImportFileInput = (importContainer: HTMLElement) =>\r\n  importContainer.querySelector('#bulk-file-input') as HTMLInputElement;\r\n\r\nexport const getNewRepoForm = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector<HTMLFormElement>('#new-repo-form');\r\nexport const getNewRepoButton = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-btn') as HTMLButtonElement;\r\nexport const getNewRepoNameInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-name') as HTMLInputElement;\r\nexport const getNewRepoNameError = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-name-error') as HTMLElement;\r\nexport const getNewRepoMessageInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-message') as HTMLInputElement;\r\nexport const getNewRepoCommitSource = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-source') as HTMLInputElement;\r\nexport const getNewRepoAutoSync = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#new-repo-autosync') as HTMLInputElement;\r\n\r\nexport const getExistingRepoForm = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector<HTMLFormElement>('#existing-repo-form');\r\nexport const getExistingRepoButton = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-btn') as HTMLButtonElement;\r\nexport const getExistingRepoNameInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-name') as HTMLInputElement;\r\nexport const getExistingRepoMessageInput = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-message') as HTMLInputElement;\r\nexport const getExistingRepoCommitSource = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-source') as HTMLInputElement;\r\nexport const getExistingRepoAutoSync = (deployContainer: HTMLElement) =>\r\n  deployContainer.querySelector('#existing-repo-autosync') as HTMLInputElement;\r\n\r\nexport const getStarterTemplatesTab = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector<HTMLElement>(\r\n    '#templates-tabs [data-target=\"templates-starter\"]',\r\n  );\r\nexport const getStarterTemplatesList = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector<HTMLElement>('#starter-templates-list');\r\nexport const getUserTemplatesScreen = (templatesContainer: HTMLElement) =>\r\n  templatesContainer.querySelector('#templates-user .modal-screen') as HTMLElement;\r\n\r\nexport const getBulkImportButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#bulk-import-button') as HTMLElement;\r\n\r\nexport const getExportAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#export-all-button') as HTMLElement;\r\n\r\nexport const getDeleteAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#delete-all-button') as HTMLElement;\r\n\r\nexport const getAddAssetButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-add-asset-button') as HTMLElement;\r\n\r\nexport const getAssetsDeleteAllButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-delete-all-button') as HTMLElement;\r\n\r\nexport const getAssetsButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#assets-button') as HTMLElement;\r\n\r\nexport const getAssetDataUrlFileInput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-data-url-file-input') as HTMLInputElement;\r\n\r\nexport const getAssetDataUrlOutput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#data-url-output') as HTMLElement;\r\n\r\nexport const getAssetGHPagesFileInput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input') as HTMLInputElement;\r\n\r\nexport const getAssetGHPagesFileInputLabel = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input-label') as HTMLElement;\r\n\r\nexport const getAssetGHPagesFileInputButton = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#asset-gh-pages-file-input-button') as HTMLElement;\r\n\r\nexport const getAssetGHPagesOutput = (listContainer: HTMLElement) =>\r\n  listContainer.querySelector('#gh-pages-output') as HTMLElement;\r\n\r\nexport const getSyncStatus = (syncContainer: HTMLElement | undefined) =>\r\n  (syncContainer || document).querySelector<HTMLElement>('#sync-status');\r\n\r\nexport const getStartSyncBtns = (syncContainer: HTMLElement | undefined) =>\r\n  (syncContainer || document).querySelectorAll<HTMLButtonElement>('.start-sync-btn');\r\n\r\nexport const getBackupForm = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelector('#backup-form') as HTMLFormElement;\r\n\r\nexport const getBackupBtn = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelector('#backup-btn') as HTMLButtonElement;\r\n\r\nexport const getBackupCheckedInputs = (backupContainer: HTMLElement) =>\r\n  backupContainer.querySelectorAll<HTMLInputElement>('#backup input[type=\"checkbox\"]:checked');\r\n\r\nexport const getAddSnippetButton = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-add-snippet-button') as HTMLElement;\r\n\r\nexport const getSnippetsDeleteAllButton = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-delete-all-button') as HTMLElement;\r\n\r\nexport const getSnippetLanguageSelect = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#language-select') as HTMLSelectElement;\r\n\r\nexport const getAddSnippetEditor = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-editor') as HTMLElement;\r\n\r\nexport const getSnippetTitleInput = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-title-input') as HTMLInputElement;\r\n\r\nexport const getSnippetDescriptionArea = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-description-textarea') as HTMLTextAreaElement;\r\n\r\nexport const getSaveSnippetBtn = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#add-snippet-save-btn') as HTMLButtonElement;\r\n\r\nexport const getSnippetsBtn = (snippetsContainer: HTMLElement) =>\r\n  snippetsContainer.querySelector('#snippets-button') as HTMLButtonElement;\r\n\r\nexport const getBroadcastStatusLabel = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-status') as HTMLElement;\r\n\r\nexport const getBroadcastForm = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-form') as HTMLFormElement;\r\n\r\nexport const getBroadcastServerUrlInput = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-server-url') as HTMLInputElement;\r\n\r\nexport const getBroadcastSourceCheckbox = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-source') as HTMLInputElement;\r\n\r\nexport const getBroadcastBtn = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-btn') as HTMLButtonElement;\r\n\r\nexport const getBroadcastChannelUrlSection = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-channel-url-section') as HTMLElement;\r\n\r\nexport const getBroadcastChannelUrl = (broadcastContainer: HTMLElement) =>\r\n  broadcastContainer.querySelector('#broadcast-channel-url') as HTMLAnchorElement;\r\n\r\nexport const getBroadcastStatusBtn = () =>\r\n  document.querySelector('#broadcast-status-btn') as HTMLElement | null;\r\n\r\nexport const getQrCodeContainer = () => document.querySelector('#qrcode-container') as HTMLElement;\r\n\r\nexport const getEditorSettingsFormatLink = (editorSettingsContainer: HTMLElement) =>\r\n  editorSettingsContainer.querySelector('#editor-settings-format-link') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkNew = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-new') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkOpen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-open') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkImport = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-import') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkDefaultTemplateLi = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('.default-template-li') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkNoDefaultTemplate = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#no-default-template') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkLoadDefault = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-load-default') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkRecentOpen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-recent-open') as HTMLAnchorElement;\r\n\r\nexport const getWelcomeLinkTemplates = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-link-templates') as HTMLAnchorElement;\r\n\r\nexport const getModalShowWelcomeCheckbox = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #show-welcome-checkbox') as HTMLInputElement;\r\n\r\nexport const getModalWelcomeRecover = (welcomeContainer = document) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recover') as HTMLElement;\r\n\r\nexport const getModalWelcomeScreen = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#welcome-screen-container .modal-screen') as HTMLElement;\r\n\r\nexport const getModalWelcomeRecent = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recent') as HTMLElement;\r\n\r\nexport const getModalWelcomeRecentList = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-recent-list') as HTMLElement;\r\n\r\nexport const getModalWelcomeTemplateList = (welcomeContainer: HTMLElement) =>\r\n  welcomeContainer.querySelector('#modal #welcome-template-list') as HTMLElement;\r\n", "/* eslint-disable import/no-internal-modules */\nimport type { createModal } from '../modal';\nimport type { createNotifications } from '../notifications';\nimport type { createEventsManager } from '../events';\nimport type { Stores } from '../storage';\nimport { backupScreen } from '../html';\nimport { base64ToUint8Array, downloadFile, getDate, loadScript } from '../utils/utils';\nimport { jsZipUrl } from '../vendors';\nimport {\n  getBackupBtn,\n  getBackupCheckedInputs,\n  getBackupForm,\n  getBackupLink,\n  getImportFileInput,\n  getImportFileInputLabel,\n} from './selectors';\n\nconst createBackupContainer = (eventsManager: ReturnType<typeof createEventsManager>) => {\n  const div = document.createElement('div');\n  div.innerHTML = backupScreen;\n  const backupContainer = div.firstChild as HTMLElement;\n\n  const tabs = backupContainer.querySelectorAll<HTMLElement>('#backup-tabs li');\n  tabs.forEach((tab) => {\n    eventsManager.addEventListener(tab, 'click', () => {\n      tabs.forEach((t) => t.classList.remove('active'));\n      tab.classList.add('active');\n\n      document.querySelectorAll('#backup-screens > div').forEach((screen) => {\n        screen.classList.remove('active');\n      });\n      const target = backupContainer.querySelector('#' + tab.dataset.target);\n      target?.classList.add('active');\n      target?.querySelector('input')?.focus();\n    });\n  });\n\n  return backupContainer;\n};\n\nconst inProgressMessage = 'In progress...';\nexport const isInProgress = () => getBackupLink()?.dataset.hint === inProgressMessage;\n\nexport const updateProgressStatus = ({\n  inProgress,\n  backupContainer,\n}: {\n  inProgress?: boolean;\n  backupContainer: HTMLElement;\n}) => {\n  const backupLink = getBackupLink();\n  const backupBtn = getBackupBtn(backupContainer);\n  const fileInput = getImportFileInput(backupContainer);\n  const fileInputLabel = getImportFileInputLabel(backupContainer);\n\n  if (inProgress ?? isInProgress()) {\n    if (backupLink) {\n      backupLink.classList.add('hint--bottom');\n      backupLink.dataset.hint = inProgressMessage;\n    }\n    backupBtn.innerText = inProgressMessage;\n    backupBtn.disabled = true;\n    fileInputLabel.innerText = inProgressMessage;\n    fileInput.disabled = true;\n  } else {\n    if (backupLink) {\n      backupLink.classList.remove('hint--bottom');\n      backupLink.dataset.hint = '';\n    }\n    backupBtn.innerText = 'Backup';\n    backupBtn.disabled = false;\n    fileInputLabel.innerText = 'Restore from file';\n    fileInput.disabled = false;\n  }\n};\n\nexport const createBackupUI = ({\n  baseUrl,\n  modal,\n  notifications,\n  eventsManager,\n  stores,\n  deps,\n}: {\n  baseUrl: string;\n  modal: ReturnType<typeof createModal>;\n  notifications: ReturnType<typeof createNotifications>;\n  eventsManager: ReturnType<typeof createEventsManager>;\n  stores: Stores;\n  deps: {\n    loadUserConfig: () => void;\n  };\n}) => {\n  const backupContainer = createBackupContainer(eventsManager);\n  const backupForm = getBackupForm(backupContainer);\n  const fileInput = getImportFileInput(backupContainer);\n\n  updateProgressStatus({ backupContainer });\n\n  const syncModule: Promise<typeof import('../sync/sync')> = import(\n    baseUrl + '{{hash:sync.js}}'\n  ).then((mod) => {\n    mod.init(baseUrl);\n    return mod;\n  });\n\n  interface File {\n    filename: string;\n    content: string;\n  }\n\n  const createZip = async (files: File[]) => {\n    const JSZip: any = await loadScript(jsZipUrl, 'JSZip');\n    const zip = new JSZip();\n\n    files.forEach(({ filename, content }) => {\n      zip.file(filename, content);\n    });\n    const output = await zip.generateAsync({\n      type: 'base64',\n      compression: 'DEFLATE',\n      compressionOptions: {\n        level: 6,\n      },\n    });\n\n    const filename = 'livecodes_backup_' + getDate();\n    const extension = 'zip';\n    const content = 'data:application/zip;base64,' + encodeURIComponent(output);\n    downloadFile(filename, extension, content);\n  };\n\n  const backup = async () => {\n    const storeKeys = [...getBackupCheckedInputs(backupContainer)]\n      .map((input) => input.dataset.store)\n      .filter(Boolean) as Array<keyof Stores>;\n\n    if (storeKeys.length === 0) {\n      notifications.warning('Please select at least one store to backup');\n      return;\n    }\n\n    if (storeKeys.includes('userConfig')) {\n      storeKeys.push('userData');\n      storeKeys.push('appData');\n    }\n\n    const loadedSyncModule = await syncModule;\n\n    const files = await Promise.all(\n      storeKeys\n        .filter((storeKey) => Boolean(stores[storeKey]))\n        .map(async (storeKey) => ({\n          filename: storeKey + '.b64',\n          content: (await loadedSyncModule.exportStoreAsBase64Update({ storeKey })) || '',\n        })),\n    );\n    await createZip(files);\n  };\n\n  const loadFile = (input: HTMLInputElement) =>\n    new Promise<Blob>((resolve, reject) => {\n      if (input.files?.length === 0) return;\n\n      const file = (input.files as FileList)[0];\n\n      if (!file.name.endsWith('.zip')) {\n        reject('Error: Incorrect file type');\n        return;\n      }\n\n      // Max 100 MB allowed\n      const maxSizeAllowed = 100 * 1024 * 1024;\n      if (file.size > maxSizeAllowed) {\n        reject('Error: Exceeded size 100 MB');\n        return;\n      }\n\n      resolve(file);\n    });\n\n  const extractZip = async (blob: Blob): Promise<File[]> => {\n    const JSZip: any = await loadScript(jsZipUrl, 'JSZip');\n\n    const zip = await JSZip.loadAsync(blob);\n    const files: any[] = zip.file(/\\.b64$/);\n    return Promise.all(\n      files.map(async (file) => ({\n        filename: file.name,\n        content: await file.async('string'),\n      })),\n    );\n  };\n\n  const restore = async (files: File[]) => {\n    const loadedSyncModule = await syncModule;\n    const formData = new FormData(backupForm);\n    const mergeCurrent = formData.get('restore-mode') === 'merge';\n\n    for (const file of files) {\n      const storeKey = file.filename.slice(0, -4) as keyof Stores;\n      const storage = (stores as any)[storeKey];\n      if (storage) {\n        const update = base64ToUint8Array(file.content);\n        await loadedSyncModule.restoreFromUpdate({\n          update,\n          storeKey,\n          mergeCurrent,\n        });\n      }\n    }\n    const hasUserConfig = files.find((f) => f.filename.startsWith('user'));\n    if (hasUserConfig) {\n      deps.loadUserConfig();\n    }\n    notifications.success('Restored Successfully!');\n  };\n\n  eventsManager.addEventListener(backupForm, 'submit', async (e) => {\n    e.preventDefault();\n    updateProgressStatus({ inProgress: true, backupContainer });\n    await backup();\n    updateProgressStatus({ inProgress: false, backupContainer });\n  });\n\n  eventsManager.addEventListener(fileInput, 'change', async () => {\n    updateProgressStatus({ inProgress: true, backupContainer });\n    await Promise.resolve(fileInput)\n      .then(loadFile)\n      .then(extractZip)\n      .then(restore)\n      .catch((message) => {\n        notifications.error(message);\n      });\n    updateProgressStatus({ inProgress: false, backupContainer });\n  });\n\n  modal.show(backupContainer, { isAsync: true });\n};\n"],
  "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",
  "names": ["replaceValues", "str", "resultTemplate", "result_default", "appHTML", "app_default", "settingsMenuHTML", "settings_menu_default", "languageInfo", "language_info_default", "customSettingsScreen", "custom_settings_default", "testEditorScreen", "test_editor_default", "importScreen", "import_default", "deployScreen", "deploy_default", "syncScreen", "sync_default", "backupScreen", "backup_default", "broadcastScreen", "broadcast_default", "welcomeScreen", "welcome_default", "aboutScreen", "about_default", "infoScreen", "project_info_default", "resourcesScreen", "external_resources_default", "loginScreen", "login_default", "savePromptScreen", "save_prompt_default", "recoverPromptScreen", "recover_prompt_default", "templatesScreen", "templates_default", "openScreen", "open_default", "assetsScreen", "assets_default", "addAssetScreen", "add_asset_default", "snippetsScreen", "snippets_default", "addSnippetScreen", "add_snippet_default", "shareScreen", "share_default", "embedScreen", "embed_default", "editorSettingsScreen", "editor_settings_default", "resultPopupHTML", "result_popup_default", "safeName", "name", "symbol", "downloadFile", "filename", "extension", "content", "a", "safeName", "loadScript", "url", "name", "resolve", "reject", "script", "removeEventListeners", "onLoad", "onError", "i", "getDate", "date", "offset", "base64ToUint8Array", "str", "c", "moduleCDNs", "npmCDNs", "ghCDNs", "modulesService", "moduleName", "isModule", "defaultCDN", "moduleUrl", "getCdnUrl", "path", "cdn", "getAppCDN", "testModule", "preferredCDN", "cdns", "modName", "post", "i", "TEMPLATES", "pattern", "template", "getUrl", "getModuleUrl", "modulesService", "jsZipUrl", "getUrl", "malinaVersion", "malinaUrl", "getUrl", "getBackupLink", "getImportFileInput", "importContainer", "getImportFileInputLabel", "getBackupForm", "backupContainer", "getBackupBtn", "getBackupCheckedInputs", "createBackupContainer", "eventsManager", "div", "backupScreen", "backupContainer", "tabs", "tab", "t", "screen", "target", "inProgressMessage", "isInProgress", "getBackupLink", "updateProgressStatus", "inProgress", "backupLink", "backupBtn", "getBackupBtn", "fileInput", "getImportFileInput", "fileInputLabel", "getImportFileInputLabel", "createBackupUI", "baseUrl", "modal", "notifications", "stores", "deps", "backupForm", "getBackupForm", "syncModule", "mod", "createZip", "files", "JSZip", "loadScript", "jsZipUrl", "zip", "filename", "content", "output", "getDate", "extension", "downloadFile", "backup", "storeKeys", "getBackupCheckedInputs", "input", "loadedSyncModule", "storeKey", "loadFile", "resolve", "reject", "file", "maxSizeAllowed", "extractZip", "blob", "restore", "mergeCurrent", "update", "base64ToUint8Array", "f", "e", "message"]
}
